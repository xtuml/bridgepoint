.//=====================================================================
.//
.// File:      create_core_plugin.inc
.//
.//=====================================================================
.// Licensed under the Apache License, Version 2.0 (the "License"); you may not
.// use this file except in compliance with the License.  You may obtain a copy
.// of the License at
.//
.//      http://www.apache.org/licenses/LICENSE-2.0
.//
.// Unless required by applicable law or agreed to in writing, software
.// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
.// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the
.// License for the specific language governing permissions and limitations under
.// the License.
.//=====================================================================
.//
.// The function declared below is responsible for creating the core
.// plugin.xml file. It declares all of the object contributions
.// to be shown by the other plugins in their context menus.
.//
.function create_core_plugin
  .param string path
  .//
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<!--
===================================================================

File: ${path}/plugin.xml

WARNING:      Do not edit this generated file
Generated by: ${info.arch_file_name}

===================================================================
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy
of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the
License for the specific language governing permissions and limitations under
the License.
===================================================================

This file is the plugin manifest for the BridgePoint core plugin.

===================================================================
-->
<plugin>
   <extension-point
         id="editors"
         name="BridgePoint Editors"
         schema="schema/org.xtuml.bp.core.editors.exsd"/>

   <extension
         id="org.xtuml.bp.ui.explorer.viewer"
         name="Model Explorer"
         point="org.eclipse.ui.popupMenus">
.select many menu_entries from instances of CME
  .for each menu_entry in menu_entries
    .// Delete and Rename are retargetable actions,
    .// we dont want them apearing elsewhere in the menus.
    .if (menu_entry.Global == false)
      .select one class related by menu_entry->O_OBJ[R2000]
      .invoke cn = get_class_name(class)
      .invoke acn = get_action_class_name(menu_entry)
      .assign action_class_name = "org.xtuml.bp.core.ui.${acn.body}"
      .if(menu_entry.UsesSelectionDialog)
        .assign action_class_name = "org.xtuml.bp.core.ui.actions.${acn.body}"
      .end if
      .assign menubar_path = "org.xtuml.bp.ui.context-internal"
      .if ("$lr{menu_entry.Specialism}" == "new")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.newmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "classes")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.classroot/org.xtuml.bp.ui.newclassmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "components")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.componentroot/org.xtuml.bp.ui.newcomponentmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "exceptions")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.exceptionroot/org.xtuml.bp.ui.newexceptionmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "external")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.externalroot/org.xtuml.bp.ui.newexternalmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "interaction")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.interactionroot/org.xtuml.bp.ui.newinteractionmenu"
      .elif  ("$lr{menu_entry.Specialism}" == "activity")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.activityroot/org.xtuml.bp.ui.newactivitymenu"
      .elif  ("$lr{menu_entry.Specialism}" == "types")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.typeroot/org.xtuml.bp.ui.newtypemenu"
      .elif  ("$lr{menu_entry.Specialism}" == "usecase")
        .assign menubar_path = "org.xtuml.bp.ui.newroot/org.xtuml.bp.ui.usecaseroot/org.xtuml.bp.ui.newusecasemenu"
      .end if
      .assign has_wizard = ""
      .select any wfl from instances of W_WOF where ((selected.Specialism == menu_entry.Specialism) and (selected.Label == menu_entry.Label) and (selected.Key_Lett == menu_entry.Key_Lett))
      .if (not_empty wfl)
        .select any field related by wfl->W_STEP[R2005]->W_FLD[R2009]
        .if ( not_empty field )
          .assign has_wizard = "..."
        .end if
      .end if
      .// if the current menu entry requires the
      .// the selection to contain elements of
      .// different types, we must use the common
      .// supertype of all elements as the object class
      .assign objectClass = cn.body
      .if(menu_entry.requiresHeterogeneousSelection)
        .assign objectClass = "common.NonRootModelElement"
      .end if
	  .assign propertyKey = "nokey"
      <objectContribution
            adaptable="true"
            objectClass="org.xtuml.bp.core.${objectClass}"
            id="${action_class_name}">
         <action
               .if(menu_entry.extraEntryText != "")
                 .if(not menu_entry.UsesSelectionDialog)
               label="${menu_entry.Label}${menu_entry.extraEntryText}"
                   .assign propertyKey = "$r{menu_entry.Label}$r{menu_entry.extraEntryText}"
                   .if ( "${propertyKey}" == "Formalize(NoTargetSelected)" )
                     .assign propertyKey = "nokey"
                   .end if
                 .end if
               .else
                 .if(not menu_entry.UsesSelectionDialog)
               label="${menu_entry.Label}${has_wizard}"
                   .assign propertyKey = "$r{menu_entry.Label}"
                 .end if
               .end if
               .if(menu_entry.UsesSelectionDialog)
                    .if (menu_entry.Specialism == "Generic Package")
                       label="${menu_entry.Label}..."
                       .// We don't allow hiding generated wizard invocations.  So we don't set propertyKey here.
                    .else
                       label="${menu_entry.Specialism} ${menu_entry.Label}..."
                       .// We don't allow hiding generated wizard invocations.  So we don't set propertyKey here.
                    .end if
               .end if
               class="${action_class_name}"
               menubarPath="${menubar_path}"
               .// if the required selection count
               .// is defined use that value for the
               .// enablesFor attribute, otherwise
               .// default to 1
               .if(menu_entry.requiredSelectionCount != "")
               enablesFor="${menu_entry.requiredSelectionCount}"
               .else
               enablesFor="1"
               .end if
               id="${action_class_name}">
         </action>
      .// Special cases for tools that have name collisions
      .if ( "${action_class_name}" == "org.xtuml.bp.core.ui.InteractionComponentOnEP_PKGAction" )
       	.assign propertyKey = "InteractionComponent"
      .elif ( "${action_class_name}" == "org.xtuml.bp.core.ui.InteractionExternalEntityOnEP_PKGAction" )
       	.assign propertyKey = "InteractionExternalEntity"
      .elif ( "${action_class_name}" == "org.xtuml.bp.core.ui.InteractionClassOnEP_PKGAction" )
       	.assign propertyKey = "InteractionClass"
      .end if
      .// end special cases
      .//.select many filter_set related by menu_entry->MEF[R2013]
      .select many filter_set from instances of MEF where (((selected.Specialism == menu_entry.Specialism) and (selected.Label == menu_entry.Label)) and (selected.Key_Lett == menu_entry.Key_Lett))
      .assign filter_set_count = cardinality filter_set
	  .assign use_and = false
	  .if (filter_set_count > 1)
	    .assign use_and = true
	  .end if
	  .if ( ("${propertyKey}" != "nokey") and (filter_set_count > 0) )
	    .assign use_and = true
	  .end if
	  .if ( ("${propertyKey}" != "nokey") or (filter_set_count > 0) )
		 <visibility>
        .if (use_and)
           <and>
        .end if
        .for each filter in filter_set
             <objectState name="${filter.name}" value="${filter.value}" />
        .end for
        .if ( "${propertyKey}" != "nokey" )
             <not>
               <systemProperty name="bridgepoint.${propertyKey}" value="disabled"/>
             </not>
        .end if
        .if (use_and)
           </and>
        .end if
         </visibility>
      .end if
      </objectContribution>
    .end if
  .end for
      <objectContribution
            adaptable="true"
            objectClass="org.xtuml.bp.core.LiteralSymbolicConstant_c"
            id="org.xtuml.bp.core.ui.SetValueOnConstantAction">
         <action
               label="Set Value..."
               class="org.xtuml.bp.core.ui.SetValueOnConstantAction"
               menubarPath="org.xtuml.bp.ui.context-internal"
               enablesFor="1"
               id="org.xtuml.bp.core.ui.SetValueOnConstantAction">
         </action>
      </objectContribution>
      <objectContribution
            adaptable="true"
            objectClass="org.xtuml.bp.core.SystemModel_c"
            id="org.xtuml.bp.core.ui.setprojectprefs">
         <action
               label="Project Preferences"
               class="org.xtuml.bp.core.ui.SetBPProjectPreferencesAction"
               menubarPath="org.xtuml.bp.ui.context-internal"
               enablesFor="1"
               id="org.xtuml.bp.core.ui.SetBPProjectPreferencesAction">
         </action>
      </objectContribution>
      <objectContribution
            adaptable="false"
            id="org.xtuml.bp.core.pullContribution"
            objectClass="org.xtuml.bp.core.SystemModel_c">
         <action
               class="org.xtuml.bp.core.ui.actions.PullSynchronizationChanges"
               id="org.xtuml.bp.core.actions.pullAction"
               icon="icons/checkout_action.gif"
               label="Synchronize with library"
               menubarPath="org.xtuml.bp.ui.context-internal">
         </action>
      </objectContribution>
      <objectContribution
            adaptable="true"
            id="org.xtuml.bp.core.pushContribution"
            objectClass="org.xtuml.bp.core.SystemModel_c">
         <action
               class="org.xtuml.bp.core.ui.actions.PublishSynchronizationChanges"
               id="org.xtuml.bp.core.actions.pushAction"
               icon="icons/checkin_action.gif"
               label="Synchronize references"
               menubarPath="org.xtuml.bp.ui.context-internal">
         </action>
      </objectContribution>
      <objectContribution
            adaptable="true"
            id="org.xtuml.bp.core.builtinEEContribution"
            objectClass="org.xtuml.bp.core.Package_c">
         <action
               class="org.xtuml.bp.core.ui.actions.CreateBuiltInExternalEntitiesAction"
               enablesFor="*"
               id="org.xtuml.bp.core.action1"
               label="Add Built-in External Entities"
               menubarPath="org.xtuml.bp.ui.context-internal">
         </action>
         <visibility>
           <not>
             <systemProperty name="bridgepoint.AddBuiltinExternalEntities" value="disabled"/>
           </not>
         </visibility>
      </objectContribution>
   </extension>
   <extension
      point="org.eclipse.ui.perspectives">
      <perspective
            name="xtUML Modeling"
            class="org.xtuml.bp.core.ui.perspective.BridgePointPerspective"
            icon="icons/green-bp.gif"
            id="org.xtuml.bp.core.perspective">
      </perspective>
   </extension>
   <extension point="org.eclipse.ui.perspectiveExtensions">
     <perspectiveExtension
       targetID="org.eclipse.ui.resourcePerspective">
           <perspectiveShortcut id="org.xtuml.bp.core.perspective"/>
       </perspectiveExtension>
   </extension>
    <extension point="org.eclipse.ui.perspectiveExtensions">
     <perspectiveExtension
       targetID="org.xtuml.builder.PerspectiveFactory">
           <perspectiveShortcut id="org.xtuml.bp.core.perspective"/>
       </perspectiveExtension>
   </extension>
   <extension point="org.eclipse.ui.perspectiveExtensions">
     <perspectiveExtension
       targetID="org.xtuml.debug.ui.DebugPerspective">
           <perspectiveShortcut id="org.xtuml.bp.core.perspective"/>
       </perspectiveExtension>
   </extension>
   <extension point="org.eclipse.ui.preferencePages">
     <page id="org.xtuml.bp.core.root"
           name="xtUML"
           class="org.xtuml.bp.core.ui.preferences.BridgePointPreferences">
     </page>
     <page class="org.xtuml.bp.core.ui.preferences.ActionLanguagePreferences"
           id="org.xtuml.bp.core.ui.preferences.ActionLanguagePreferences"
           name="Action Language"
           category="org.xtuml.bp.core.root">
     </page>
     <page class="org.xtuml.bp.core.ui.preferences.ContentAssistPreferences"
           id="org.xtuml.bp.core.ui.preferences.ContentAssistPreferences"
           name="Content Assist"
           category="org.xtuml.bp.core.ui.preferences.ActionLanguagePreferences">
     </page>
     <page class="org.xtuml.bp.core.ui.preferences.ExportPreferences"
           id="org.xtuml.bp.core.ui.preferences.ExportPreferences"
           name="Model Export"
           category="org.xtuml.bp.core.root">
     </page>
     <page class="org.xtuml.bp.core.ui.preferences.MessageDirectionPreferences"
           id="org.xtuml.bp.core.ui.preferences.MessageDirectionPreferences"
           name="Message Direction"
           category="org.xtuml.bp.core.root">
     </page>       
     <page class="org.xtuml.bp.core.ui.preferences.BuildTranslationPreferences"
           id="org.xtuml.bp.core.ui.preferences.BuildTranslationPreferences"
           name="xtUML Translate"
           category="org.xtuml.bp.core.root">
     </page>
     <page class="org.xtuml.bp.core.ui.preferences.VerifierPreferences"
           id="org.xtuml.bp.core.ui.preferences.VerifierPreferences"
           name="xtUML eXecute"
           category="org.xtuml.bp.core.root">
     </page>       
   </extension>
   <extension id="org.xtuml.bp.core.ui.viewcats"
              name="BridgePoint"
              point="org.eclipse.ui.views">
     <category name="BridgePoint"
               id="org.xtuml.bp.core.ui.viewcats.bp"/>
   </extension>
   <extension
         id="xtumlnature"
         name="BridgePoint xtUML"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run class="org.xtuml.bp.core.XtUMLNature"/>
      </runtime>
   </extension>
   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            natureId="org.xtuml.bp.core.xtumlnature"
            icon="icons/xtuml-nature.gif"
            id="org.xtuml.bp.core.natureimage"/>
   </extension>
	<extension
		point="org.eclipse.ui.menus">
			<menuContribution
				locationURI="popup:org.eclipse.ui.popup.any?after=org.xtuml.bp.ui.context-internal">
				<menu
					id="org.xtuml.bp.core.ui.actions.cardinality"
							label="Cardinality">
				</menu>
				<dynamic
					class="org.xtuml.bp.core.ui.actions.AssociationCardinalityContributionItem"
							id="org.xtuml.bp.core.ui.actions.cardinality.dynamic">
				</dynamic>
			</menuContribution>
	</extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <category
            name="xtUML"
            id="org.xtuml.bp.xtUML"/>
      <wizard
            icon="icons/newsystem.gif"
            class="org.xtuml.bp.core.ui.NewSystemWizard"
            category="org.xtuml.bp.xtUML"
            project="true"
            name="xtUML Project"
            id="org.xtuml.bp.NewWizardSystem">
         <description>
            Create a new xtUML project
         </description>
      </wizard>
   </extension>
   <extension point="org.eclipse.help.contexts">
      <contexts file="contexts/contexts.xml"/>
   </extension>
   <extension point="org.eclipse.help.contexts">
       <contexts file="contexts/contexts.xml" plugin="org.eclipse.ui.ide"/>
   </extension>
      <extension point="org.eclipse.help.contexts">
       <contexts file="contexts/contexts.xml" plugin="org.eclipse.ui"/>
   </extension>
   <extension point="org.eclipse.team.core.fileTypes">
      <fileTypes extension="xtuml" type="binary" />
   </extension>
   <!-- Editor support for routing from file to element -->
   <extension
        point="org.eclipse.ui.editors">
     <editor
           class="org.xtuml.bp.core.ui.editor.RoutingEditor"
           default="false"
           extensions="xtuml"
           id="org.xtuml.bp.core.ui.editor.RoutingEditor"
           name="Routing Editor">
     </editor>
  </extension>
   <!-- Quick Fix for dangling references -->
   <extension point="org.eclipse.ui.ide.markerResolution">
      <markerResolutionGenerator
         markerType="org.eclipse.core.resources.problemmarker"
         class="org.xtuml.bp.core.common.BPQuickFixer"/>
   </extension>
  <!--  Inter-Product Extension Declarations 
  --> 
  <extension-point id="model-compilers" name="xtUML Model Compilers" schema="schema/model-compilers.exsd" /> 
  <extension-point id="code-builders" name="xtUML Code Builders" schema="schema/code-builders.exsd" /> 
  <extension-point id="renameParticipants" name="xtUML Rename Refactoring Participants"  schema="schema/renameParticipants.exsd" />

</plugin>
.end function
.//
.//
.//
