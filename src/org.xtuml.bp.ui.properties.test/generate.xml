<?xml version="1.0" encoding="UTF-8"?>
<project name="bp.ui.properties.test" default="all" basedir=".">
	
  <import file="../MC-Java/common.xml"/>
  	
  <target name="all"
          description="Generate UI Properties Test classes"
          depends="java,readonly_test,test_data,format_java">
  </target>

  <target name="nb_all"
          description="Generate UI Properties Test classes"
          depends="java,readonly_test,test_data">
  </target>

  <property name="plugins-home" value="${ant.home}/../.."/>

  <property environment="env"/>

  <property name="core_sql_dir" value="../org.xtuml.bp.core/sql" />
  <property name="chain_util_path" value="../org.xtuml.bp.core"/>

  <property name="ooaofooa_schema.output" value="ooaofooa_schema.sql" />

  <target name="ooaofooa_schema.depends" >
    <uptodate property="ooaofooa_schema.buildNotNeeded" targetfile="sql/${ooaofooa_schema.output}">
        <srcfiles dir = "${core_sql_dir}" includes = "ooaofooa.sql"/>
        <srcfiles dir = "${mcj_path}" includes = "schema_gen.arc"/>
    </uptodate>
  </target>

  <target name="ooaofooa_schema"
          depends="ooaofooa_schema.depends"
          description="Generate the OOA of OOA Entry schema file"
          unless="ooaofooa_schema.buildNotNeeded" >
    <echo >Generating ${ooaofooa_schema.output} ...</echo>
  <ant antfile="${mcj_path}/build.xml" target="generate.schema" >
    <property name="param1" value="../${core_sql_dir}/ooaofooa.sql" />
    <property name="param2" value="${mcj_path}" />
    <property name="param3" value="FALSE" />
    <property name="param4" value="ooaofooa" />
  </ant>
  <!-- Need to touch the output file for the case where the input data
       changed, but the output didn't -->
  <touch file="sql/${ooaofooa_schema.output}" />
  </target>

  <property name="canvas_sql_dir" value="../org.xtuml.bp.ui.canvas/sql" />
  <property name="ooaofgraphics_schema.output" value="ooaofgraphics_schema.sql" />

  <target name="ooaofgraphics_schema.depends" >
    <uptodate property="ooaofgraphics_schema.buildNotNeeded" targetfile="sql/${ooaofgraphics_schema.output}">
        <srcfiles dir = "${canvas_sql_dir}" includes = "ooaofgraphics.sql"/>
        <srcfiles dir = "${mcj_path}" includes = "schema_gen.arc"/>
    </uptodate>
  </target>

  <target name="ooaofgraphics_schema"
          depends="ooaofgraphics_schema.depends"
          description="Generate the OOA of OOA Entry schema file"
          unless="ooaofgraphics_schema.buildNotNeeded" >
    <echo >Generating ${ooaofgraphics_schema.output} ...</echo>
  <ant antfile="${mcj_path}/build.xml" target="generate.schema" >
    <property name="param1" value="../${canvas_sql_dir}/ooaofgraphics.sql" />
    <property name="param2" value="${mcj_path}" />
    <property name="param3" value="FALSE" />
    <property name="param4" value="ooaofgraphics" />
  </ant>
  <!-- Need to touch the output file for the case where the input data
       changed, but the output didn't -->
  <touch file="sql/${ooaofgraphics_schema.output}" />
  </target>

  <target name="java.depends" >
    <uptodate property="java.buildNotNeeded" targetfile="src/org/xtuml/bp/ui/properties/test/PropertiesViewTest.java">
       <srcfiles dir = "${core_sql_dir}" includes = "ooaofooa.sql,ooaofooa_hierarchy_schema.sql,ooaofooa_hierarchy.pei.sql" />
       <srcfiles dir = "${canvas_sql_dir}" includes = "ooaofgraphics.sql" />
       <srcfiles dir = "arc"        includes = "create_view_test.arc" />
       <srcfiles dir = "sql"        includes = "proxy_schema.sql,${ooaofooa_schema.output}" />
       <srcfiles dir = "sql"   		includes = "${ooaofgraphics_schema.output}" />
       <srcfiles dir = "${mcj_path}" includes = "arch_utils.inc"/>
    </uptodate>
  </target>

  <target name="java"
          depends="ooaofooa_schema, ooaofgraphics_schema, java.depends"
          description="Generate the Properties Test files"
          unless="java.buildNotNeeded" >
    <echo >Generating Properties Test class ...</echo>
    <exec vmlauncher="false" failonerror="true" executable="${xtumlmc_build}" >
        <env key="PTC_MC_ARC_DIR" value="${mcj_path}"/>
        <env key="XTUMLMC_HOME" value="${util_bin_dir}/../../" />
    <arg line="xtumlmc_gen_erate -nopersist
      -import sql/${ooaofooa_schema.output}
      -import sql/${ooaofgraphics_schema.output}
      -import ${core_sql_dir}/ooaofooa_hierarchy_schema.sql
            -import sql/proxy_schema.sql
      -import ${core_sql_dir}/ooaofooa.sql
      -import ${core_sql_dir}/ooaofooa_hierarchy.pei.sql
      -arch arc/create_view_test.arc" />
  </exec>
    <delete file="____file.txt" />
    <delete file="key_lett.txt" />
    <delete file="rel_chain.txt" />
    <delete file="rel_num.txt" />
    <delete file="remainder.txt" />
  </target>

    <target name="readonly_test.depends" >
      <uptodate property="readonly.buildNotNeeded" targetfile="src/org/xtuml/bp/ui/properties/test/PropertiesViewReadOnlyTest.java">
         <srcfiles dir = "${core_sql_dir}" includes = "ooaofooa.sql,ooaofooa_hierarchy_schema.sql,ooaofooa_hierarchy.pei.sql" />
         <srcfiles dir = "${canvas_sql_dir}" includes = "ooaofgraphics.sql" />
         <srcfiles dir = "arc"        includes = "create_readonly_view_test.arc" />
         <srcfiles dir = "sql"        includes = "${ooaofooa_schema.output}" />
         <srcfiles dir = "sql"   		includes = "${ooaofgraphics_schema.output}" />
         <srcfiles dir = "${mcj_path}" includes = "arch_utils.inc"/>
      </uptodate>
    </target>

    <target name="readonly_test"
            depends="ooaofooa_schema, ooaofgraphics_schema, readonly_test.depends"
            description="Generate the Properties Read Only Test files"
            unless="readonly.buildNotNeeded" >
      <echo >Generating Properties Read Only Test class ...</echo>
      <exec vmlauncher="false" failonerror="true" executable="${xtumlmc_build}" >
          <env key="PTC_MC_ARC_DIR" value="${mcj_path}"/>
          <env key="XTUMLMC_HOME" value="${util_bin_dir}/../../" />
      <arg line="xtumlmc_gen_erate -nopersist
        -import sql/${ooaofooa_schema.output}
        -d 0 -import sql/${ooaofgraphics_schema.output}
        -import ${core_sql_dir}/ooaofooa_hierarchy_schema.sql
        -import ${core_sql_dir}/ooaofooa.sql
        -import ${core_sql_dir}/ooaofooa_hierarchy.pei.sql
        -arch arc/create_readonly_view_test.arc" />
    </exec>
      <delete file="____file.txt" />
      <delete file="key_lett.txt" />
      <delete file="rel_chain.txt" />
      <delete file="rel_num.txt" />
      <delete file="remainder.txt" />
    </target>

  <property name="sql.input.dir" value="models/org.xtuml.bp.ui.properties.test/" />
  <property name="sql.output" value= "testProp.sql" />

    <property name="subsystems_to_remove" value="ACT_ V_ E_ GD_ CT_ TS_ DIM_ STY_" />

      <target name="sql.depends" >
      <uptodate property="sql.buildNotNeeded" value="yes" targetfile="sql/${sql.output}" >
           <srcfiles dir="${sql.input.dir}" includes="**/*.xtuml" />
        </uptodate>
    </target>

    <target name="sql" depends="sql.depends"
            description="Generate the sql version of testProp model"
            unless="sql.buildNotNeeded" >
      <echo >Generating ${sql.output} ...</echo>
    <copy todir="models/org.xtuml.bp.ui.properties.test/Datatypes/">
    	<fileset dir="../org.xtuml.bp.pkg/globals"><filename name="Globals.xtuml"/></fileset>   	
    </copy>
    <exec vmlauncher="false" failonerror="true" executable="${xtumlmc_build}" >
      <arg line="xtumlmc_cleanse_for_BridgePoint
            ${sql.input.dir}
      ${basedir}/sql/${sql.output}
      ${subsystems_to_remove}"/>
    </exec>
    </target>

  <target name="test_data.depends" >
    <uptodate property="test_data.buildNotNeeded" targetfile="src/org/xtuml/bp/ui/properties/test/PropertiesViewTestData.java">
       <srcfiles dir = "sql" includes = "proxy_schema.sql,${sql.output}" />
       <srcfiles dir = "arc"        includes = "create_view_test_data.arc" />
       <srcfiles dir = "${mcj_path}" includes = "ooa_schema.sql,arch_utils.inc"/>
    </uptodate>
  </target>

  <target name="test_data"
          depends="test_data.depends, sql"
          description="Generate the Properties Test Data file"
          unless="test_data.buildNotNeeded" >
    <echo >Generating Test Data files ...</echo>
    <exec vmlauncher="false" failonerror="true" executable="${xtumlmc_build}" >
        <env key="PTC_MC_ARC_DIR" value="${mcj_path}"/>
        <env key="CHAIN_UTIL_DIR" value="${chain_util_path}"/>
        <env key="XTUMLMC_HOME" value="${util_bin_dir}/../../" />
    <arg line="xtumlmc_gen_erate -nopersist
            -import sql/proxy_schema.sql
      -import sql/ooaofooa_schema.sql
      -import sql/ooaofgraphics_schema.sql
      -import sql/${sql.output}
      -arch arc/create_view_test_data.arc" />
  </exec>
    <delete file="____file.txt" />
    <delete file="key_lett.txt" />
    <delete file="rel_chain.txt" />
    <delete file="rel_num.txt" />
    <delete file="remainder.txt" />
  	<delete file="models/org.xtuml.bp.ui.properties.test/Datatypes/Globals.xtuml" />
  </target>

  <property name="cvs_java_files" value="EnumRangeTest.java,IsAllowedTypeTest.java,
      NumberRangeTest.java,PropertiesTest.java, PropertiesGlobalTest.java,
      PropertiesTestPlugin.java,DeleteUDTWithPropertyShowing.java,
      PropertiesViewTest2.java, PropertiesUtil.java, RefreshTestProp.java,
  	  PropertiesGlobalsTest.java, PropertiesRenameTests.java,ElementOrderingTest.java" />

  <target name="format_java"
        description="Format the generated java source" >
    <taskdef name="PTCodeFormat" classname="PTCodeFormatterTask" >
        <classpath>
            <pathelement path="../org.xtuml.bp.core/tools/" />
            <fileset dir="${plugins-home}/plugins" casesensitive="yes">
                <include name="**/org.eclipse.text_*.jar" />
                <include name="**/org.eclipse.ui_*.jar" />
                <include name="**/org.eclipse.jdt.core_*.jar" />
                <include name="**/org.eclipse.core.runtime_*.jar" />
                <include name="**/org.eclipse.osgi_*.jar" />
                <include name="**/org.eclipse.core.resources_*.jar" />
                <include name="**/org.eclipse.equinox.common_*.jar" />
            </fileset>
        </classpath>
    </taskdef>
        <PTCodeFormat>
          <fileset dir="src/org/xtuml/bp/ui/properties/test" includes="PropertiesViewTest.java" />
          <fileset dir="src/org/xtuml/bp/ui/properties/test" includes="PropertiesViewTestData.java" />
          <fileset dir="src/org/xtuml/bp/ui/properties/test" includes="PropertiesViewReadOnlyTest.java" />
        </PTCodeFormat>
  </target>

  <!-- CLEAN TARGETS -->

  <target name="clean_all"
        description="Clean entire project"
        depends="clean_classes, clean_source, clean_sqls, clean_arcs" >

    <echo>Done cleaning for ${ant.project.name}</echo>

  </target>

  <target name="clean_source"
        description="Remove the java source files" >

    <echo>Removing generated java files...</echo>
    <delete verbose="true" dir="src/org/xtuml/bp/ui/properties/test" excludes="${cvs_java_files}"/>

  </target>

  <target name="clean_classes"
          description="Remove all compiled class files." >

  <echo>Removing all compiled class files ...</echo>
  <delete verbose="true" dir="bin" />

  </target>

  <target name="clean_arcs">
  	<echo>Removing generated archetypes...</echo>
  	<delete verbose="true" file="arc/create_view_test_data.arc" />
  </target>
  
  <target name="clean_sqls"
          description="Remove all generated sql files." >

  <echo>Removing all generated sql files ...</echo>
  <delete verbose="true" file= "sql/${ooaofooa_schema.output}" />
    <delete verbose="true" file= "sql/${ooaofgraphics_schema.output}" />
    <delete verbose="true" file= "sql/${sql.output}" />

  </target>
</project>
