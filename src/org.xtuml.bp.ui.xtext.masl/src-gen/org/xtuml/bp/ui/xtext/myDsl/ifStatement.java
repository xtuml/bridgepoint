/**
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.ui.xtext.myDsl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>if Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getC <em>C</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getS <em>S</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getE1 <em>E1</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getE2 <em>E2</em>}</li>
 * </ul>
 *
 * @see org.xtuml.bp.ui.xtext.myDsl.MyDslPackage#getifStatement()
 * @model
 * @generated
 */
public interface ifStatement extends EObject
{
  /**
   * Returns the value of the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>C</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>C</em>' containment reference.
   * @see #setC(condition)
   * @see org.xtuml.bp.ui.xtext.myDsl.MyDslPackage#getifStatement_C()
   * @model containment="true"
   * @generated
   */
  condition getC();

  /**
   * Sets the value of the '{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getC <em>C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>C</em>' containment reference.
   * @see #getC()
   * @generated
   */
  void setC(condition value);

  /**
   * Returns the value of the '<em><b>S</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>S</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>S</em>' containment reference.
   * @see #setS(statementList)
   * @see org.xtuml.bp.ui.xtext.myDsl.MyDslPackage#getifStatement_S()
   * @model containment="true"
   * @generated
   */
  statementList getS();

  /**
   * Sets the value of the '{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getS <em>S</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>S</em>' containment reference.
   * @see #getS()
   * @generated
   */
  void setS(statementList value);

  /**
   * Returns the value of the '<em><b>E1</b></em>' containment reference list.
   * The list contents are of type {@link org.xtuml.bp.ui.xtext.myDsl.elsifBlock}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>E1</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>E1</em>' containment reference list.
   * @see org.xtuml.bp.ui.xtext.myDsl.MyDslPackage#getifStatement_E1()
   * @model containment="true"
   * @generated
   */
  EList<elsifBlock> getE1();

  /**
   * Returns the value of the '<em><b>E2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>E2</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>E2</em>' containment reference.
   * @see #setE2(elseBlock)
   * @see org.xtuml.bp.ui.xtext.myDsl.MyDslPackage#getifStatement_E2()
   * @model containment="true"
   * @generated
   */
  elseBlock getE2();

  /**
   * Sets the value of the '{@link org.xtuml.bp.ui.xtext.myDsl.ifStatement#getE2 <em>E2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>E2</em>' containment reference.
   * @see #getE2()
   * @generated
   */
  void setE2(elseBlock value);

} // ifStatement
