/**
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.ui.xtext.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtuml.bp.ui.xtext.myDsl.MyDslPackage;
import org.xtuml.bp.ui.xtext.myDsl.linkStatement;
import org.xtuml.bp.ui.xtext.myDsl.navigateExpression;
import org.xtuml.bp.ui.xtext.myDsl.relationshipSpec;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>link Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.impl.linkStatementImpl#getN1 <em>N1</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.impl.linkStatementImpl#getR <em>R</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.impl.linkStatementImpl#getN2 <em>N2</em>}</li>
 *   <li>{@link org.xtuml.bp.ui.xtext.myDsl.impl.linkStatementImpl#getN3 <em>N3</em>}</li>
 * </ul>
 *
 * @generated
 */
public class linkStatementImpl extends MinimalEObjectImpl.Container implements linkStatement
{
  /**
   * The cached value of the '{@link #getN1() <em>N1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN1()
   * @generated
   * @ordered
   */
  protected navigateExpression n1;

  /**
   * The cached value of the '{@link #getR() <em>R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR()
   * @generated
   * @ordered
   */
  protected relationshipSpec r;

  /**
   * The cached value of the '{@link #getN2() <em>N2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN2()
   * @generated
   * @ordered
   */
  protected navigateExpression n2;

  /**
   * The cached value of the '{@link #getN3() <em>N3</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN3()
   * @generated
   * @ordered
   */
  protected navigateExpression n3;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected linkStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.LINK_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public navigateExpression getN1()
  {
    return n1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetN1(navigateExpression newN1, NotificationChain msgs)
  {
    navigateExpression oldN1 = n1;
    n1 = newN1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N1, oldN1, newN1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setN1(navigateExpression newN1)
  {
    if (newN1 != n1)
    {
      NotificationChain msgs = null;
      if (n1 != null)
        msgs = ((InternalEObject)n1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N1, null, msgs);
      if (newN1 != null)
        msgs = ((InternalEObject)newN1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N1, null, msgs);
      msgs = basicSetN1(newN1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N1, newN1, newN1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public relationshipSpec getR()
  {
    return r;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetR(relationshipSpec newR, NotificationChain msgs)
  {
    relationshipSpec oldR = r;
    r = newR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__R, oldR, newR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setR(relationshipSpec newR)
  {
    if (newR != r)
    {
      NotificationChain msgs = null;
      if (r != null)
        msgs = ((InternalEObject)r).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__R, null, msgs);
      if (newR != null)
        msgs = ((InternalEObject)newR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__R, null, msgs);
      msgs = basicSetR(newR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__R, newR, newR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public navigateExpression getN2()
  {
    return n2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetN2(navigateExpression newN2, NotificationChain msgs)
  {
    navigateExpression oldN2 = n2;
    n2 = newN2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N2, oldN2, newN2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setN2(navigateExpression newN2)
  {
    if (newN2 != n2)
    {
      NotificationChain msgs = null;
      if (n2 != null)
        msgs = ((InternalEObject)n2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N2, null, msgs);
      if (newN2 != null)
        msgs = ((InternalEObject)newN2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N2, null, msgs);
      msgs = basicSetN2(newN2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N2, newN2, newN2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public navigateExpression getN3()
  {
    return n3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetN3(navigateExpression newN3, NotificationChain msgs)
  {
    navigateExpression oldN3 = n3;
    n3 = newN3;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N3, oldN3, newN3);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setN3(navigateExpression newN3)
  {
    if (newN3 != n3)
    {
      NotificationChain msgs = null;
      if (n3 != null)
        msgs = ((InternalEObject)n3).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N3, null, msgs);
      if (newN3 != null)
        msgs = ((InternalEObject)newN3).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK_STATEMENT__N3, null, msgs);
      msgs = basicSetN3(newN3, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK_STATEMENT__N3, newN3, newN3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK_STATEMENT__N1:
        return basicSetN1(null, msgs);
      case MyDslPackage.LINK_STATEMENT__R:
        return basicSetR(null, msgs);
      case MyDslPackage.LINK_STATEMENT__N2:
        return basicSetN2(null, msgs);
      case MyDslPackage.LINK_STATEMENT__N3:
        return basicSetN3(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK_STATEMENT__N1:
        return getN1();
      case MyDslPackage.LINK_STATEMENT__R:
        return getR();
      case MyDslPackage.LINK_STATEMENT__N2:
        return getN2();
      case MyDslPackage.LINK_STATEMENT__N3:
        return getN3();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK_STATEMENT__N1:
        setN1((navigateExpression)newValue);
        return;
      case MyDslPackage.LINK_STATEMENT__R:
        setR((relationshipSpec)newValue);
        return;
      case MyDslPackage.LINK_STATEMENT__N2:
        setN2((navigateExpression)newValue);
        return;
      case MyDslPackage.LINK_STATEMENT__N3:
        setN3((navigateExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK_STATEMENT__N1:
        setN1((navigateExpression)null);
        return;
      case MyDslPackage.LINK_STATEMENT__R:
        setR((relationshipSpec)null);
        return;
      case MyDslPackage.LINK_STATEMENT__N2:
        setN2((navigateExpression)null);
        return;
      case MyDslPackage.LINK_STATEMENT__N3:
        setN3((navigateExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK_STATEMENT__N1:
        return n1 != null;
      case MyDslPackage.LINK_STATEMENT__R:
        return r != null;
      case MyDslPackage.LINK_STATEMENT__N2:
        return n2 != null;
      case MyDslPackage.LINK_STATEMENT__N3:
        return n3 != null;
    }
    return super.eIsSet(featureID);
  }

} //linkStatementImpl
