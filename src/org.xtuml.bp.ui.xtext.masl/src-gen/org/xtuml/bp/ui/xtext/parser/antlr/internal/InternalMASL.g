/*
 * generated by Xtext 2.9.1
 */
grammar InternalMASL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtuml.bp.ui.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtuml.bp.ui.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtuml.bp.ui.xtext.services.MASLGrammarAccess;

}

@parser::members {

 	private MASLGrammarAccess grammarAccess;

    public InternalMASLParser(TokenStream input, MASLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "definition";
   	}

   	@Override
   	protected MASLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuledefinition
entryRuledefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruledefinition=ruledefinition
	{ $current=$iv_ruledefinition.current; }
	EOF;

// Rule definition
ruledefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getObjectServiceDefinitionParserRuleCall_0());
		}
		this_objectServiceDefinition_0=ruleobjectServiceDefinition
		{
			$current = $this_objectServiceDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getObjectFunctionDefinitionParserRuleCall_1());
		}
		this_objectFunctionDefinition_1=ruleobjectFunctionDefinition
		{
			$current = $this_objectFunctionDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getStateDefinitionParserRuleCall_2());
		}
		this_stateDefinition_2=rulestateDefinition
		{
			$current = $this_stateDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getDomainServiceDefinitionParserRuleCall_3());
		}
		this_domainServiceDefinition_3=ruledomainServiceDefinition
		{
			$current = $this_domainServiceDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getDomainFunctionDefinitionParserRuleCall_4());
		}
		this_domainFunctionDefinition_4=ruledomainFunctionDefinition
		{
			$current = $this_domainFunctionDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getTerminatorServiceDefinitionParserRuleCall_5());
		}
		this_terminatorServiceDefinition_5=ruleterminatorServiceDefinition
		{
			$current = $this_terminatorServiceDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getTerminatorFunctionDefinitionParserRuleCall_6());
		}
		this_terminatorFunctionDefinition_6=ruleterminatorFunctionDefinition
		{
			$current = $this_terminatorFunctionDefinition_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledomainName
entryRuledomainName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDomainNameRule()); }
	iv_ruledomainName=ruledomainName
	{ $current=$iv_ruledomainName.current.getText(); }
	EOF;

// Rule domainName
ruledomainName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDomainNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleexceptionName
entryRuleexceptionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExceptionNameRule()); }
	iv_ruleexceptionName=ruleexceptionName
	{ $current=$iv_ruleexceptionName.current.getText(); }
	EOF;

// Rule exceptionName
ruleexceptionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExceptionNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuletypeReference
entryRuletypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruletypeReference=ruletypeReference
	{ $current=$iv_ruletypeReference.current; }
	EOF;

// Rule typeReference
ruletypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getNamedTypeRefParserRuleCall_0_1());
			}
			rulenamedTypeRef
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getInstanceTypeRefParserRuleCall_1_1());
			}
			ruleinstanceTypeRef
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeReferenceAccess().getCCollectionTypeRefParserRuleCall_2_0());
				}
				lv_c_4_0=rulecollectionTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
					}
					set(
						$current,
						"c",
						lv_c_4_0,
						"org.xtuml.bp.ui.xtext.MASL.collectionTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_3_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getDeprecatedTypeParserRuleCall_3_1());
			}
			ruledeprecatedType
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuletypeReferenceWithCA
entryRuletypeReferenceWithCA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceWithCARule()); }
	iv_ruletypeReferenceWithCA=ruletypeReferenceWithCA
	{ $current=$iv_ruletypeReferenceWithCA.current; }
	EOF;

// Rule typeReferenceWithCA
ruletypeReferenceWithCA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeReferenceWithCAAccess().getTypeReferenceParserRuleCall_0());
		}
		this_typeReference_0=ruletypeReference
		{
			$current = $this_typeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceWithCAAccess().getConstrainedArrayTypeRefParserRuleCall_1());
		}
		this_constrainedArrayTypeRef_1=ruleconstrainedArrayTypeRef
		{
			$current = $this_constrainedArrayTypeRef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledeprecatedType
entryRuledeprecatedType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDeprecatedTypeRule()); }
	iv_ruledeprecatedType=ruledeprecatedType
	{ $current=$iv_ruledeprecatedType.current.getText(); }
	EOF;

// Rule deprecatedType
ruledeprecatedType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INSTANCE_0=RULE_INSTANCE
		{
			$current.merge(this_INSTANCE_0);
		}
		{
			newLeafNode(this_INSTANCE_0, grammarAccess.getDeprecatedTypeAccess().getINSTANCETerminalRuleCall_0());
		}
		    |
		this_EVENT_1=RULE_EVENT
		{
			$current.merge(this_EVENT_1);
		}
		{
			newLeafNode(this_EVENT_1, grammarAccess.getDeprecatedTypeAccess().getEVENTTerminalRuleCall_1());
		}
		    |
		this_SERVICE_2=RULE_SERVICE
		{
			$current.merge(this_SERVICE_2);
		}
		{
			newLeafNode(this_SERVICE_2, grammarAccess.getDeprecatedTypeAccess().getSERVICETerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulequalifiedObjectName
entryRulequalifiedObjectName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedObjectNameRule()); }
	iv_rulequalifiedObjectName=rulequalifiedObjectName
	{ $current=$iv_rulequalifiedObjectName.current.getText(); }
	EOF;

// Rule qualifiedObjectName
rulequalifiedObjectName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQualifiedObjectNameAccess().getDomainNameParserRuleCall_0_0());
			}
			this_domainName_0=ruledomainName
			{
				$current.merge(this_domainName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_SCOPE_1=RULE_SCOPE
			{
				$current.merge(this_SCOPE_1);
			}
			{
				newLeafNode(this_SCOPE_1, grammarAccess.getQualifiedObjectNameAccess().getSCOPETerminalRuleCall_0_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getQualifiedObjectNameAccess().getObjectNameParserRuleCall_1());
		}
		this_objectName_2=ruleobjectName
		{
			$current.merge(this_objectName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleinstanceTypeRef
entryRuleinstanceTypeRef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInstanceTypeRefRule()); }
	iv_ruleinstanceTypeRef=ruleinstanceTypeRef
	{ $current=$iv_ruleinstanceTypeRef.current.getText(); }
	EOF;

// Rule instanceTypeRef
ruleinstanceTypeRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ANONYMOUS_0=RULE_ANONYMOUS
			{
				$current.merge(this_ANONYMOUS_0);
			}
			{
				newLeafNode(this_ANONYMOUS_0, grammarAccess.getInstanceTypeRefAccess().getANONYMOUSTerminalRuleCall_0());
			}
		)?
		this_INSTANCE_1=RULE_INSTANCE
		{
			$current.merge(this_INSTANCE_1);
		}
		{
			newLeafNode(this_INSTANCE_1, grammarAccess.getInstanceTypeRefAccess().getINSTANCETerminalRuleCall_1());
		}
		this_OF_2=RULE_OF
		{
			$current.merge(this_OF_2);
		}
		{
			newLeafNode(this_OF_2, grammarAccess.getInstanceTypeRefAccess().getOFTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getInstanceTypeRefAccess().getQualifiedObjectNameParserRuleCall_3());
		}
		this_qualifiedObjectName_3=rulequalifiedObjectName
		{
			$current.merge(this_qualifiedObjectName_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulenamedTypeRef
entryRulenamedTypeRef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamedTypeRefRule()); }
	iv_rulenamedTypeRef=rulenamedTypeRef
	{ $current=$iv_rulenamedTypeRef.current.getText(); }
	EOF;

// Rule namedTypeRef
rulenamedTypeRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ANONYMOUS_0=RULE_ANONYMOUS
			{
				$current.merge(this_ANONYMOUS_0);
			}
			{
				newLeafNode(this_ANONYMOUS_0, grammarAccess.getNamedTypeRefAccess().getANONYMOUSTerminalRuleCall_0());
			}
		)?
		(
			{
				newCompositeNode(grammarAccess.getNamedTypeRefAccess().getDomainNameParserRuleCall_1_0());
			}
			this_domainName_1=ruledomainName
			{
				$current.merge(this_domainName_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_SCOPE_2=RULE_SCOPE
			{
				$current.merge(this_SCOPE_2);
			}
			{
				newLeafNode(this_SCOPE_2, grammarAccess.getNamedTypeRefAccess().getSCOPETerminalRuleCall_1_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getNamedTypeRefAccess().getTypeNameParserRuleCall_2());
		}
		this_typeName_3=ruletypeName
		{
			$current.merge(this_typeName_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleuserDefinedTypeRef
entryRuleuserDefinedTypeRef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUserDefinedTypeRefRule()); }
	iv_ruleuserDefinedTypeRef=ruleuserDefinedTypeRef
	{ $current=$iv_ruleuserDefinedTypeRef.current.getText(); }
	EOF;

// Rule userDefinedTypeRef
ruleuserDefinedTypeRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUserDefinedTypeRefAccess().getDomainNameParserRuleCall_0_0());
			}
			this_domainName_0=ruledomainName
			{
				$current.merge(this_domainName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_SCOPE_1=RULE_SCOPE
			{
				$current.merge(this_SCOPE_1);
			}
			{
				newLeafNode(this_SCOPE_1, grammarAccess.getUserDefinedTypeRefAccess().getSCOPETerminalRuleCall_0_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getUserDefinedTypeRefAccess().getTypeNameParserRuleCall_1());
		}
		this_typeName_2=ruletypeName
		{
			$current.merge(this_typeName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleconstrainedArrayTypeRef
entryRuleconstrainedArrayTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrainedArrayTypeRefRule()); }
	iv_ruleconstrainedArrayTypeRef=ruleconstrainedArrayTypeRef
	{ $current=$iv_ruleconstrainedArrayTypeRef.current; }
	EOF;

// Rule constrainedArrayTypeRef
ruleconstrainedArrayTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstrainedArrayTypeRefAccess().getUserDefinedTypeRefParserRuleCall_0());
		}
		ruleuserDefinedTypeRef
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getConstrainedArrayTypeRefAccess().getArrayBoundsParserRuleCall_1());
		}
		this_arrayBounds_1=rulearrayBounds
		{
			$current = $this_arrayBounds_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuletypeName
entryRuletypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruletypeName=ruletypeName
	{ $current=$iv_ruletypeName.current.getText(); }
	EOF;

// Rule typeName
ruletypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTypeNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulearrayBounds
entryRulearrayBounds returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayBoundsRule()); }
	iv_rulearrayBounds=rulearrayBounds
	{ $current=$iv_rulearrayBounds.current; }
	EOF;

// Rule arrayBounds
rulearrayBounds returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LPAREN_0=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_0, grammarAccess.getArrayBoundsAccess().getLPARENTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayBoundsAccess().getEExpressionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayBoundsRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_RPAREN_2=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_2, grammarAccess.getArrayBoundsAccess().getRPARENTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulecollectionTypeRef
entryRulecollectionTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeRefRule()); }
	iv_rulecollectionTypeRef=rulecollectionTypeRef
	{ $current=$iv_rulecollectionTypeRef.current; }
	EOF;

// Rule collectionTypeRef
rulecollectionTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_ANONYMOUS_0=RULE_ANONYMOUS
				{
					newLeafNode(this_ANONYMOUS_0, grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_0_0());
				}
			)?
			this_SEQUENCE_1=RULE_SEQUENCE
			{
				newLeafNode(this_SEQUENCE_1, grammarAccess.getCollectionTypeRefAccess().getSEQUENCETerminalRuleCall_0_1());
			}
			(
				this_LPAREN_2=RULE_LPAREN
				{
					newLeafNode(this_LPAREN_2, grammarAccess.getCollectionTypeRefAccess().getLPARENTerminalRuleCall_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getEExpressionParserRuleCall_0_2_1_0());
						}
						lv_e_3_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
							}
							set(
								$current,
								"e",
								lv_e_3_0,
								"org.xtuml.bp.ui.xtext.MASL.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RPAREN_4=RULE_RPAREN
				{
					newLeafNode(this_RPAREN_4, grammarAccess.getCollectionTypeRefAccess().getRPARENTerminalRuleCall_0_2_2());
				}
			)?
			this_OF_5=RULE_OF
			{
				newLeafNode(this_OF_5, grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_0_4_0());
					}
					lv_t_6_0=ruletypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
						}
						set(
							$current,
							"t",
							lv_t_6_0,
							"org.xtuml.bp.ui.xtext.MASL.typeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				this_ANONYMOUS_7=RULE_ANONYMOUS
				{
					newLeafNode(this_ANONYMOUS_7, grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_1_0());
				}
			)?
			this_ARRAY_8=RULE_ARRAY
			{
				newLeafNode(this_ARRAY_8, grammarAccess.getCollectionTypeRefAccess().getARRAYTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getAArrayBoundsParserRuleCall_1_2_0());
					}
					lv_a_9_0=rulearrayBounds
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
						}
						set(
							$current,
							"a",
							lv_a_9_0,
							"org.xtuml.bp.ui.xtext.MASL.arrayBounds");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_OF_10=RULE_OF
			{
				newLeafNode(this_OF_10, grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_1_4_0());
					}
					lv_t_11_0=ruletypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
						}
						set(
							$current,
							"t",
							lv_t_11_0,
							"org.xtuml.bp.ui.xtext.MASL.typeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				this_ANONYMOUS_12=RULE_ANONYMOUS
				{
					newLeafNode(this_ANONYMOUS_12, grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_2_0());
				}
			)?
			this_SET_13=RULE_SET
			{
				newLeafNode(this_SET_13, grammarAccess.getCollectionTypeRefAccess().getSETTerminalRuleCall_2_1());
			}
			this_OF_14=RULE_OF
			{
				newLeafNode(this_OF_14, grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_2_3_0());
					}
					lv_t_15_0=ruletypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
						}
						set(
							$current,
							"t",
							lv_t_15_0,
							"org.xtuml.bp.ui.xtext.MASL.typeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				this_ANONYMOUS_16=RULE_ANONYMOUS
				{
					newLeafNode(this_ANONYMOUS_16, grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_3_0());
				}
			)?
			this_BAG_17=RULE_BAG
			{
				newLeafNode(this_BAG_17, grammarAccess.getCollectionTypeRefAccess().getBAGTerminalRuleCall_3_1());
			}
			this_OF_18=RULE_OF
			{
				newLeafNode(this_OF_18, grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_3_3_0());
					}
					lv_t_19_0=ruletypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
						}
						set(
							$current,
							"t",
							lv_t_19_0,
							"org.xtuml.bp.ui.xtext.MASL.typeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCollectionTypeRefAccess().getCollectionTypeRefAction_4_0(),
						$current);
				}
			)
			(
				this_ANONYMOUS_21=RULE_ANONYMOUS
				{
					newLeafNode(this_ANONYMOUS_21, grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_4_1());
				}
			)?
			this_DICTIONARY_22=RULE_DICTIONARY
			{
				newLeafNode(this_DICTIONARY_22, grammarAccess.getCollectionTypeRefAccess().getDICTIONARYTerminalRuleCall_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getDictKeyTypeParserRuleCall_4_3_0());
					}
					this_dictKeyType_23=ruledictKeyType
					{
						$current = $this_dictKeyType_23.current;
						afterParserOrEnumRuleCall();
					}
				)?
				this_OF_24=RULE_OF
				{
					newLeafNode(this_OF_24, grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_4_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeRefAccess().getDDictValueTypeParserRuleCall_4_3_2_0());
						}
						lv_d_25_0=ruledictValueType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeRefRule());
							}
							set(
								$current,
								"d",
								lv_d_25_0,
								"org.xtuml.bp.ui.xtext.MASL.dictValueType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuledictKeyType
entryRuledictKeyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDictKeyTypeRule()); }
	iv_ruledictKeyType=ruledictKeyType
	{ $current=$iv_ruledictKeyType.current; }
	EOF;

// Rule dictKeyType
ruledictKeyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDictKeyTypeAccess().getNNamedTypeRefParserRuleCall_0_0());
				}
				lv_n_0_0=rulenamedTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDictKeyTypeRule());
					}
					set(
						$current,
						"n",
						lv_n_0_0,
						"org.xtuml.bp.ui.xtext.MASL.namedTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDictKeyTypeAccess().getIInstanceTypeRefParserRuleCall_1_0());
				}
				lv_i_1_0=ruleinstanceTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDictKeyTypeRule());
					}
					set(
						$current,
						"i",
						lv_i_1_0,
						"org.xtuml.bp.ui.xtext.MASL.instanceTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuledictValueType
entryRuledictValueType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDictValueTypeRule()); }
	iv_ruledictValueType=ruledictValueType
	{ $current=$iv_ruledictValueType.current; }
	EOF;

// Rule dictValueType
ruledictValueType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDictValueTypeAccess().getTTypeReferenceParserRuleCall_0());
			}
			lv_t_0_0=ruletypeReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDictValueTypeRule());
				}
				set(
					$current,
					"t",
					lv_t_0_0,
					"org.xtuml.bp.ui.xtext.MASL.typeReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleterminatorName
entryRuleterminatorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTerminatorNameRule()); }
	iv_ruleterminatorName=ruleterminatorName
	{ $current=$iv_ruleterminatorName.current.getText(); }
	EOF;

// Rule terminatorName
ruleterminatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTerminatorNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleobjectName
entryRuleobjectName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getObjectNameRule()); }
	iv_ruleobjectName=ruleobjectName
	{ $current=$iv_ruleobjectName.current.getText(); }
	EOF;

// Rule objectName
ruleobjectName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getObjectNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleattributeName
entryRuleattributeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeNameRule()); }
	iv_ruleattributeName=ruleattributeName
	{ $current=$iv_ruleattributeName.current.getText(); }
	EOF;

// Rule attributeName
ruleattributeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getAttributeNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulerelationshipSpec
entryRulerelationshipSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipSpecRule()); }
	iv_rulerelationshipSpec=rulerelationshipSpec
	{ $current=$iv_rulerelationshipSpec.current; }
	EOF;

// Rule relationshipSpec
rulerelationshipSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_r_0_0=RULE_RELATIONSHIPNAME
				{
					newLeafNode(lv_r_0_0, grammarAccess.getRelationshipSpecAccess().getRRELATIONSHIPNAMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipSpecRule());
					}
					addWithLastConsumed(
						$current,
						"r",
						lv_r_0_0,
						"org.xtuml.bp.ui.xtext.MASL.RELATIONSHIPNAME");
				}
			)
		)
		(
			this_DOT_1=RULE_DOT
			{
				newLeafNode(this_DOT_1, grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipSpecAccess().getRIdentifierParserRuleCall_1_1_0());
					}
					lv_r_2_0=ruleidentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipSpecRule());
						}
						add(
							$current,
							"r",
							lv_r_2_0,
							"org.xtuml.bp.ui.xtext.MASL.identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_DOT_3=RULE_DOT
				{
					newLeafNode(this_DOT_3, grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationshipSpecAccess().getRObjectNameParserRuleCall_1_2_1_0());
						}
						lv_r_4_0=ruleobjectName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationshipSpecRule());
							}
							add(
								$current,
								"r",
								lv_r_4_0,
								"org.xtuml.bp.ui.xtext.MASL.objectName");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRuleserviceType
entryRuleserviceType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getServiceTypeRule()); }
	iv_ruleserviceType=ruleserviceType
	{ $current=$iv_ruleserviceType.current.getText(); }
	EOF;

// Rule serviceType
ruleserviceType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INSTANCE_0=RULE_INSTANCE
		{
			$current.merge(this_INSTANCE_0);
		}
		{
			newLeafNode(this_INSTANCE_0, grammarAccess.getServiceTypeAccess().getINSTANCETerminalRuleCall_0());
		}
		(
			this_DEFERRED_1=RULE_DEFERRED
			{
				$current.merge(this_DEFERRED_1);
			}
			{
				newLeafNode(this_DEFERRED_1, grammarAccess.getServiceTypeAccess().getDEFERREDTerminalRuleCall_1_0());
			}
			this_LPAREN_2=RULE_LPAREN
			{
				$current.merge(this_LPAREN_2);
			}
			{
				newLeafNode(this_LPAREN_2, grammarAccess.getServiceTypeAccess().getLPARENTerminalRuleCall_1_1());
			}
			this_RELATIONSHIPNAME_3=RULE_RELATIONSHIPNAME
			{
				$current.merge(this_RELATIONSHIPNAME_3);
			}
			{
				newLeafNode(this_RELATIONSHIPNAME_3, grammarAccess.getServiceTypeAccess().getRELATIONSHIPNAMETerminalRuleCall_1_2());
			}
			this_RPAREN_4=RULE_RPAREN
			{
				$current.merge(this_RPAREN_4);
			}
			{
				newLeafNode(this_RPAREN_4, grammarAccess.getServiceTypeAccess().getRPARENTerminalRuleCall_1_3());
			}
		)?
	)?
;

// Entry rule entryRuleeventName
entryRuleeventName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEventNameRule()); }
	iv_ruleeventName=ruleeventName
	{ $current=$iv_ruleeventName.current.getText(); }
	EOF;

// Rule eventName
ruleeventName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEventNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulestateName
entryRulestateName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStateNameRule()); }
	iv_rulestateName=rulestateName
	{ $current=$iv_rulestateName.current.getText(); }
	EOF;

// Rule stateName
rulestateName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getStateNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulestateType
entryRulestateType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateTypeRule()); }
	iv_rulestateType=rulestateType
	{ $current=$iv_rulestateType.current; }
	EOF;

// Rule stateType
rulestateType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStateTypeAccess().getStateTypeAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_s_1_1=RULE_ASSIGNER
					{
						newLeafNode(lv_s_1_1, grammarAccess.getStateTypeAccess().getSASSIGNERTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateTypeRule());
						}
						setWithLastConsumed(
							$current,
							"s",
							lv_s_1_1,
							"org.xtuml.bp.ui.xtext.MASL.ASSIGNER");
					}
					    |
					{
						newCompositeNode(grammarAccess.getStateTypeAccess().getSAssignerStartParserRuleCall_1_0_1());
					}
					lv_s_1_2=ruleassignerStart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateTypeRule());
						}
						set(
							$current,
							"s",
							lv_s_1_2,
							"org.xtuml.bp.ui.xtext.MASL.assignerStart");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_s_1_3=RULE_CREATION
					{
						newLeafNode(lv_s_1_3, grammarAccess.getStateTypeAccess().getSCREATIONTerminalRuleCall_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateTypeRule());
						}
						setWithLastConsumed(
							$current,
							"s",
							lv_s_1_3,
							"org.xtuml.bp.ui.xtext.MASL.CREATION");
					}
					    |
					lv_s_1_4=RULE_TERMINAL
					{
						newLeafNode(lv_s_1_4, grammarAccess.getStateTypeAccess().getSTERMINALTerminalRuleCall_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateTypeRule());
						}
						setWithLastConsumed(
							$current,
							"s",
							lv_s_1_4,
							"org.xtuml.bp.ui.xtext.MASL.TERMINAL");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleassignerStart
entryRuleassignerStart returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAssignerStartRule()); }
	iv_ruleassignerStart=ruleassignerStart
	{ $current=$iv_ruleassignerStart.current.getText(); }
	EOF;

// Rule assignerStart
ruleassignerStart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ASSIGNER_0=RULE_ASSIGNER
		{
			$current.merge(this_ASSIGNER_0);
		}
		{
			newLeafNode(this_ASSIGNER_0, grammarAccess.getAssignerStartAccess().getASSIGNERTerminalRuleCall_0());
		}
		this_START_1=RULE_START
		{
			$current.merge(this_START_1);
		}
		{
			newLeafNode(this_START_1, grammarAccess.getAssignerStartAccess().getSTARTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleparameterList
entryRuleparameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleparameterList=ruleparameterList
	{ $current=$iv_ruleparameterList.current; }
	EOF;

// Rule parameterList
ruleparameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterListAccess().getParameterListAction_0(),
					$current);
			}
		)
		this_LPAREN_1=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_1, grammarAccess.getParameterListAccess().getLPARENTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_2_0());
				}
				lv_p_2_0=ruleparameterDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"p",
						lv_p_2_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			this_COMMA_3=RULE_COMMA
			{
				newLeafNode(this_COMMA_3, grammarAccess.getParameterListAccess().getCOMMATerminalRuleCall_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_3_1_0());
					}
					lv_p_4_0=ruleparameterDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"p",
							lv_p_4_0,
							"org.xtuml.bp.ui.xtext.MASL.parameterDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		this_RPAREN_5=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_5, grammarAccess.getParameterListAccess().getRPARENTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleparameterDefinition
entryRuleparameterDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDefinitionRule()); }
	iv_ruleparameterDefinition=ruleparameterDefinition
	{ $current=$iv_ruleparameterDefinition.current; }
	EOF;

// Rule parameterDefinition
ruleparameterDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterDefinitionAccess().getParameterNameParserRuleCall_0());
		}
		ruleparameterName
		{
			afterParserOrEnumRuleCall();
		}
		this_COLON_1=RULE_COLON
		{
			newLeafNode(this_COLON_1, grammarAccess.getParameterDefinitionAccess().getCOLONTerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getParameterDefinitionAccess().getParameterModeParserRuleCall_2());
		}
		ruleparameterMode
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getParameterDefinitionAccess().getParameterTypeParserRuleCall_3());
		}
		this_parameterType_3=ruleparameterType
		{
			$current = $this_parameterType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleserviceVisibility
entryRuleserviceVisibility returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceVisibilityRule()); }
	iv_ruleserviceVisibility=ruleserviceVisibility
	{ $current=$iv_ruleserviceVisibility.current; }
	EOF;

// Rule serviceVisibility
ruleserviceVisibility returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getServiceVisibilityAccess().getServiceVisibilityAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_v_1_1=RULE_PRIVATE
					{
						newLeafNode(lv_v_1_1, grammarAccess.getServiceVisibilityAccess().getVPRIVATETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceVisibilityRule());
						}
						setWithLastConsumed(
							$current,
							"v",
							lv_v_1_1,
							"org.xtuml.bp.ui.xtext.MASL.PRIVATE");
					}
					    |
					lv_v_1_2=RULE_PUBLIC
					{
						newLeafNode(lv_v_1_2, grammarAccess.getServiceVisibilityAccess().getVPUBLICTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceVisibilityRule());
						}
						setWithLastConsumed(
							$current,
							"v",
							lv_v_1_2,
							"org.xtuml.bp.ui.xtext.MASL.PUBLIC");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleparameterMode
entryRuleparameterMode returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParameterModeRule()); }
	iv_ruleparameterMode=ruleparameterMode
	{ $current=$iv_ruleparameterMode.current.getText(); }
	EOF;

// Rule parameterMode
ruleparameterMode returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IN_0=RULE_IN
		{
			$current.merge(this_IN_0);
		}
		{
			newLeafNode(this_IN_0, grammarAccess.getParameterModeAccess().getINTerminalRuleCall_0());
		}
		    |
		this_OUT_1=RULE_OUT
		{
			$current.merge(this_OUT_1);
		}
		{
			newLeafNode(this_OUT_1, grammarAccess.getParameterModeAccess().getOUTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleserviceName
entryRuleserviceName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getServiceNameRule()); }
	iv_ruleserviceName=ruleserviceName
	{ $current=$iv_ruleserviceName.current.getText(); }
	EOF;

// Rule serviceName
ruleserviceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getServiceNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleparameterName
entryRuleparameterName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParameterNameRule()); }
	iv_ruleparameterName=ruleparameterName
	{ $current=$iv_ruleparameterName.current.getText(); }
	EOF;

// Rule parameterName
ruleparameterName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getParameterNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleparameterType
entryRuleparameterType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterTypeRule()); }
	iv_ruleparameterType=ruleparameterType
	{ $current=$iv_ruleparameterType.current; }
	EOF;

// Rule parameterType
ruleparameterType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getParameterTypeAccess().getTypeReferenceParserRuleCall());
	}
	this_typeReference_0=ruletypeReference
	{
		$current = $this_typeReference_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulereturnType
entryRulereturnType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnTypeRule()); }
	iv_rulereturnType=rulereturnType
	{ $current=$iv_rulereturnType.current; }
	EOF;

// Rule returnType
rulereturnType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getReturnTypeAccess().getTypeReferenceParserRuleCall());
	}
	this_typeReference_0=ruletypeReference
	{
		$current = $this_typeReference_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulepragmaList
entryRulepragmaList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPragmaListRule()); }
	iv_rulepragmaList=rulepragmaList
	{ $current=$iv_rulepragmaList.current.getText(); }
	EOF;

// Rule pragmaList
rulepragmaList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPragmaListAccess().getPragmaDefParserRuleCall_0());
		}
		this_pragmaDef_0=rulepragmaDef
		{
			$current.merge(this_pragmaDef_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		this_SEMI_1=RULE_SEMI
		{
			$current.merge(this_SEMI_1);
		}
		{
			newLeafNode(this_SEMI_1, grammarAccess.getPragmaListAccess().getSEMITerminalRuleCall_1());
		}
	)*
;

// Entry rule entryRulepragmaDef
entryRulepragmaDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPragmaDefRule()); }
	iv_rulepragmaDef=rulepragmaDef
	{ $current=$iv_rulepragmaDef.current.getText(); }
	EOF;

// Rule pragmaDef
rulepragmaDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PRAGMA_0=RULE_PRAGMA
		{
			$current.merge(this_PRAGMA_0);
		}
		{
			newLeafNode(this_PRAGMA_0, grammarAccess.getPragmaDefAccess().getPRAGMATerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getPragmaDefAccess().getPragmaNameParserRuleCall_1());
		}
		this_pragmaName_1=rulepragmaName
		{
			$current.merge(this_pragmaName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		this_LPAREN_2=RULE_LPAREN
		{
			$current.merge(this_LPAREN_2);
		}
		{
			newLeafNode(this_LPAREN_2, grammarAccess.getPragmaDefAccess().getLPARENTerminalRuleCall_2());
		}
		(
			{
				newCompositeNode(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_0());
			}
			this_pragmaValue_3=rulepragmaValue
			{
				$current.merge(this_pragmaValue_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				this_COMMA_4=RULE_COMMA
				{
					$current.merge(this_COMMA_4);
				}
				{
					newLeafNode(this_COMMA_4, grammarAccess.getPragmaDefAccess().getCOMMATerminalRuleCall_3_1_0());
				}
				{
					newCompositeNode(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_1_1());
				}
				this_pragmaValue_5=rulepragmaValue
				{
					$current.merge(this_pragmaValue_5);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
		)?
		this_RPAREN_6=RULE_RPAREN
		{
			$current.merge(this_RPAREN_6);
		}
		{
			newLeafNode(this_RPAREN_6, grammarAccess.getPragmaDefAccess().getRPARENTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRulepragmaValue
entryRulepragmaValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPragmaValueRule()); }
	iv_rulepragmaValue=rulepragmaValue
	{ $current=$iv_rulepragmaValue.current.getText(); }
	EOF;

// Rule pragmaValue
rulepragmaValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPragmaValueAccess().getIdentifierParserRuleCall_0());
		}
		this_identifier_0=ruleidentifier
		{
			$current.merge(this_identifier_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPragmaValueAccess().getLiteralParserRuleCall_1());
		}
		this_literal_1=ruleliteral
		{
			$current.merge(this_literal_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulepragmaName
entryRulepragmaName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPragmaNameRule()); }
	iv_rulepragmaName=rulepragmaName
	{ $current=$iv_rulepragmaName.current.getText(); }
	EOF;

// Rule pragmaName
rulepragmaName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPragmaNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuledomainServiceDefinition
entryRuledomainServiceDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainServiceDefinitionRule()); }
	iv_ruledomainServiceDefinition=ruledomainServiceDefinition
	{ $current=$iv_ruledomainServiceDefinition.current; }
	EOF;

// Rule domainServiceDefinition
ruledomainServiceDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0());
				}
				lv_s_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainServiceDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SERVICE_1=RULE_SERVICE
		{
			newLeafNode(this_SERVICE_1, grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getDomainNameParserRuleCall_2());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_3=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_3, grammarAccess.getDomainServiceDefinitionAccess().getSCOPETerminalRuleCall_3());
		}
		{
			newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getServiceNameParserRuleCall_4());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getPParameterListParserRuleCall_5_0());
				}
				lv_p_5_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainServiceDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_5_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_6=RULE_IS
		{
			newLeafNode(this_IS_6, grammarAccess.getDomainServiceDefinitionAccess().getISTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getCCodeBlockParserRuleCall_7_0());
				}
				lv_c_7_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainServiceDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_7_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SERVICE_8=RULE_SERVICE
			{
				newLeafNode(this_SERVICE_8, grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_8());
			}
		)?
		this_SEMI_9=RULE_SEMI
		{
			newLeafNode(this_SEMI_9, grammarAccess.getDomainServiceDefinitionAccess().getSEMITerminalRuleCall_9());
		}
		{
			newCompositeNode(grammarAccess.getDomainServiceDefinitionAccess().getPragmaListParserRuleCall_10());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledomainFunctionDefinition
entryRuledomainFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainFunctionDefinitionRule()); }
	iv_ruledomainFunctionDefinition=ruledomainFunctionDefinition
	{ $current=$iv_ruledomainFunctionDefinition.current; }
	EOF;

// Rule domainFunctionDefinition
ruledomainFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0());
				}
				lv_s_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainFunctionDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_FUNCTION_1=RULE_FUNCTION
		{
			newLeafNode(this_FUNCTION_1, grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getDomainNameParserRuleCall_2());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_3=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_3, grammarAccess.getDomainFunctionDefinitionAccess().getSCOPETerminalRuleCall_3());
		}
		{
			newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getServiceNameParserRuleCall_4());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getPParameterListParserRuleCall_5_0());
				}
				lv_p_5_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainFunctionDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_5_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_RETURN_6=RULE_RETURN
		{
			newLeafNode(this_RETURN_6, grammarAccess.getDomainFunctionDefinitionAccess().getRETURNTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getRReturnTypeParserRuleCall_7_0());
				}
				lv_r_7_0=rulereturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainFunctionDefinitionRule());
					}
					set(
						$current,
						"r",
						lv_r_7_0,
						"org.xtuml.bp.ui.xtext.MASL.returnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_8=RULE_IS
		{
			newLeafNode(this_IS_8, grammarAccess.getDomainFunctionDefinitionAccess().getISTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getCCodeBlockParserRuleCall_9_0());
				}
				lv_c_9_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainFunctionDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_9_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_FUNCTION_10=RULE_FUNCTION
			{
				newLeafNode(this_FUNCTION_10, grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_10());
			}
		)?
		this_SEMI_11=RULE_SEMI
		{
			newLeafNode(this_SEMI_11, grammarAccess.getDomainFunctionDefinitionAccess().getSEMITerminalRuleCall_11());
		}
		{
			newCompositeNode(grammarAccess.getDomainFunctionDefinitionAccess().getPragmaListParserRuleCall_12());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleobjectServiceDefinition
entryRuleobjectServiceDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectServiceDefinitionRule()); }
	iv_ruleobjectServiceDefinition=ruleobjectServiceDefinition
	{ $current=$iv_ruleobjectServiceDefinition.current; }
	EOF;

// Rule objectServiceDefinition
ruleobjectServiceDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0());
				}
				lv_s_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectServiceDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_INSTANCE_1=RULE_INSTANCE
			{
				newLeafNode(this_INSTANCE_1, grammarAccess.getObjectServiceDefinitionAccess().getINSTANCETerminalRuleCall_1());
			}
		)?
		this_SERVICE_2=RULE_SERVICE
		{
			newLeafNode(this_SERVICE_2, grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getDomainNameParserRuleCall_3());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_4=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_4, grammarAccess.getObjectServiceDefinitionAccess().getSCOPETerminalRuleCall_4());
		}
		{
			newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getObjectNameParserRuleCall_5());
		}
		ruleobjectName
		{
			afterParserOrEnumRuleCall();
		}
		this_DOT_6=RULE_DOT
		{
			newLeafNode(this_DOT_6, grammarAccess.getObjectServiceDefinitionAccess().getDOTTerminalRuleCall_6());
		}
		{
			newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getServiceNameParserRuleCall_7());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getPParameterListParserRuleCall_8_0());
				}
				lv_p_8_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectServiceDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_8_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_9=RULE_IS
		{
			newLeafNode(this_IS_9, grammarAccess.getObjectServiceDefinitionAccess().getISTerminalRuleCall_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getCCodeBlockParserRuleCall_10_0());
				}
				lv_c_10_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectServiceDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_10_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SERVICE_11=RULE_SERVICE
			{
				newLeafNode(this_SERVICE_11, grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_11());
			}
		)?
		this_SEMI_12=RULE_SEMI
		{
			newLeafNode(this_SEMI_12, grammarAccess.getObjectServiceDefinitionAccess().getSEMITerminalRuleCall_12());
		}
		{
			newCompositeNode(grammarAccess.getObjectServiceDefinitionAccess().getPragmaListParserRuleCall_13());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleterminatorServiceDefinition
entryRuleterminatorServiceDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminatorServiceDefinitionRule()); }
	iv_ruleterminatorServiceDefinition=ruleterminatorServiceDefinition
	{ $current=$iv_ruleterminatorServiceDefinition.current; }
	EOF;

// Rule terminatorServiceDefinition
ruleterminatorServiceDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0());
				}
				lv_s_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorServiceDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SERVICE_1=RULE_SERVICE
		{
			newLeafNode(this_SERVICE_1, grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainNameParserRuleCall_2());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_3=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_3, grammarAccess.getTerminatorServiceDefinitionAccess().getSCOPETerminalRuleCall_3());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorNameParserRuleCall_4());
		}
		ruleterminatorName
		{
			afterParserOrEnumRuleCall();
		}
		this_TERMINATOR_SCOPE_5=RULE_TERMINATOR_SCOPE
		{
			newLeafNode(this_TERMINATOR_SCOPE_5, grammarAccess.getTerminatorServiceDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceNameParserRuleCall_6());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getPParameterListParserRuleCall_7_0());
				}
				lv_p_7_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorServiceDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_7_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_8=RULE_IS
		{
			newLeafNode(this_IS_8, grammarAccess.getTerminatorServiceDefinitionAccess().getISTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getCCodeBlockParserRuleCall_9_0());
				}
				lv_c_9_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorServiceDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_9_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SERVICE_10=RULE_SERVICE
			{
				newLeafNode(this_SERVICE_10, grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_10());
			}
		)?
		this_SEMI_11=RULE_SEMI
		{
			newLeafNode(this_SEMI_11, grammarAccess.getTerminatorServiceDefinitionAccess().getSEMITerminalRuleCall_11());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorServiceDefinitionAccess().getPragmaListParserRuleCall_12());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleterminatorFunctionDefinition
entryRuleterminatorFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionRule()); }
	iv_ruleterminatorFunctionDefinition=ruleterminatorFunctionDefinition
	{ $current=$iv_ruleterminatorFunctionDefinition.current; }
	EOF;

// Rule terminatorFunctionDefinition
ruleterminatorFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0());
				}
				lv_s_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorFunctionDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_FUNCTION_1=RULE_FUNCTION
		{
			newLeafNode(this_FUNCTION_1, grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getDomainNameParserRuleCall_2());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_3=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_3, grammarAccess.getTerminatorFunctionDefinitionAccess().getSCOPETerminalRuleCall_3());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getTerminatorNameParserRuleCall_4());
		}
		ruleterminatorName
		{
			afterParserOrEnumRuleCall();
		}
		this_TERMINATOR_SCOPE_5=RULE_TERMINATOR_SCOPE
		{
			newLeafNode(this_TERMINATOR_SCOPE_5, grammarAccess.getTerminatorFunctionDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getServiceNameParserRuleCall_6());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getPParameterListParserRuleCall_7_0());
				}
				lv_p_7_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorFunctionDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_7_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_RETURN_8=RULE_RETURN
		{
			newLeafNode(this_RETURN_8, grammarAccess.getTerminatorFunctionDefinitionAccess().getRETURNTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getRReturnTypeParserRuleCall_9_0());
				}
				lv_r_9_0=rulereturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorFunctionDefinitionRule());
					}
					set(
						$current,
						"r",
						lv_r_9_0,
						"org.xtuml.bp.ui.xtext.MASL.returnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_10=RULE_IS
		{
			newLeafNode(this_IS_10, grammarAccess.getTerminatorFunctionDefinitionAccess().getISTerminalRuleCall_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getCCodeBlockParserRuleCall_11_0());
				}
				lv_c_11_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminatorFunctionDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_11_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_FUNCTION_12=RULE_FUNCTION
			{
				newLeafNode(this_FUNCTION_12, grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_12());
			}
		)?
		this_SEMI_13=RULE_SEMI
		{
			newLeafNode(this_SEMI_13, grammarAccess.getTerminatorFunctionDefinitionAccess().getSEMITerminalRuleCall_13());
		}
		{
			newCompositeNode(grammarAccess.getTerminatorFunctionDefinitionAccess().getPragmaListParserRuleCall_14());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleobjectFunctionDefinition
entryRuleobjectFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectFunctionDefinitionRule()); }
	iv_ruleobjectFunctionDefinition=ruleobjectFunctionDefinition
	{ $current=$iv_ruleobjectFunctionDefinition.current; }
	EOF;

// Rule objectFunctionDefinition
ruleobjectFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getVServiceVisibilityParserRuleCall_0_0());
				}
				lv_v_0_0=ruleserviceVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFunctionDefinitionRule());
					}
					set(
						$current,
						"v",
						lv_v_0_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceVisibility");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getSServiceTypeParserRuleCall_1_0());
				}
				lv_s_1_0=ruleserviceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFunctionDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_1_0,
						"org.xtuml.bp.ui.xtext.MASL.serviceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_FUNCTION_2=RULE_FUNCTION
		{
			newLeafNode(this_FUNCTION_2, grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getDomainNameParserRuleCall_3());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_4=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_4, grammarAccess.getObjectFunctionDefinitionAccess().getSCOPETerminalRuleCall_4());
		}
		{
			newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getObjectNameParserRuleCall_5());
		}
		ruleobjectName
		{
			afterParserOrEnumRuleCall();
		}
		this_DOT_6=RULE_DOT
		{
			newLeafNode(this_DOT_6, grammarAccess.getObjectFunctionDefinitionAccess().getDOTTerminalRuleCall_6());
		}
		{
			newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getServiceNameParserRuleCall_7());
		}
		ruleserviceName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getPParameterListParserRuleCall_8_0());
				}
				lv_p_8_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFunctionDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_8_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_RETURN_9=RULE_RETURN
		{
			newLeafNode(this_RETURN_9, grammarAccess.getObjectFunctionDefinitionAccess().getRETURNTerminalRuleCall_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getRReturnTypeParserRuleCall_10_0());
				}
				lv_r_10_0=rulereturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFunctionDefinitionRule());
					}
					set(
						$current,
						"r",
						lv_r_10_0,
						"org.xtuml.bp.ui.xtext.MASL.returnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_11=RULE_IS
		{
			newLeafNode(this_IS_11, grammarAccess.getObjectFunctionDefinitionAccess().getISTerminalRuleCall_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getCCodeBlockParserRuleCall_12_0());
				}
				lv_c_12_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFunctionDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_12_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_FUNCTION_13=RULE_FUNCTION
			{
				newLeafNode(this_FUNCTION_13, grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_13());
			}
		)?
		this_SEMI_14=RULE_SEMI
		{
			newLeafNode(this_SEMI_14, grammarAccess.getObjectFunctionDefinitionAccess().getSEMITerminalRuleCall_14());
		}
		{
			newCompositeNode(grammarAccess.getObjectFunctionDefinitionAccess().getPragmaListParserRuleCall_15());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulestateDefinition
entryRulestateDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateDefinitionRule()); }
	iv_rulestateDefinition=rulestateDefinition
	{ $current=$iv_rulestateDefinition.current; }
	EOF;

// Rule stateDefinition
rulestateDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDefinitionAccess().getSStateTypeParserRuleCall_0_0());
				}
				lv_s_0_0=rulestateType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDefinitionRule());
					}
					set(
						$current,
						"s",
						lv_s_0_0,
						"org.xtuml.bp.ui.xtext.MASL.stateType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_STATE_1=RULE_STATE
		{
			newLeafNode(this_STATE_1, grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getStateDefinitionAccess().getDomainNameParserRuleCall_2());
		}
		ruledomainName
		{
			afterParserOrEnumRuleCall();
		}
		this_SCOPE_3=RULE_SCOPE
		{
			newLeafNode(this_SCOPE_3, grammarAccess.getStateDefinitionAccess().getSCOPETerminalRuleCall_3());
		}
		{
			newCompositeNode(grammarAccess.getStateDefinitionAccess().getObjectNameParserRuleCall_4());
		}
		ruleobjectName
		{
			afterParserOrEnumRuleCall();
		}
		this_DOT_5=RULE_DOT
		{
			newLeafNode(this_DOT_5, grammarAccess.getStateDefinitionAccess().getDOTTerminalRuleCall_5());
		}
		{
			newCompositeNode(grammarAccess.getStateDefinitionAccess().getStateNameParserRuleCall_6());
		}
		rulestateName
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDefinitionAccess().getPParameterListParserRuleCall_7_0());
				}
				lv_p_7_0=ruleparameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDefinitionRule());
					}
					set(
						$current,
						"p",
						lv_p_7_0,
						"org.xtuml.bp.ui.xtext.MASL.parameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_IS_8=RULE_IS
		{
			newLeafNode(this_IS_8, grammarAccess.getStateDefinitionAccess().getISTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDefinitionAccess().getCCodeBlockParserRuleCall_9_0());
				}
				lv_c_9_0=rulecodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDefinitionRule());
					}
					set(
						$current,
						"c",
						lv_c_9_0,
						"org.xtuml.bp.ui.xtext.MASL.codeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_STATE_10=RULE_STATE
			{
				newLeafNode(this_STATE_10, grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_10());
			}
		)?
		this_SEMI_11=RULE_SEMI
		{
			newLeafNode(this_SEMI_11, grammarAccess.getStateDefinitionAccess().getSEMITerminalRuleCall_11());
		}
		{
			newCompositeNode(grammarAccess.getStateDefinitionAccess().getPragmaListParserRuleCall_12());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulestatementList
entryRulestatementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_rulestatementList=rulestatementList
	{ $current=$iv_rulestatementList.current; }
	EOF;

// Rule statementList
rulestatementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementListAccess().getStatementListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementListAccess().getSStatementParserRuleCall_1_0());
				}
				lv_s_1_0=rulestatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementListRule());
					}
					add(
						$current,
						"s",
						lv_s_1_0,
						"org.xtuml.bp.ui.xtext.MASL.statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulestatement
entryRulestatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_rulestatement=rulestatement
	{ $current=$iv_rulestatement.current; }
	EOF;

// Rule statement
rulestatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementAccess().getStatementAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getCCodeBlockStatementParserRuleCall_1_0_0());
					}
					lv_c_1_0=rulecodeBlockStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"c",
							lv_c_1_0,
							"org.xtuml.bp.ui.xtext.MASL.codeBlockStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				((
					(
						ruleassignStatement
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getEAssignStatementParserRuleCall_1_1_0_0());
						}
						lv_e_2_0=ruleassignStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"e",
								lv_e_2_0,
								"org.xtuml.bp.ui.xtext.MASL.assignStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				((
					(
						rulestreamStatement
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getSStreamStatementParserRuleCall_1_2_0_0());
						}
						lv_s_3_0=rulestreamStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"s",
								lv_s_3_0,
								"org.xtuml.bp.ui.xtext.MASL.streamStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				((
					(
						rulenullStatement
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getNNullStatementParserRuleCall_1_3_0_0());
						}
						lv_n_4_0=rulenullStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"n",
								lv_n_4_0,
								"org.xtuml.bp.ui.xtext.MASL.nullStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				((
					(
						rulecallStatement
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getCCallStatementParserRuleCall_1_4_0_0());
						}
						lv_c_5_0=rulecallStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"c",
								lv_c_5_0,
								"org.xtuml.bp.ui.xtext.MASL.callStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getEExitStatementParserRuleCall_1_5_0());
					}
					lv_e_6_0=ruleexitStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"e",
							lv_e_6_0,
							"org.xtuml.bp.ui.xtext.MASL.exitStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getRReturnStatementParserRuleCall_1_6_0());
					}
					lv_r_7_0=rulereturnStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"r",
							lv_r_7_0,
							"org.xtuml.bp.ui.xtext.MASL.returnStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDDelayStatementParserRuleCall_1_7_0());
					}
					lv_d_8_0=ruledelayStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"d",
							lv_d_8_0,
							"org.xtuml.bp.ui.xtext.MASL.delayStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getRaiseStatementParserRuleCall_1_8());
			}
			ruleraiseStatement
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDDeleteStatementParserRuleCall_1_9_0());
					}
					lv_d_10_0=ruledeleteStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"d",
							lv_d_10_0,
							"org.xtuml.bp.ui.xtext.MASL.deleteStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getEEraseStatementParserRuleCall_1_10_0());
					}
					lv_e_11_0=ruleeraseStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"e",
							lv_e_11_0,
							"org.xtuml.bp.ui.xtext.MASL.eraseStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getLLinkStatementParserRuleCall_1_11_0());
					}
					lv_l_12_0=rulelinkStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"l",
							lv_l_12_0,
							"org.xtuml.bp.ui.xtext.MASL.linkStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getSScheduleStatementParserRuleCall_1_12_0());
					}
					lv_s_13_0=rulescheduleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"s",
							lv_s_13_0,
							"org.xtuml.bp.ui.xtext.MASL.scheduleStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getCCancelTimerStatementParserRuleCall_1_13_0());
					}
					lv_c_14_0=rulecancelTimerStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"c",
							lv_c_14_0,
							"org.xtuml.bp.ui.xtext.MASL.cancelTimerStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getGGenerateStatementParserRuleCall_1_14_0());
					}
					lv_g_15_0=rulegenerateStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"g",
							lv_g_15_0,
							"org.xtuml.bp.ui.xtext.MASL.generateStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getIIfStatementParserRuleCall_1_15_0());
					}
					lv_i_16_0=ruleifStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"i",
							lv_i_16_0,
							"org.xtuml.bp.ui.xtext.MASL.ifStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getCCaseStatementParserRuleCall_1_16_0());
					}
					lv_c_17_0=rulecaseStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"c",
							lv_c_17_0,
							"org.xtuml.bp.ui.xtext.MASL.caseStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getFForStatementParserRuleCall_1_17_0());
					}
					lv_f_18_0=ruleforStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"f",
							lv_f_18_0,
							"org.xtuml.bp.ui.xtext.MASL.forStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getWWhileStatementParserRuleCall_1_18_0());
					}
					lv_w_19_0=rulewhileStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"w",
							lv_w_19_0,
							"org.xtuml.bp.ui.xtext.MASL.whileStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_SEMI_20=RULE_SEMI
		{
			newLeafNode(this_SEMI_20, grammarAccess.getStatementAccess().getSEMITerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPragmaListParserRuleCall_3());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulenullStatement
entryRulenullStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNullStatementRule()); }
	iv_rulenullStatement=rulenullStatement
	{ $current=$iv_rulenullStatement.current.getText(); }
	EOF;

// Rule nullStatement
rulenullStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_NULL_0=RULE_NULL
	{
		$current.merge(this_NULL_0);
	}
	{
		newLeafNode(this_NULL_0, grammarAccess.getNullStatementAccess().getNULLTerminalRuleCall());
	}
;

// Entry rule entryRuleassignStatement
entryRuleassignStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignStatementRule()); }
	iv_ruleassignStatement=ruleassignStatement
	{ $current=$iv_ruleassignStatement.current; }
	EOF;

// Rule assignStatement
ruleassignStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignStatementAccess().getLhsExpressionParserRuleCall_0_0());
				}
				lv_lhs_0_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignStatementRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ASSIGN_1=RULE_ASSIGN
		{
			newLeafNode(this_ASSIGN_1, grammarAccess.getAssignStatementAccess().getASSIGNTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignStatementAccess().getRhsExpressionParserRuleCall_2_0());
				}
				lv_rhs_2_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignStatementRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_2_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulestreamOperator
entryRulestreamOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStreamOperatorRule()); }
	iv_rulestreamOperator=rulestreamOperator
	{ $current=$iv_rulestreamOperator.current.getText(); }
	EOF;

// Rule streamOperator
rulestreamOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STREAM_IN_0=RULE_STREAM_IN
		{
			$current.merge(this_STREAM_IN_0);
		}
		{
			newLeafNode(this_STREAM_IN_0, grammarAccess.getStreamOperatorAccess().getSTREAM_INTerminalRuleCall_0());
		}
		    |
		this_STREAM_OUT_1=RULE_STREAM_OUT
		{
			$current.merge(this_STREAM_OUT_1);
		}
		{
			newLeafNode(this_STREAM_OUT_1, grammarAccess.getStreamOperatorAccess().getSTREAM_OUTTerminalRuleCall_1());
		}
		    |
		this_STREAM_LINE_IN_2=RULE_STREAM_LINE_IN
		{
			$current.merge(this_STREAM_LINE_IN_2);
		}
		{
			newLeafNode(this_STREAM_LINE_IN_2, grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_INTerminalRuleCall_2());
		}
		    |
		this_STREAM_LINE_OUT_3=RULE_STREAM_LINE_OUT
		{
			$current.merge(this_STREAM_LINE_OUT_3);
		}
		{
			newLeafNode(this_STREAM_LINE_OUT_3, grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_OUTTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulestreamValue
entryRulestreamValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamValueRule()); }
	iv_rulestreamValue=rulestreamValue
	{ $current=$iv_rulestreamValue.current; }
	EOF;

// Rule streamValue
rulestreamValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStreamValueAccess().getStreamOperatorParserRuleCall_0());
		}
		rulestreamOperator
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getStreamValueAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulestreamStatement
entryRulestreamStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamStatementRule()); }
	iv_rulestreamStatement=rulestreamStatement
	{ $current=$iv_rulestreamStatement.current; }
	EOF;

// Rule streamStatement
rulestreamStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStreamStatementAccess().getEExpressionParserRuleCall_0_0());
				}
				lv_e_0_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStreamStatementRule());
					}
					set(
						$current,
						"e",
						lv_e_0_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStreamStatementAccess().getSStreamValueParserRuleCall_1_0());
				}
				lv_s_1_0=rulestreamValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStreamStatementRule());
					}
					add(
						$current,
						"s",
						lv_s_1_0,
						"org.xtuml.bp.ui.xtext.MASL.streamValue");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulecallStatement
entryRulecallStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallStatementRule()); }
	iv_rulecallStatement=rulecallStatement
	{ $current=$iv_rulecallStatement.current; }
	EOF;

// Rule callStatement
rulecallStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCallStatementAccess().getPPrimaryExpressionParserRuleCall_0_0());
				}
				lv_p_0_0=ruleprimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallStatementRule());
					}
					set(
						$current,
						"p",
						lv_p_0_0,
						"org.xtuml.bp.ui.xtext.MASL.primaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					this_DOT_1=RULE_DOT
					{
						newLeafNode(this_DOT_1, grammarAccess.getCallStatementAccess().getDOTTerminalRuleCall_1_0_0_0());
					}
					{
						newCompositeNode(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_0_1());
					}
					ruleidentifier
					{
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					this_TERMINATOR_SCOPE_3=RULE_TERMINATOR_SCOPE
					{
						newLeafNode(this_TERMINATOR_SCOPE_3, grammarAccess.getCallStatementAccess().getTERMINATOR_SCOPETerminalRuleCall_1_0_1_0());
					}
					{
						newCompositeNode(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_1_1());
					}
					ruleidentifier
					{
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					this_LBRACKET_5=RULE_LBRACKET
					{
						newLeafNode(this_LBRACKET_5, grammarAccess.getCallStatementAccess().getLBRACKETTerminalRuleCall_1_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCallStatementAccess().getEExpressionParserRuleCall_1_0_2_1_0());
							}
							lv_e_6_0=ruleexpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallStatementRule());
								}
								add(
									$current,
									"e",
									lv_e_6_0,
									"org.xtuml.bp.ui.xtext.MASL.expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					this_RBRACKET_7=RULE_RBRACKET
					{
						newLeafNode(this_RBRACKET_7, grammarAccess.getCallStatementAccess().getRBRACKETTerminalRuleCall_1_0_2_2());
					}
				)
				    |
				(
					this_PRIME_8=RULE_PRIME
					{
						newLeafNode(this_PRIME_8, grammarAccess.getCallStatementAccess().getPRIMETerminalRuleCall_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCallStatementAccess().getCCharacteristicParserRuleCall_1_0_3_1_0());
							}
							lv_c_9_0=rulecharacteristic
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallStatementRule());
								}
								add(
									$current,
									"c",
									lv_c_9_0,
									"org.xtuml.bp.ui.xtext.MASL.characteristic");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
			this_LPAREN_10=RULE_LPAREN
			{
				newLeafNode(this_LPAREN_10, grammarAccess.getCallStatementAccess().getLPARENTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCallStatementAccess().getAArgumentListParserRuleCall_1_2_0());
					}
					lv_a_11_0=ruleargumentList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallStatementRule());
						}
						add(
							$current,
							"a",
							lv_a_11_0,
							"org.xtuml.bp.ui.xtext.MASL.argumentList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_RPAREN_12=RULE_RPAREN
			{
				newLeafNode(this_RPAREN_12, grammarAccess.getCallStatementAccess().getRPARENTerminalRuleCall_1_3());
			}
		)+
	)
;

// Entry rule entryRuleexitStatement
entryRuleexitStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExitStatementRule()); }
	iv_ruleexitStatement=ruleexitStatement
	{ $current=$iv_ruleexitStatement.current; }
	EOF;

// Rule exitStatement
ruleexitStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExitStatementAccess().getExitStatementAction_0(),
					$current);
			}
		)
		this_EXIT_1=RULE_EXIT
		{
			newLeafNode(this_EXIT_1, grammarAccess.getExitStatementAccess().getEXITTerminalRuleCall_1());
		}
		(
			this_WHEN_2=RULE_WHEN
			{
				newLeafNode(this_WHEN_2, grammarAccess.getExitStatementAccess().getWHENTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExitStatementAccess().getCConditionParserRuleCall_2_1_0());
					}
					lv_c_3_0=rulecondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExitStatementRule());
						}
						set(
							$current,
							"c",
							lv_c_3_0,
							"org.xtuml.bp.ui.xtext.MASL.condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulereturnStatement
entryRulereturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_rulereturnStatement=rulereturnStatement
	{ $current=$iv_rulereturnStatement.current; }
	EOF;

// Rule returnStatement
rulereturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RETURN_0=RULE_RETURN
		{
			newLeafNode(this_RETURN_0, grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledelayStatement
entryRuledelayStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelayStatementRule()); }
	iv_ruledelayStatement=ruledelayStatement
	{ $current=$iv_ruledelayStatement.current; }
	EOF;

// Rule delayStatement
ruledelayStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DELAY_0=RULE_DELAY
		{
			newLeafNode(this_DELAY_0, grammarAccess.getDelayStatementAccess().getDELAYTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getDelayStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleraiseStatement
entryRuleraiseStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRaiseStatementRule()); }
	iv_ruleraiseStatement=ruleraiseStatement
	{ $current=$iv_ruleraiseStatement.current.getText(); }
	EOF;

// Rule raiseStatement
ruleraiseStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RAISE_0=RULE_RAISE
		{
			$current.merge(this_RAISE_0);
		}
		{
			newLeafNode(this_RAISE_0, grammarAccess.getRaiseStatementAccess().getRAISETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getRaiseStatementAccess().getQualifiedExceptionNameParserRuleCall_1());
		}
		this_qualifiedExceptionName_1=rulequalifiedExceptionName
		{
			$current.merge(this_qualifiedExceptionName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledeleteStatement
entryRuledeleteStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteStatementRule()); }
	iv_ruledeleteStatement=ruledeleteStatement
	{ $current=$iv_ruledeleteStatement.current; }
	EOF;

// Rule deleteStatement
ruledeleteStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DELETE_0=RULE_DELETE
		{
			newLeafNode(this_DELETE_0, grammarAccess.getDeleteStatementAccess().getDELETETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getDeleteStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleeraseStatement
entryRuleeraseStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEraseStatementRule()); }
	iv_ruleeraseStatement=ruleeraseStatement
	{ $current=$iv_ruleeraseStatement.current; }
	EOF;

// Rule eraseStatement
ruleeraseStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ERASE_0=RULE_ERASE
		{
			newLeafNode(this_ERASE_0, grammarAccess.getEraseStatementAccess().getERASETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getEraseStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulelinkStatement
entryRulelinkStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkStatementRule()); }
	iv_rulelinkStatement=rulelinkStatement
	{ $current=$iv_rulelinkStatement.current; }
	EOF;

// Rule linkStatement
rulelinkStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLinkStatementAccess().getLinkTypeParserRuleCall_0());
		}
		rulelinkType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkStatementAccess().getN1NavigateExpressionParserRuleCall_1_0());
				}
				lv_n1_1_0=rulenavigateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkStatementRule());
					}
					set(
						$current,
						"n1",
						lv_n1_1_0,
						"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkStatementAccess().getRRelationshipSpecParserRuleCall_2_0());
				}
				lv_r_2_0=rulerelationshipSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkStatementRule());
					}
					set(
						$current,
						"r",
						lv_r_2_0,
						"org.xtuml.bp.ui.xtext.MASL.relationshipSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkStatementAccess().getN2NavigateExpressionParserRuleCall_3_0_0());
					}
					lv_n2_3_0=rulenavigateExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStatementRule());
						}
						set(
							$current,
							"n2",
							lv_n2_3_0,
							"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_USING_4=RULE_USING
				{
					newLeafNode(this_USING_4, grammarAccess.getLinkStatementAccess().getUSINGTerminalRuleCall_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkStatementAccess().getN3NavigateExpressionParserRuleCall_3_1_1_0());
						}
						lv_n3_5_0=rulenavigateExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkStatementRule());
							}
							set(
								$current,
								"n3",
								lv_n3_5_0,
								"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRulelinkType
entryRulelinkType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLinkTypeRule()); }
	iv_rulelinkType=rulelinkType
	{ $current=$iv_rulelinkType.current.getText(); }
	EOF;

// Rule linkType
rulelinkType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LINK_0=RULE_LINK
		{
			$current.merge(this_LINK_0);
		}
		{
			newLeafNode(this_LINK_0, grammarAccess.getLinkTypeAccess().getLINKTerminalRuleCall_0());
		}
		    |
		this_UNLINK_1=RULE_UNLINK
		{
			$current.merge(this_UNLINK_1);
		}
		{
			newLeafNode(this_UNLINK_1, grammarAccess.getLinkTypeAccess().getUNLINKTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulescheduleStatement
entryRulescheduleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleStatementRule()); }
	iv_rulescheduleStatement=rulescheduleStatement
	{ $current=$iv_rulescheduleStatement.current; }
	EOF;

// Rule scheduleStatement
rulescheduleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SCHEDULE_0=RULE_SCHEDULE
		{
			newLeafNode(this_SCHEDULE_0, grammarAccess.getScheduleStatementAccess().getSCHEDULETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getScheduleStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleStatementAccess().getGGenerateStatementParserRuleCall_2_0());
				}
				lv_g_2_0=rulegenerateStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleStatementRule());
					}
					set(
						$current,
						"g",
						lv_g_2_0,
						"org.xtuml.bp.ui.xtext.MASL.generateStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getScheduleStatementAccess().getScheduleTypeParserRuleCall_3());
		}
		rulescheduleType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_4_0());
				}
				lv_e_4_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleStatementRule());
					}
					add(
						$current,
						"e",
						lv_e_4_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_DELTA_5=RULE_DELTA
			{
				newLeafNode(this_DELTA_5, grammarAccess.getScheduleStatementAccess().getDELTATerminalRuleCall_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_5_1_0());
					}
					lv_e_6_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleStatementRule());
						}
						add(
							$current,
							"e",
							lv_e_6_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulecancelTimerStatement
entryRulecancelTimerStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCancelTimerStatementRule()); }
	iv_rulecancelTimerStatement=rulecancelTimerStatement
	{ $current=$iv_rulecancelTimerStatement.current; }
	EOF;

// Rule cancelTimerStatement
rulecancelTimerStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CANCEL_0=RULE_CANCEL
		{
			newLeafNode(this_CANCEL_0, grammarAccess.getCancelTimerStatementAccess().getCANCELTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getCancelTimerStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulescheduleType
entryRulescheduleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getScheduleTypeRule()); }
	iv_rulescheduleType=rulescheduleType
	{ $current=$iv_rulescheduleType.current.getText(); }
	EOF;

// Rule scheduleType
rulescheduleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_AT_0=RULE_AT
		{
			$current.merge(this_AT_0);
		}
		{
			newLeafNode(this_AT_0, grammarAccess.getScheduleTypeAccess().getATTerminalRuleCall_0());
		}
		    |
		this_DELAY_1=RULE_DELAY
		{
			$current.merge(this_DELAY_1);
		}
		{
			newLeafNode(this_DELAY_1, grammarAccess.getScheduleTypeAccess().getDELAYTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulegenerateStatement
entryRulegenerateStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenerateStatementRule()); }
	iv_rulegenerateStatement=rulegenerateStatement
	{ $current=$iv_rulegenerateStatement.current; }
	EOF;

// Rule generateStatement
rulegenerateStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_GENERATE_0=RULE_GENERATE
		{
			newLeafNode(this_GENERATE_0, grammarAccess.getGenerateStatementAccess().getGENERATETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getGenerateStatementAccess().getQualifiedEventNameParserRuleCall_1());
		}
		rulequalifiedEventName
		{
			afterParserOrEnumRuleCall();
		}
		this_LPAREN_2=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_2, grammarAccess.getGenerateStatementAccess().getLPARENTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getGenerateStatementAccess().getArgumentListParserRuleCall_3());
		}
		this_argumentList_3=ruleargumentList
		{
			$current = $this_argumentList_3.current;
			afterParserOrEnumRuleCall();
		}
		this_RPAREN_4=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_4, grammarAccess.getGenerateStatementAccess().getRPARENTerminalRuleCall_4());
		}
		(
			this_TO_5=RULE_TO
			{
				newLeafNode(this_TO_5, grammarAccess.getGenerateStatementAccess().getTOTerminalRuleCall_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenerateStatementAccess().getEExpressionParserRuleCall_5_1_0());
					}
					lv_e_6_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenerateStatementRule());
						}
						set(
							$current,
							"e",
							lv_e_6_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulequalifiedEventName
entryRulequalifiedEventName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedEventNameRule()); }
	iv_rulequalifiedEventName=rulequalifiedEventName
	{ $current=$iv_rulequalifiedEventName.current.getText(); }
	EOF;

// Rule qualifiedEventName
rulequalifiedEventName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQualifiedEventNameAccess().getQualifiedObjectNameParserRuleCall_0_0());
			}
			this_qualifiedObjectName_0=rulequalifiedObjectName
			{
				$current.merge(this_qualifiedObjectName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_DOT_1=RULE_DOT
			{
				$current.merge(this_DOT_1);
			}
			{
				newLeafNode(this_DOT_1, grammarAccess.getQualifiedEventNameAccess().getDOTTerminalRuleCall_0_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getQualifiedEventNameAccess().getEventNameParserRuleCall_1());
		}
		this_eventName_2=ruleeventName
		{
			$current.merge(this_eventName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleifStatement
entryRuleifStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleifStatement=ruleifStatement
	{ $current=$iv_ruleifStatement.current; }
	EOF;

// Rule ifStatement
ruleifStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IF_0=RULE_IF
		{
			newLeafNode(this_IF_0, grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getCConditionParserRuleCall_1_0());
				}
				lv_c_1_0=rulecondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"c",
						lv_c_1_0,
						"org.xtuml.bp.ui.xtext.MASL.condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_THEN_2=RULE_THEN
		{
			newLeafNode(this_THEN_2, grammarAccess.getIfStatementAccess().getTHENTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getSStatementListParserRuleCall_3_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getE1ElsifBlockParserRuleCall_4_0());
				}
				lv_e1_4_0=ruleelsifBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					add(
						$current,
						"e1",
						lv_e1_4_0,
						"org.xtuml.bp.ui.xtext.MASL.elsifBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getE2ElseBlockParserRuleCall_5_0());
				}
				lv_e2_5_0=ruleelseBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"e2",
						lv_e2_5_0,
						"org.xtuml.bp.ui.xtext.MASL.elseBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getIfStatementAccess().getENDTerminalRuleCall_6());
		}
		(
			this_IF_7=RULE_IF
			{
				newLeafNode(this_IF_7, grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_7());
			}
		)?
	)
;

// Entry rule entryRuleelsifBlock
entryRuleelsifBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElsifBlockRule()); }
	iv_ruleelsifBlock=ruleelsifBlock
	{ $current=$iv_ruleelsifBlock.current; }
	EOF;

// Rule elsifBlock
ruleelsifBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ELSIF_0=RULE_ELSIF
		{
			newLeafNode(this_ELSIF_0, grammarAccess.getElsifBlockAccess().getELSIFTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElsifBlockAccess().getCConditionParserRuleCall_1_0());
				}
				lv_c_1_0=rulecondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElsifBlockRule());
					}
					set(
						$current,
						"c",
						lv_c_1_0,
						"org.xtuml.bp.ui.xtext.MASL.condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_THEN_2=RULE_THEN
		{
			newLeafNode(this_THEN_2, grammarAccess.getElsifBlockAccess().getTHENTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElsifBlockAccess().getSStatementListParserRuleCall_3_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElsifBlockRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleelseBlock
entryRuleelseBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseBlockRule()); }
	iv_ruleelseBlock=ruleelseBlock
	{ $current=$iv_ruleelseBlock.current; }
	EOF;

// Rule elseBlock
ruleelseBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ELSE_0=RULE_ELSE
		{
			newLeafNode(this_ELSE_0, grammarAccess.getElseBlockAccess().getELSETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getElseBlockAccess().getStatementListParserRuleCall_1());
		}
		this_statementList_1=rulestatementList
		{
			$current = $this_statementList_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulewhileStatement
entryRulewhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_rulewhileStatement=rulewhileStatement
	{ $current=$iv_rulewhileStatement.current; }
	EOF;

// Rule whileStatement
rulewhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHILE_0=RULE_WHILE
		{
			newLeafNode(this_WHILE_0, grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getCConditionParserRuleCall_1_0());
				}
				lv_c_1_0=rulecondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"c",
						lv_c_1_0,
						"org.xtuml.bp.ui.xtext.MASL.condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_LOOP_2=RULE_LOOP
		{
			newLeafNode(this_LOOP_2, grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getSStatementListParserRuleCall_3_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getWhileStatementAccess().getENDTerminalRuleCall_4());
		}
		(
			this_LOOP_5=RULE_LOOP
			{
				newLeafNode(this_LOOP_5, grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_5());
			}
		)?
	)
;

// Entry rule entryRulecondition
entryRulecondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_rulecondition=rulecondition
	{ $current=$iv_rulecondition.current; }
	EOF;

// Rule condition
rulecondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConditionAccess().getExpressionParserRuleCall());
	}
	this_expression_0=ruleexpression
	{
		$current = $this_expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulecaseStatement
entryRulecaseStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseStatementRule()); }
	iv_rulecaseStatement=rulecaseStatement
	{ $current=$iv_rulecaseStatement.current; }
	EOF;

// Rule caseStatement
rulecaseStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CASE_0=RULE_CASE
		{
			newLeafNode(this_CASE_0, grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getCaseStatementAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
		this_IS_2=RULE_IS
		{
			newLeafNode(this_IS_2, grammarAccess.getCaseStatementAccess().getISTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseStatementAccess().getC1CaseAlternativeParserRuleCall_3_0());
				}
				lv_c1_3_0=rulecaseAlternative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseStatementRule());
					}
					add(
						$current,
						"c1",
						lv_c1_3_0,
						"org.xtuml.bp.ui.xtext.MASL.caseAlternative");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseStatementAccess().getC2CaseOthersParserRuleCall_4_0());
				}
				lv_c2_4_0=rulecaseOthers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseStatementRule());
					}
					set(
						$current,
						"c2",
						lv_c2_4_0,
						"org.xtuml.bp.ui.xtext.MASL.caseOthers");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getCaseStatementAccess().getENDTerminalRuleCall_5());
		}
		(
			this_CASE_6=RULE_CASE
			{
				newLeafNode(this_CASE_6, grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_6());
			}
		)?
	)
;

// Entry rule entryRulecaseAlternative
entryRulecaseAlternative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseAlternativeRule()); }
	iv_rulecaseAlternative=rulecaseAlternative
	{ $current=$iv_rulecaseAlternative.current; }
	EOF;

// Rule caseAlternative
rulecaseAlternative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHEN_0=RULE_WHEN
		{
			newLeafNode(this_WHEN_0, grammarAccess.getCaseAlternativeAccess().getWHENTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getCaseAlternativeAccess().getChoiceListParserRuleCall_1());
		}
		this_choiceList_1=rulechoiceList
		{
			$current = $this_choiceList_1.current;
			afterParserOrEnumRuleCall();
		}
		this_GOES_TO_2=RULE_GOES_TO
		{
			newLeafNode(this_GOES_TO_2, grammarAccess.getCaseAlternativeAccess().getGOES_TOTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAlternativeAccess().getSStatementListParserRuleCall_3_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseAlternativeRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulechoiceList
entryRulechoiceList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChoiceListRule()); }
	iv_rulechoiceList=rulechoiceList
	{ $current=$iv_rulechoiceList.current; }
	EOF;

// Rule choiceList
rulechoiceList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_0_0());
				}
				lv_e_0_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChoiceListRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_CASE_OR_1=RULE_CASE_OR
			{
				newLeafNode(this_CASE_OR_1, grammarAccess.getChoiceListAccess().getCASE_ORTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChoiceListRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulecaseOthers
entryRulecaseOthers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseOthersRule()); }
	iv_rulecaseOthers=rulecaseOthers
	{ $current=$iv_rulecaseOthers.current; }
	EOF;

// Rule caseOthers
rulecaseOthers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHEN_0=RULE_WHEN
		{
			newLeafNode(this_WHEN_0, grammarAccess.getCaseOthersAccess().getWHENTerminalRuleCall_0());
		}
		this_OTHERS_1=RULE_OTHERS
		{
			newLeafNode(this_OTHERS_1, grammarAccess.getCaseOthersAccess().getOTHERSTerminalRuleCall_1());
		}
		this_GOES_TO_2=RULE_GOES_TO
		{
			newLeafNode(this_GOES_TO_2, grammarAccess.getCaseOthersAccess().getGOES_TOTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getCaseOthersAccess().getStatementListParserRuleCall_3());
		}
		this_statementList_3=rulestatementList
		{
			$current = $this_statementList_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleforStatement
entryRuleforStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleforStatement=ruleforStatement
	{ $current=$iv_ruleforStatement.current; }
	EOF;

// Rule forStatement
ruleforStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FOR_0=RULE_FOR
		{
			newLeafNode(this_FOR_0, grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getForStatementAccess().getLoopVariableSpecParserRuleCall_1());
		}
		this_loopVariableSpec_1=ruleloopVariableSpec
		{
			$current = $this_loopVariableSpec_1.current;
			afterParserOrEnumRuleCall();
		}
		this_LOOP_2=RULE_LOOP
		{
			newLeafNode(this_LOOP_2, grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getSStatementListParserRuleCall_3_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getForStatementAccess().getENDTerminalRuleCall_4());
		}
		(
			this_LOOP_5=RULE_LOOP
			{
				newLeafNode(this_LOOP_5, grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_5());
			}
		)?
	)
;

// Entry rule entryRuleloopVariableSpec
entryRuleloopVariableSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopVariableSpecRule()); }
	iv_ruleloopVariableSpec=ruleloopVariableSpec
	{ $current=$iv_ruleloopVariableSpec.current; }
	EOF;

// Rule loopVariableSpec
ruleloopVariableSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoopVariableSpecAccess().getIdentifierParserRuleCall_0());
		}
		ruleidentifier
		{
			afterParserOrEnumRuleCall();
		}
		this_IN_1=RULE_IN
		{
			newLeafNode(this_IN_1, grammarAccess.getLoopVariableSpecAccess().getINTerminalRuleCall_1());
		}
		(
			this_REVERSE_2=RULE_REVERSE
			{
				newLeafNode(this_REVERSE_2, grammarAccess.getLoopVariableSpecAccess().getREVERSETerminalRuleCall_2());
			}
		)?
		{
			newCompositeNode(grammarAccess.getLoopVariableSpecAccess().getExpressionParserRuleCall_3());
		}
		this_expression_3=ruleexpression
		{
			$current = $this_expression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulecodeBlockStatement
entryRulecodeBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockStatementRule()); }
	iv_rulecodeBlockStatement=rulecodeBlockStatement
	{ $current=$iv_rulecodeBlockStatement.current; }
	EOF;

// Rule codeBlockStatement
rulecodeBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_DECLARE_0=RULE_DECLARE
			{
				newLeafNode(this_DECLARE_0, grammarAccess.getCodeBlockStatementAccess().getDECLARETerminalRuleCall_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCodeBlockStatementAccess().getVVariableDeclarationParserRuleCall_0_1_0());
					}
					lv_v_1_0=rulevariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCodeBlockStatementRule());
						}
						add(
							$current,
							"v",
							lv_v_1_0,
							"org.xtuml.bp.ui.xtext.MASL.variableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getCodeBlockStatementAccess().getBEGINTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeBlockStatementAccess().getSStatementListParserRuleCall_2_0());
				}
				lv_s_3_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeBlockStatementRule());
					}
					set(
						$current,
						"s",
						lv_s_3_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EXCEPTION_4=RULE_EXCEPTION
			{
				newLeafNode(this_EXCEPTION_4, grammarAccess.getCodeBlockStatementAccess().getEXCEPTIONTerminalRuleCall_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCodeBlockStatementAccess().getEExceptionHandlerParserRuleCall_3_1_0());
					}
					lv_e_5_0=ruleexceptionHandler
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCodeBlockStatementRule());
						}
						add(
							$current,
							"e",
							lv_e_5_0,
							"org.xtuml.bp.ui.xtext.MASL.exceptionHandler");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getCodeBlockStatementAccess().getPOtherHandlerParserRuleCall_3_2_0());
					}
					lv_p_6_0=ruleotherHandler
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCodeBlockStatementRule());
						}
						set(
							$current,
							"p",
							lv_p_6_0,
							"org.xtuml.bp.ui.xtext.MASL.otherHandler");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		this_END_7=RULE_END
		{
			newLeafNode(this_END_7, grammarAccess.getCodeBlockStatementAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRulecodeBlock
entryRulecodeBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockRule()); }
	iv_rulecodeBlock=rulecodeBlock
	{ $current=$iv_rulecodeBlock.current; }
	EOF;

// Rule codeBlock
rulecodeBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeBlockAccess().getVVariableDeclarationParserRuleCall_0_0());
				}
				lv_v_0_0=rulevariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeBlockRule());
					}
					add(
						$current,
						"v",
						lv_v_0_0,
						"org.xtuml.bp.ui.xtext.MASL.variableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getCodeBlockAccess().getBEGINTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeBlockAccess().getSStatementListParserRuleCall_2_0());
				}
				lv_s_2_0=rulestatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeBlockRule());
					}
					set(
						$current,
						"s",
						lv_s_2_0,
						"org.xtuml.bp.ui.xtext.MASL.statementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EXCEPTION_3=RULE_EXCEPTION
			{
				newLeafNode(this_EXCEPTION_3, grammarAccess.getCodeBlockAccess().getEXCEPTIONTerminalRuleCall_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCodeBlockAccess().getEExceptionHandlerParserRuleCall_3_1_0());
					}
					lv_e_4_0=ruleexceptionHandler
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCodeBlockRule());
						}
						add(
							$current,
							"e",
							lv_e_4_0,
							"org.xtuml.bp.ui.xtext.MASL.exceptionHandler");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getCodeBlockAccess().getOOtherHandlerParserRuleCall_3_2_0());
					}
					lv_o_5_0=ruleotherHandler
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCodeBlockRule());
						}
						set(
							$current,
							"o",
							lv_o_5_0,
							"org.xtuml.bp.ui.xtext.MASL.otherHandler");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCodeBlockAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRulevariableDeclaration
entryRulevariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_rulevariableDeclaration=rulevariableDeclaration
	{ $current=$iv_rulevariableDeclaration.current; }
	EOF;

// Rule variableDeclaration
rulevariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableNameParserRuleCall_0());
		}
		rulevariableName
		{
			afterParserOrEnumRuleCall();
		}
		this_COLON_1=RULE_COLON
		{
			newLeafNode(this_COLON_1, grammarAccess.getVariableDeclarationAccess().getCOLONTerminalRuleCall_1());
		}
		(
			this_READONLY_2=RULE_READONLY
			{
				newLeafNode(this_READONLY_2, grammarAccess.getVariableDeclarationAccess().getREADONLYTerminalRuleCall_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTTypeReferenceWithCAParserRuleCall_3_0());
				}
				lv_t_3_0=ruletypeReferenceWithCA
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"t",
						lv_t_3_0,
						"org.xtuml.bp.ui.xtext.MASL.typeReferenceWithCA");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_ASSIGN_4=RULE_ASSIGN
			{
				newLeafNode(this_ASSIGN_4, grammarAccess.getVariableDeclarationAccess().getASSIGNTerminalRuleCall_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getEExpressionParserRuleCall_4_1_0());
					}
					lv_e_5_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
						}
						set(
							$current,
							"e",
							lv_e_5_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_SEMI_6=RULE_SEMI
		{
			newLeafNode(this_SEMI_6, grammarAccess.getVariableDeclarationAccess().getSEMITerminalRuleCall_5());
		}
		{
			newCompositeNode(grammarAccess.getVariableDeclarationAccess().getPragmaListParserRuleCall_6());
		}
		rulepragmaList
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleexceptionHandler
entryRuleexceptionHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionHandlerRule()); }
	iv_ruleexceptionHandler=ruleexceptionHandler
	{ $current=$iv_ruleexceptionHandler.current; }
	EOF;

// Rule exceptionHandler
ruleexceptionHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHEN_0=RULE_WHEN
		{
			newLeafNode(this_WHEN_0, grammarAccess.getExceptionHandlerAccess().getWHENTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getExceptionHandlerAccess().getQualifiedExceptionNameParserRuleCall_1());
		}
		rulequalifiedExceptionName
		{
			afterParserOrEnumRuleCall();
		}
		this_GOES_TO_2=RULE_GOES_TO
		{
			newLeafNode(this_GOES_TO_2, grammarAccess.getExceptionHandlerAccess().getGOES_TOTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getExceptionHandlerAccess().getStatementListParserRuleCall_3());
		}
		this_statementList_3=rulestatementList
		{
			$current = $this_statementList_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleotherHandler
entryRuleotherHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherHandlerRule()); }
	iv_ruleotherHandler=ruleotherHandler
	{ $current=$iv_ruleotherHandler.current; }
	EOF;

// Rule otherHandler
ruleotherHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHEN_0=RULE_WHEN
		{
			newLeafNode(this_WHEN_0, grammarAccess.getOtherHandlerAccess().getWHENTerminalRuleCall_0());
		}
		this_OTHERS_1=RULE_OTHERS
		{
			newLeafNode(this_OTHERS_1, grammarAccess.getOtherHandlerAccess().getOTHERSTerminalRuleCall_1());
		}
		this_GOES_TO_2=RULE_GOES_TO
		{
			newLeafNode(this_GOES_TO_2, grammarAccess.getOtherHandlerAccess().getGOES_TOTerminalRuleCall_2());
		}
		{
			newCompositeNode(grammarAccess.getOtherHandlerAccess().getStatementListParserRuleCall_3());
		}
		this_statementList_3=rulestatementList
		{
			$current = $this_statementList_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulequalifiedExceptionName
entryRulequalifiedExceptionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedExceptionNameRule()); }
	iv_rulequalifiedExceptionName=rulequalifiedExceptionName
	{ $current=$iv_rulequalifiedExceptionName.current.getText(); }
	EOF;

// Rule qualifiedExceptionName
rulequalifiedExceptionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQualifiedExceptionNameAccess().getDomainNameParserRuleCall_0_0());
			}
			this_domainName_0=ruledomainName
			{
				$current.merge(this_domainName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_SCOPE_1=RULE_SCOPE
			{
				$current.merge(this_SCOPE_1);
			}
			{
				newLeafNode(this_SCOPE_1, grammarAccess.getQualifiedExceptionNameAccess().getSCOPETerminalRuleCall_0_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getQualifiedExceptionNameAccess().getExceptionNameParserRuleCall_1());
		}
		this_exceptionName_2=ruleexceptionName
		{
			$current.merge(this_exceptionName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulevariableName
entryRulevariableName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariableNameRule()); }
	iv_rulevariableName=rulevariableName
	{ $current=$iv_rulevariableName.current.getText(); }
	EOF;

// Rule variableName
rulevariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getVariableNameAccess().getIdentifierParserRuleCall());
	}
	this_identifier_0=ruleidentifier
	{
		$current.merge(this_identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulefindCondition
entryRulefindCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindConditionRule()); }
	iv_rulefindCondition=rulefindCondition
	{ $current=$iv_rulefindCondition.current; }
	EOF;

// Rule findCondition
rulefindCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFindConditionAccess().getFFindLogicalOrParserRuleCall_0());
			}
			lv_f_0_0=rulefindLogicalOr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFindConditionRule());
				}
				set(
					$current,
					"f",
					lv_f_0_0,
					"org.xtuml.bp.ui.xtext.MASL.findLogicalOr");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulefindLogicalOr
entryRulefindLogicalOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindLogicalOrRule()); }
	iv_rulefindLogicalOr=rulefindLogicalOr
	{ $current=$iv_rulefindLogicalOr.current; }
	EOF;

// Rule findLogicalOr
rulefindLogicalOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_0_0());
				}
				lv_f_0_0=rulefindLogicalXor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindLogicalOrRule());
					}
					add(
						$current,
						"f",
						lv_f_0_0,
						"org.xtuml.bp.ui.xtext.MASL.findLogicalXor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_OR_1=RULE_OR
			{
				newLeafNode(this_OR_1, grammarAccess.getFindLogicalOrAccess().getORTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_1_1_0());
					}
					lv_f_2_0=rulefindLogicalXor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFindLogicalOrRule());
						}
						add(
							$current,
							"f",
							lv_f_2_0,
							"org.xtuml.bp.ui.xtext.MASL.findLogicalXor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulefindLogicalXor
entryRulefindLogicalXor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindLogicalXorRule()); }
	iv_rulefindLogicalXor=rulefindLogicalXor
	{ $current=$iv_rulefindLogicalXor.current; }
	EOF;

// Rule findLogicalXor
rulefindLogicalXor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_0_0());
				}
				lv_f_0_0=rulefindLogicalAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindLogicalXorRule());
					}
					add(
						$current,
						"f",
						lv_f_0_0,
						"org.xtuml.bp.ui.xtext.MASL.findLogicalAnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_XOR_1=RULE_XOR
			{
				newLeafNode(this_XOR_1, grammarAccess.getFindLogicalXorAccess().getXORTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_1_1_0());
					}
					lv_f_2_0=rulefindLogicalAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFindLogicalXorRule());
						}
						add(
							$current,
							"f",
							lv_f_2_0,
							"org.xtuml.bp.ui.xtext.MASL.findLogicalAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulefindLogicalAnd
entryRulefindLogicalAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindLogicalAndRule()); }
	iv_rulefindLogicalAnd=rulefindLogicalAnd
	{ $current=$iv_rulefindLogicalAnd.current; }
	EOF;

// Rule findLogicalAnd
rulefindLogicalAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_0_0());
				}
				lv_f_0_0=rulefindPrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindLogicalAndRule());
					}
					add(
						$current,
						"f",
						lv_f_0_0,
						"org.xtuml.bp.ui.xtext.MASL.findPrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_AND_1=RULE_AND
			{
				newLeafNode(this_AND_1, grammarAccess.getFindLogicalAndAccess().getANDTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_1_1_0());
					}
					lv_f_2_0=rulefindPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFindLogicalAndRule());
						}
						add(
							$current,
							"f",
							lv_f_2_0,
							"org.xtuml.bp.ui.xtext.MASL.findPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulefindPrimary
entryRulefindPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindPrimaryRule()); }
	iv_rulefindPrimary=rulefindPrimary
	{ $current=$iv_rulefindPrimary.current; }
	EOF;

// Rule findPrimary
rulefindPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFindPrimaryAccess().getFindComparisonParserRuleCall_0());
		}
		this_findComparison_0=rulefindComparison
		{
			$current = $this_findComparison_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFindPrimaryAccess().getFindUnaryParserRuleCall_1());
		}
		this_findUnary_1=rulefindUnary
		{
			$current = $this_findUnary_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulefindUnary
entryRulefindUnary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindUnaryRule()); }
	iv_rulefindUnary=rulefindUnary
	{ $current=$iv_rulefindUnary.current; }
	EOF;

// Rule findUnary
rulefindUnary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_NOT_0=RULE_NOT
			{
				newLeafNode(this_NOT_0, grammarAccess.getFindUnaryAccess().getNOTTerminalRuleCall_0_0());
			}
			{
				newCompositeNode(grammarAccess.getFindUnaryAccess().getFindUnaryParserRuleCall_0_1());
			}
			this_findUnary_1=rulefindUnary
			{
				$current = $this_findUnary_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_LPAREN_2=RULE_LPAREN
			{
				newLeafNode(this_LPAREN_2, grammarAccess.getFindUnaryAccess().getLPARENTerminalRuleCall_1_0());
			}
			{
				newCompositeNode(grammarAccess.getFindUnaryAccess().getFindConditionParserRuleCall_1_1());
			}
			this_findCondition_3=rulefindCondition
			{
				$current = $this_findCondition_3.current;
				afterParserOrEnumRuleCall();
			}
			this_RPAREN_4=RULE_RPAREN
			{
				newLeafNode(this_RPAREN_4, grammarAccess.getFindUnaryAccess().getRPARENTerminalRuleCall_1_2());
			}
		)
	)
;

// Entry rule entryRulefindComparison
entryRulefindComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindComparisonRule()); }
	iv_rulefindComparison=rulefindComparison
	{ $current=$iv_rulefindComparison.current; }
	EOF;

// Rule findComparison
rulefindComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindComparisonAccess().getFFindNameParserRuleCall_0_0());
				}
				lv_f_0_0=rulefindName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindComparisonRule());
					}
					set(
						$current,
						"f",
						lv_f_0_0,
						"org.xtuml.bp.ui.xtext.MASL.findName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EQUAL_1=RULE_EQUAL
			{
				newLeafNode(this_EQUAL_1, grammarAccess.getFindComparisonAccess().getEQUALTerminalRuleCall_1_0());
			}
			    |
			this_NOT_EQUAL_2=RULE_NOT_EQUAL
			{
				newLeafNode(this_NOT_EQUAL_2, grammarAccess.getFindComparisonAccess().getNOT_EQUALTerminalRuleCall_1_1());
			}
			    |
			this_LT_3=RULE_LT
			{
				newLeafNode(this_LT_3, grammarAccess.getFindComparisonAccess().getLTTerminalRuleCall_1_2());
			}
			    |
			this_GT_4=RULE_GT
			{
				newLeafNode(this_GT_4, grammarAccess.getFindComparisonAccess().getGTTerminalRuleCall_1_3());
			}
			    |
			this_LTE_5=RULE_LTE
			{
				newLeafNode(this_LTE_5, grammarAccess.getFindComparisonAccess().getLTETerminalRuleCall_1_4());
			}
			    |
			this_GTE_6=RULE_GTE
			{
				newLeafNode(this_GTE_6, grammarAccess.getFindComparisonAccess().getGTETerminalRuleCall_1_5());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFindComparisonAccess().getAAdditiveExpParserRuleCall_2_0());
				}
				lv_a_7_0=ruleadditiveExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindComparisonRule());
					}
					set(
						$current,
						"a",
						lv_a_7_0,
						"org.xtuml.bp.ui.xtext.MASL.additiveExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulefindName
entryRulefindName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindNameRule()); }
	iv_rulefindName=rulefindName
	{ $current=$iv_rulefindName.current; }
	EOF;

// Rule findName
rulefindName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindNameAccess().getI1IdentifierParserRuleCall_0_0());
				}
				lv_i1_0_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindNameRule());
					}
					set(
						$current,
						"i1",
						lv_i1_0_0,
						"org.xtuml.bp.ui.xtext.MASL.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_DOT_1=RULE_DOT
				{
					newLeafNode(this_DOT_1, grammarAccess.getFindNameAccess().getDOTTerminalRuleCall_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFindNameAccess().getI2IdentifierParserRuleCall_1_0_1_0());
						}
						lv_i2_2_0=ruleidentifier
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFindNameRule());
							}
							add(
								$current,
								"i2",
								lv_i2_2_0,
								"org.xtuml.bp.ui.xtext.MASL.identifier");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				this_LBRACKET_3=RULE_LBRACKET
				{
					newLeafNode(this_LBRACKET_3, grammarAccess.getFindNameAccess().getLBRACKETTerminalRuleCall_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFindNameAccess().getEExpressionParserRuleCall_1_1_1_0());
						}
						lv_e_4_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFindNameRule());
							}
							add(
								$current,
								"e",
								lv_e_4_0,
								"org.xtuml.bp.ui.xtext.MASL.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RBRACKET_5=RULE_RBRACKET
				{
					newLeafNode(this_RBRACKET_5, grammarAccess.getFindNameAccess().getRBRACKETTerminalRuleCall_1_1_2());
				}
			)
		)*
	)
;

// Entry rule entryRuleexpression
entryRuleexpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleexpression=ruleexpression
	{ $current=$iv_ruleexpression.current; }
	EOF;

// Rule expression
ruleexpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionAccess().getRRangeExpressionParserRuleCall_0());
			}
			lv_r_0_0=rulerangeExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionRule());
				}
				set(
					$current,
					"r",
					lv_r_0_0,
					"org.xtuml.bp.ui.xtext.MASL.rangeExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulerangeExpression
entryRulerangeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeExpressionRule()); }
	iv_rulerangeExpression=rulerangeExpression
	{ $current=$iv_rulerangeExpression.current; }
	EOF;

// Rule rangeExpression
rulerangeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_0_0());
				}
				lv_l_0_0=rulelogicalOr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeExpressionRule());
					}
					add(
						$current,
						"l",
						lv_l_0_0,
						"org.xtuml.bp.ui.xtext.MASL.logicalOr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_RANGE_DOTS_1=RULE_RANGE_DOTS
			{
				newLeafNode(this_RANGE_DOTS_1, grammarAccess.getRangeExpressionAccess().getRANGE_DOTSTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_1_1_0());
					}
					lv_l_2_0=rulelogicalOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeExpressionRule());
						}
						add(
							$current,
							"l",
							lv_l_2_0,
							"org.xtuml.bp.ui.xtext.MASL.logicalOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulelogicalOr
entryRulelogicalOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrRule()); }
	iv_rulelogicalOr=rulelogicalOr
	{ $current=$iv_rulelogicalOr.current; }
	EOF;

// Rule logicalOr
rulelogicalOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_0_0());
				}
				lv_l_0_0=rulelogicalXor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalOrRule());
					}
					add(
						$current,
						"l",
						lv_l_0_0,
						"org.xtuml.bp.ui.xtext.MASL.logicalXor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_OR_1=RULE_OR
			{
				newLeafNode(this_OR_1, grammarAccess.getLogicalOrAccess().getORTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_1_1_0());
					}
					lv_l_2_0=rulelogicalXor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrRule());
						}
						add(
							$current,
							"l",
							lv_l_2_0,
							"org.xtuml.bp.ui.xtext.MASL.logicalXor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulelogicalXor
entryRulelogicalXor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalXorRule()); }
	iv_rulelogicalXor=rulelogicalXor
	{ $current=$iv_rulelogicalXor.current; }
	EOF;

// Rule logicalXor
rulelogicalXor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_0_0());
				}
				lv_l_0_0=rulelogicalAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalXorRule());
					}
					add(
						$current,
						"l",
						lv_l_0_0,
						"org.xtuml.bp.ui.xtext.MASL.logicalAnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_XOR_1=RULE_XOR
			{
				newLeafNode(this_XOR_1, grammarAccess.getLogicalXorAccess().getXORTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_1_1_0());
					}
					lv_l_2_0=rulelogicalAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalXorRule());
						}
						add(
							$current,
							"l",
							lv_l_2_0,
							"org.xtuml.bp.ui.xtext.MASL.logicalAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulelogicalAnd
entryRulelogicalAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndRule()); }
	iv_rulelogicalAnd=rulelogicalAnd
	{ $current=$iv_rulelogicalAnd.current; }
	EOF;

// Rule logicalAnd
rulelogicalAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_0_0());
				}
				lv_e_0_0=ruleequality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalAndRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"org.xtuml.bp.ui.xtext.MASL.equality");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_AND_1=RULE_AND
			{
				newLeafNode(this_AND_1, grammarAccess.getLogicalAndAccess().getANDTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleequality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"org.xtuml.bp.ui.xtext.MASL.equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleequality
entryRuleequality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleequality=ruleequality
	{ $current=$iv_ruleequality.current; }
	EOF;

// Rule equality
ruleequality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_0_0());
				}
				lv_r_0_0=rulerelationalExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityRule());
					}
					add(
						$current,
						"r",
						lv_r_0_0,
						"org.xtuml.bp.ui.xtext.MASL.relationalExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_EQUAL_1=RULE_EQUAL
				{
					newLeafNode(this_EQUAL_1, grammarAccess.getEqualityAccess().getEQUALTerminalRuleCall_1_0_0());
				}
				    |
				this_NOT_EQUAL_2=RULE_NOT_EQUAL
				{
					newLeafNode(this_NOT_EQUAL_2, grammarAccess.getEqualityAccess().getNOT_EQUALTerminalRuleCall_1_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_1_1_0());
					}
					lv_r_3_0=rulerelationalExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						add(
							$current,
							"r",
							lv_r_3_0,
							"org.xtuml.bp.ui.xtext.MASL.relationalExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulerelationalExp
entryRulerelationalExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpRule()); }
	iv_rulerelationalExp=rulerelationalExp
	{ $current=$iv_rulerelationalExp.current; }
	EOF;

// Rule relationalExp
rulerelationalExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_0_0());
				}
				lv_a_0_0=ruleadditiveExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationalExpRule());
					}
					add(
						$current,
						"a",
						lv_a_0_0,
						"org.xtuml.bp.ui.xtext.MASL.additiveExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_LT_1=RULE_LT
				{
					newLeafNode(this_LT_1, grammarAccess.getRelationalExpAccess().getLTTerminalRuleCall_1_0_0());
				}
				    |
				this_GT_2=RULE_GT
				{
					newLeafNode(this_GT_2, grammarAccess.getRelationalExpAccess().getGTTerminalRuleCall_1_0_1());
				}
				    |
				this_LTE_3=RULE_LTE
				{
					newLeafNode(this_LTE_3, grammarAccess.getRelationalExpAccess().getLTETerminalRuleCall_1_0_2());
				}
				    |
				this_GTE_4=RULE_GTE
				{
					newLeafNode(this_GTE_4, grammarAccess.getRelationalExpAccess().getGTETerminalRuleCall_1_0_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_1_1_0());
					}
					lv_a_5_0=ruleadditiveExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpRule());
						}
						add(
							$current,
							"a",
							lv_a_5_0,
							"org.xtuml.bp.ui.xtext.MASL.additiveExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleadditiveExp
entryRuleadditiveExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpRule()); }
	iv_ruleadditiveExp=ruleadditiveExp
	{ $current=$iv_ruleadditiveExp.current; }
	EOF;

// Rule additiveExp
ruleadditiveExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_0_0());
				}
				lv_m_0_0=rulemultExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditiveExpRule());
					}
					add(
						$current,
						"m",
						lv_m_0_0,
						"org.xtuml.bp.ui.xtext.MASL.multExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_PLUS_1=RULE_PLUS
				{
					newLeafNode(this_PLUS_1, grammarAccess.getAdditiveExpAccess().getPLUSTerminalRuleCall_1_0_0());
				}
				    |
				this_MINUS_2=RULE_MINUS
				{
					newLeafNode(this_MINUS_2, grammarAccess.getAdditiveExpAccess().getMINUSTerminalRuleCall_1_0_1());
				}
				    |
				this_CONCATENATE_3=RULE_CONCATENATE
				{
					newLeafNode(this_CONCATENATE_3, grammarAccess.getAdditiveExpAccess().getCONCATENATETerminalRuleCall_1_0_2());
				}
				    |
				this_UNION_4=RULE_UNION
				{
					newLeafNode(this_UNION_4, grammarAccess.getAdditiveExpAccess().getUNIONTerminalRuleCall_1_0_3());
				}
				    |
				this_NOT_IN_5=RULE_NOT_IN
				{
					newLeafNode(this_NOT_IN_5, grammarAccess.getAdditiveExpAccess().getNOT_INTerminalRuleCall_1_0_4());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_1_1_0());
					}
					lv_m_6_0=rulemultExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpRule());
						}
						add(
							$current,
							"m",
							lv_m_6_0,
							"org.xtuml.bp.ui.xtext.MASL.multExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulemultExp
entryRulemultExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExpRule()); }
	iv_rulemultExp=rulemultExp
	{ $current=$iv_rulemultExp.current; }
	EOF;

// Rule multExp
rulemultExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_0_0());
				}
				lv_u_0_0=ruleunaryExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultExpRule());
					}
					add(
						$current,
						"u",
						lv_u_0_0,
						"org.xtuml.bp.ui.xtext.MASL.unaryExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_TIMES_1=RULE_TIMES
				{
					newLeafNode(this_TIMES_1, grammarAccess.getMultExpAccess().getTIMESTerminalRuleCall_1_0_0());
				}
				    |
				this_DIVIDE_2=RULE_DIVIDE
				{
					newLeafNode(this_DIVIDE_2, grammarAccess.getMultExpAccess().getDIVIDETerminalRuleCall_1_0_1());
				}
				    |
				this_MOD_3=RULE_MOD
				{
					newLeafNode(this_MOD_3, grammarAccess.getMultExpAccess().getMODTerminalRuleCall_1_0_2());
				}
				    |
				this_POWER_4=RULE_POWER
				{
					newLeafNode(this_POWER_4, grammarAccess.getMultExpAccess().getPOWERTerminalRuleCall_1_0_3());
				}
				    |
				this_REM_5=RULE_REM
				{
					newLeafNode(this_REM_5, grammarAccess.getMultExpAccess().getREMTerminalRuleCall_1_0_4());
				}
				    |
				this_INTERSECTION_6=RULE_INTERSECTION
				{
					newLeafNode(this_INTERSECTION_6, grammarAccess.getMultExpAccess().getINTERSECTIONTerminalRuleCall_1_0_5());
				}
				    |
				this_DISUNION_7=RULE_DISUNION
				{
					newLeafNode(this_DISUNION_7, grammarAccess.getMultExpAccess().getDISUNIONTerminalRuleCall_1_0_6());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_1_1_0());
					}
					lv_u_8_0=ruleunaryExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultExpRule());
						}
						add(
							$current,
							"u",
							lv_u_8_0,
							"org.xtuml.bp.ui.xtext.MASL.unaryExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleunaryExp
entryRuleunaryExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpRule()); }
	iv_ruleunaryExp=ruleunaryExp
	{ $current=$iv_ruleunaryExp.current; }
	EOF;

// Rule unaryExp
ruleunaryExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnaryExpAccess().getUnaryOperatorParserRuleCall_0_0());
			}
			ruleunaryOperator
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getUnaryExpAccess().getUnaryExpParserRuleCall_0_1());
			}
			this_unaryExp_1=ruleunaryExp
			{
				$current = $this_unaryExp_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExpAccess().getLinkExpressionParserRuleCall_1());
		}
		this_linkExpression_2=rulelinkExpression
		{
			$current = $this_linkExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleunaryOperator
entryRuleunaryOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); }
	iv_ruleunaryOperator=ruleunaryOperator
	{ $current=$iv_ruleunaryOperator.current.getText(); }
	EOF;

// Rule unaryOperator
ruleunaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_MINUS_0=RULE_MINUS
		{
			$current.merge(this_MINUS_0);
		}
		{
			newLeafNode(this_MINUS_0, grammarAccess.getUnaryOperatorAccess().getMINUSTerminalRuleCall_0());
		}
		    |
		this_PLUS_1=RULE_PLUS
		{
			$current.merge(this_PLUS_1);
		}
		{
			newLeafNode(this_PLUS_1, grammarAccess.getUnaryOperatorAccess().getPLUSTerminalRuleCall_1());
		}
		    |
		this_NOT_2=RULE_NOT
		{
			$current.merge(this_NOT_2);
		}
		{
			newLeafNode(this_NOT_2, grammarAccess.getUnaryOperatorAccess().getNOTTerminalRuleCall_2());
		}
		    |
		this_ABS_3=RULE_ABS
		{
			$current.merge(this_ABS_3);
		}
		{
			newLeafNode(this_ABS_3, grammarAccess.getUnaryOperatorAccess().getABSTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulelinkExpression
entryRulelinkExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkExpressionRule()); }
	iv_rulelinkExpression=rulelinkExpression
	{ $current=$iv_rulelinkExpression.current; }
	EOF;

// Rule linkExpression
rulelinkExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkExpressionAccess().getN1NavigateExpressionParserRuleCall_0_0());
				}
				lv_n1_0_0=rulenavigateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
					}
					set(
						$current,
						"n1",
						lv_n1_0_0,
						"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getLinkExpressionAccess().getLinkTypeParserRuleCall_1_0());
			}
			rulelinkType
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getN2NavigateExpressionParserRuleCall_1_1_0());
					}
					lv_n2_2_0=rulenavigateExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"n2",
							lv_n2_2_0,
							"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getRRelationshipSpecParserRuleCall_1_2_0());
					}
					lv_r_3_0=rulerelationshipSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"r",
							lv_r_3_0,
							"org.xtuml.bp.ui.xtext.MASL.relationshipSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getN3NavigateExpressionParserRuleCall_1_3_0());
					}
					lv_n3_4_0=rulenavigateExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"n3",
							lv_n3_4_0,
							"org.xtuml.bp.ui.xtext.MASL.navigateExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRulenavigateExpression
entryRulenavigateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigateExpressionRule()); }
	iv_rulenavigateExpression=rulenavigateExpression
	{ $current=$iv_rulenavigateExpression.current; }
	EOF;

// Rule navigateExpression
rulenavigateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_0_0());
				}
				lv_e_0_0=ruleextendedExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigateExpressionRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"org.xtuml.bp.ui.xtext.MASL.extendedExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_NAVIGATE_1=RULE_NAVIGATE
				{
					newLeafNode(this_NAVIGATE_1, grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_0_1_0());
						}
						lv_r_2_0=rulerelationshipSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigateExpressionRule());
							}
							add(
								$current,
								"r",
								lv_r_2_0,
								"org.xtuml.bp.ui.xtext.MASL.relationshipSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigateExpressionAccess().getWWhereClauseParserRuleCall_1_0_2_0());
						}
						lv_w_3_0=rulewhereClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigateExpressionRule());
							}
							add(
								$current,
								"w",
								lv_w_3_0,
								"org.xtuml.bp.ui.xtext.MASL.whereClause");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				this_WITH_4=RULE_WITH
				{
					newLeafNode(this_WITH_4, grammarAccess.getNavigateExpressionAccess().getWITHTerminalRuleCall_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_1_1_1_0());
						}
						lv_e_5_0=ruleextendedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigateExpressionRule());
							}
							add(
								$current,
								"e",
								lv_e_5_0,
								"org.xtuml.bp.ui.xtext.MASL.extendedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_NAVIGATE_6=RULE_NAVIGATE
				{
					newLeafNode(this_NAVIGATE_6, grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_1_3_0());
						}
						lv_r_7_0=rulerelationshipSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigateExpressionRule());
							}
							add(
								$current,
								"r",
								lv_r_7_0,
								"org.xtuml.bp.ui.xtext.MASL.relationshipSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				this_ORDERED_BY_8=RULE_ORDERED_BY
				{
					newLeafNode(this_ORDERED_BY_8, grammarAccess.getNavigateExpressionAccess().getORDERED_BYTerminalRuleCall_1_2_0());
				}
				{
					newCompositeNode(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_2_1());
				}
				rulesortOrder
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				this_REVERSE_ORDERED_BY_10=RULE_REVERSE_ORDERED_BY
				{
					newLeafNode(this_REVERSE_ORDERED_BY_10, grammarAccess.getNavigateExpressionAccess().getREVERSE_ORDERED_BYTerminalRuleCall_1_3_0());
				}
				{
					newCompositeNode(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_3_1());
				}
				rulesortOrder
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleextendedExpression
entryRuleextendedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendedExpressionRule()); }
	iv_ruleextendedExpression=ruleextendedExpression
	{ $current=$iv_ruleextendedExpression.current; }
	EOF;

// Rule extendedExpression
ruleextendedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExtendedExpressionAccess().getPostfixExpressionParserRuleCall_0());
		}
		this_postfixExpression_0=rulepostfixExpression
		{
			$current = $this_postfixExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExtendedExpressionAccess().getCreateExpressionParserRuleCall_1());
		}
		this_createExpression_1=rulecreateExpression
		{
			$current = $this_createExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExtendedExpressionAccess().getFindExpressionParserRuleCall_2());
		}
		this_findExpression_2=rulefindExpression
		{
			$current = $this_findExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulesortOrder
entryRulesortOrder returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSortOrderRule()); }
	iv_rulesortOrder=rulesortOrder
	{ $current=$iv_rulesortOrder.current.getText(); }
	EOF;

// Rule sortOrder
rulesortOrder returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LPAREN_0=RULE_LPAREN
		{
			$current.merge(this_LPAREN_0);
		}
		{
			newLeafNode(this_LPAREN_0, grammarAccess.getSortOrderAccess().getLPARENTerminalRuleCall_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_0());
			}
			this_sortOrderComponent_1=rulesortOrderComponent
			{
				$current.merge(this_sortOrderComponent_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				this_COMMA_2=RULE_COMMA
				{
					$current.merge(this_COMMA_2);
				}
				{
					newLeafNode(this_COMMA_2, grammarAccess.getSortOrderAccess().getCOMMATerminalRuleCall_1_1_0());
				}
				{
					newCompositeNode(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_1_1());
				}
				this_sortOrderComponent_3=rulesortOrderComponent
				{
					$current.merge(this_sortOrderComponent_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
		)?
		this_RPAREN_4=RULE_RPAREN
		{
			$current.merge(this_RPAREN_4);
		}
		{
			newLeafNode(this_RPAREN_4, grammarAccess.getSortOrderAccess().getRPARENTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulesortOrderComponent
entryRulesortOrderComponent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSortOrderComponentRule()); }
	iv_rulesortOrderComponent=rulesortOrderComponent
	{ $current=$iv_rulesortOrderComponent.current.getText(); }
	EOF;

// Rule sortOrderComponent
rulesortOrderComponent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_REVERSE_0=RULE_REVERSE
			{
				$current.merge(this_REVERSE_0);
			}
			{
				newLeafNode(this_REVERSE_0, grammarAccess.getSortOrderComponentAccess().getREVERSETerminalRuleCall_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getSortOrderComponentAccess().getIdentifierParserRuleCall_1());
		}
		this_identifier_1=ruleidentifier
		{
			$current.merge(this_identifier_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulecreateExpression
entryRulecreateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateExpressionRule()); }
	iv_rulecreateExpression=rulecreateExpression
	{ $current=$iv_rulecreateExpression.current; }
	EOF;

// Rule createExpression
rulecreateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CREATE_0=RULE_CREATE
		{
			newLeafNode(this_CREATE_0, grammarAccess.getCreateExpressionAccess().getCREATETerminalRuleCall_0());
		}
		(
			this_UNIQUE_1=RULE_UNIQUE
			{
				newLeafNode(this_UNIQUE_1, grammarAccess.getCreateExpressionAccess().getUNIQUETerminalRuleCall_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getCreateExpressionAccess().getObjectNameParserRuleCall_2());
		}
		ruleobjectName
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getCreateExpressionAccess().getCreateArgumentListParserRuleCall_3());
		}
		this_createArgumentList_3=rulecreateArgumentList
		{
			$current = $this_createArgumentList_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulecreateArgumentList
entryRulecreateArgumentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateArgumentListRule()); }
	iv_rulecreateArgumentList=rulecreateArgumentList
	{ $current=$iv_rulecreateArgumentList.current; }
	EOF;

// Rule createArgumentList
rulecreateArgumentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreateArgumentListAccess().getCreateArgumentListAction_0(),
					$current);
			}
		)
		this_LPAREN_1=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_1, grammarAccess.getCreateArgumentListAccess().getLPARENTerminalRuleCall_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_0_0());
					}
					lv_c_2_0=rulecreateArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateArgumentListRule());
						}
						add(
							$current,
							"c",
							lv_c_2_0,
							"org.xtuml.bp.ui.xtext.MASL.createArgument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_COMMA_3=RULE_COMMA
				{
					newLeafNode(this_COMMA_3, grammarAccess.getCreateArgumentListAccess().getCOMMATerminalRuleCall_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_1_1_0());
						}
						lv_c_4_0=rulecreateArgument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCreateArgumentListRule());
							}
							add(
								$current,
								"c",
								lv_c_4_0,
								"org.xtuml.bp.ui.xtext.MASL.createArgument");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		this_RPAREN_5=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_5, grammarAccess.getCreateArgumentListAccess().getRPARENTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulecreateArgument
entryRulecreateArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateArgumentRule()); }
	iv_rulecreateArgument=rulecreateArgument
	{ $current=$iv_rulecreateArgument.current; }
	EOF;

// Rule createArgument
rulecreateArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateArgumentAccess().getAAttributeNameParserRuleCall_0_0_0());
					}
					lv_a_0_0=ruleattributeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateArgumentRule());
						}
						set(
							$current,
							"a",
							lv_a_0_0,
							"org.xtuml.bp.ui.xtext.MASL.attributeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_GOES_TO_1=RULE_GOES_TO
			{
				newLeafNode(this_GOES_TO_1, grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateArgumentAccess().getEExpressionParserRuleCall_0_2_0());
					}
					lv_e_2_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateArgumentRule());
						}
						set(
							$current,
							"e",
							lv_e_2_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			this_CURRENT_STATE_3=RULE_CURRENT_STATE
			{
				newLeafNode(this_CURRENT_STATE_3, grammarAccess.getCreateArgumentAccess().getCURRENT_STATETerminalRuleCall_1_0());
			}
			this_GOES_TO_4=RULE_GOES_TO
			{
				newLeafNode(this_GOES_TO_4, grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateArgumentAccess().getSStateNameParserRuleCall_1_2_0());
					}
					lv_s_5_0=rulestateName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateArgumentRule());
						}
						set(
							$current,
							"s",
							lv_s_5_0,
							"org.xtuml.bp.ui.xtext.MASL.stateName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindExpression
entryRulefindExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindExpressionRule()); }
	iv_rulefindExpression=rulefindExpression
	{ $current=$iv_rulefindExpression.current; }
	EOF;

// Rule findExpression
rulefindExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFindExpressionAccess().getFindTypeParserRuleCall_0());
		}
		rulefindType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFindExpressionAccess().getPPostfixNoCallExpressionParserRuleCall_1_0());
				}
				lv_p_1_0=rulepostfixNoCallExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindExpressionRule());
					}
					set(
						$current,
						"p",
						lv_p_1_0,
						"org.xtuml.bp.ui.xtext.MASL.postfixNoCallExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFindExpressionAccess().getWWhereClauseParserRuleCall_2_0());
				}
				lv_w_2_0=rulewhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindExpressionRule());
					}
					set(
						$current,
						"w",
						lv_w_2_0,
						"org.xtuml.bp.ui.xtext.MASL.whereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulewhereClause
entryRulewhereClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereClauseRule()); }
	iv_rulewhereClause=rulewhereClause
	{ $current=$iv_rulewhereClause.current; }
	EOF;

// Rule whereClause
rulewhereClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhereClauseAccess().getWhereClauseAction_0(),
					$current);
			}
		)
		this_LPAREN_1=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_1, grammarAccess.getWhereClauseAccess().getLPARENTerminalRuleCall_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getWhereClauseAccess().getFindConditionParserRuleCall_2());
			}
			this_findCondition_2=rulefindCondition
			{
				$current = $this_findCondition_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		this_RPAREN_3=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_3, grammarAccess.getWhereClauseAccess().getRPARENTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulefindType
entryRulefindType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFindTypeRule()); }
	iv_rulefindType=rulefindType
	{ $current=$iv_rulefindType.current.getText(); }
	EOF;

// Rule findType
rulefindType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FIND_0=RULE_FIND
		{
			$current.merge(this_FIND_0);
		}
		{
			newLeafNode(this_FIND_0, grammarAccess.getFindTypeAccess().getFINDTerminalRuleCall_0());
		}
		    |
		this_FIND_ONE_1=RULE_FIND_ONE
		{
			$current.merge(this_FIND_ONE_1);
		}
		{
			newLeafNode(this_FIND_ONE_1, grammarAccess.getFindTypeAccess().getFIND_ONETerminalRuleCall_1());
		}
		    |
		this_FIND_ONLY_2=RULE_FIND_ONLY
		{
			$current.merge(this_FIND_ONLY_2);
		}
		{
			newLeafNode(this_FIND_ONLY_2, grammarAccess.getFindTypeAccess().getFIND_ONLYTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulepostfixExpression
entryRulepostfixExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	iv_rulepostfixExpression=rulepostfixExpression
	{ $current=$iv_rulepostfixExpression.current; }
	EOF;

// Rule postfixExpression
rulepostfixExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0());
				}
				lv_p_0_0=ruleprimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
					}
					set(
						$current,
						"p",
						lv_p_0_0,
						"org.xtuml.bp.ui.xtext.MASL.primaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_LPAREN_1=RULE_LPAREN
				{
					newLeafNode(this_LPAREN_1, grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_0_1_0());
						}
						lv_a_2_0=ruleargumentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
							}
							add(
								$current,
								"a",
								lv_a_2_0,
								"org.xtuml.bp.ui.xtext.MASL.argumentList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RPAREN_3=RULE_RPAREN
				{
					newLeafNode(this_RPAREN_3, grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_0_2());
				}
			)
			    |
			(
				this_DOT_4=RULE_DOT
				{
					newLeafNode(this_DOT_4, grammarAccess.getPostfixExpressionAccess().getDOTTerminalRuleCall_1_1_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_1_1());
				}
				ruleidentifier
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				this_TERMINATOR_SCOPE_6=RULE_TERMINATOR_SCOPE
				{
					newLeafNode(this_TERMINATOR_SCOPE_6, grammarAccess.getPostfixExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_2_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_2_1());
				}
				ruleidentifier
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				this_LBRACKET_8=RULE_LBRACKET
				{
					newLeafNode(this_LBRACKET_8, grammarAccess.getPostfixExpressionAccess().getLBRACKETTerminalRuleCall_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixExpressionAccess().getEExpressionParserRuleCall_1_3_1_0());
						}
						lv_e_9_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
							}
							add(
								$current,
								"e",
								lv_e_9_0,
								"org.xtuml.bp.ui.xtext.MASL.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RBRACKET_10=RULE_RBRACKET
				{
					newLeafNode(this_RBRACKET_10, grammarAccess.getPostfixExpressionAccess().getRBRACKETTerminalRuleCall_1_3_2());
				}
			)
			    |
			(
				(
					this_PRIME_11=RULE_PRIME
					{
						newLeafNode(this_PRIME_11, grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_0_0());
					}
					{
						newCompositeNode(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_0_1());
					}
					rulecharacteristic
					{
						afterParserOrEnumRuleCall();
					}
					this_LPAREN_13=RULE_LPAREN
					{
						newLeafNode(this_LPAREN_13, grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_0_2());
					}
				)
				(
					(RULE_PRIME)=>
					this_PRIME_14=RULE_PRIME
					{
						newLeafNode(this_PRIME_14, grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_2());
				}
				rulecharacteristic
				{
					afterParserOrEnumRuleCall();
				}
				this_LPAREN_16=RULE_LPAREN
				{
					newLeafNode(this_LPAREN_16, grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_4_4_0());
						}
						lv_a_17_0=ruleargumentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
							}
							add(
								$current,
								"a",
								lv_a_17_0,
								"org.xtuml.bp.ui.xtext.MASL.argumentList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RPAREN_18=RULE_RPAREN
				{
					newLeafNode(this_RPAREN_18, grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_4_5());
				}
			)
			    |
			(
				this_PRIME_19=RULE_PRIME
				{
					newLeafNode(this_PRIME_19, grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_5_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_5_1());
				}
				rulecharacteristic
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulepostfixNoCallExpression
entryRulepostfixNoCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixNoCallExpressionRule()); }
	iv_rulepostfixNoCallExpression=rulepostfixNoCallExpression
	{ $current=$iv_rulepostfixNoCallExpression.current; }
	EOF;

// Rule postfixNoCallExpression
rulepostfixNoCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixNoCallExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0());
				}
				lv_p_0_0=ruleprimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixNoCallExpressionRule());
					}
					set(
						$current,
						"p",
						lv_p_0_0,
						"org.xtuml.bp.ui.xtext.MASL.primaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_DOT_1=RULE_DOT
				{
					newLeafNode(this_DOT_1, grammarAccess.getPostfixNoCallExpressionAccess().getDOTTerminalRuleCall_1_0_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_0_1());
				}
				ruleidentifier
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				this_TERMINATOR_SCOPE_3=RULE_TERMINATOR_SCOPE
				{
					newLeafNode(this_TERMINATOR_SCOPE_3, grammarAccess.getPostfixNoCallExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_1_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_1_1());
				}
				ruleidentifier
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				this_LBRACKET_5=RULE_LBRACKET
				{
					newLeafNode(this_LBRACKET_5, grammarAccess.getPostfixNoCallExpressionAccess().getLBRACKETTerminalRuleCall_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixNoCallExpressionAccess().getEExpressionParserRuleCall_1_2_1_0());
						}
						lv_e_6_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixNoCallExpressionRule());
							}
							add(
								$current,
								"e",
								lv_e_6_0,
								"org.xtuml.bp.ui.xtext.MASL.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_RBRACKET_7=RULE_RBRACKET
				{
					newLeafNode(this_RBRACKET_7, grammarAccess.getPostfixNoCallExpressionAccess().getRBRACKETTerminalRuleCall_1_2_2());
				}
			)
			    |
			(
				this_PRIME_8=RULE_PRIME
				{
					newLeafNode(this_PRIME_8, grammarAccess.getPostfixNoCallExpressionAccess().getPRIMETerminalRuleCall_1_3_0());
				}
				{
					newCompositeNode(grammarAccess.getPostfixNoCallExpressionAccess().getCharacteristicParserRuleCall_1_3_1());
				}
				rulecharacteristic
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleprimaryExpression
entryRuleprimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_ruleprimaryExpression=ruleprimaryExpression
	{ $current=$iv_ruleprimaryExpression.current; }
	EOF;

// Rule primaryExpression
ruleprimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0_1());
			}
			ruleliteral
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenthesisedExpressionParserRuleCall_1());
		}
		this_parenthesisedExpression_2=ruleparenthesisedExpression
		{
			$current = $this_parenthesisedExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameExpressionParserRuleCall_2_1());
			}
			rulenameExpression
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeNameExpressionParserRuleCall_3());
		}
		this_typeNameExpression_5=ruletypeNameExpression
		{
			$current = $this_typeNameExpression_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuletypeNameExpression
entryRuletypeNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameExpressionRule()); }
	iv_ruletypeNameExpression=ruletypeNameExpression
	{ $current=$iv_ruletypeNameExpression.current; }
	EOF;

// Rule typeNameExpression
ruletypeNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeNameExpressionAccess().getTypeNameExpressionAction_0_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTypeNameExpressionAccess().getInstanceTypeRefParserRuleCall_0_1());
			}
			ruleinstanceTypeRef
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getTypeNameExpressionAccess().getCollectionTypeRefParserRuleCall_1());
		}
		this_collectionTypeRef_2=rulecollectionTypeRef
		{
			$current = $this_collectionTypeRef_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulenameExpression
entryRulenameExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameExpressionRule()); }
	iv_rulenameExpression=rulenameExpression
	{ $current=$iv_rulenameExpression.current.getText(); }
	EOF;

// Rule nameExpression
rulenameExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNameExpressionAccess().getDomainNameParserRuleCall_0_0());
			}
			this_domainName_0=ruledomainName
			{
				$current.merge(this_domainName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_SCOPE_1=RULE_SCOPE
			{
				$current.merge(this_SCOPE_1);
			}
			{
				newLeafNode(this_SCOPE_1, grammarAccess.getNameExpressionAccess().getSCOPETerminalRuleCall_0_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getNameExpressionAccess().getIdentifierParserRuleCall_1());
		}
		this_identifier_2=ruleidentifier
		{
			$current.merge(this_identifier_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleparenthesisedExpression
entryRuleparenthesisedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisedExpressionRule()); }
	iv_ruleparenthesisedExpression=ruleparenthesisedExpression
	{ $current=$iv_ruleparenthesisedExpression.current; }
	EOF;

// Rule parenthesisedExpression
ruleparenthesisedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LPAREN_0=RULE_LPAREN
		{
			newLeafNode(this_LPAREN_0, grammarAccess.getParenthesisedExpressionAccess().getLPARENTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesisedExpressionRule());
					}
					add(
						$current,
						"e",
						lv_e_1_0,
						"org.xtuml.bp.ui.xtext.MASL.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_COMMA_2=RULE_COMMA
			{
				newLeafNode(this_COMMA_2, grammarAccess.getParenthesisedExpressionAccess().getCOMMATerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_2_1_0());
					}
					lv_e_3_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParenthesisedExpressionRule());
						}
						add(
							$current,
							"e",
							lv_e_3_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		this_RPAREN_4=RULE_RPAREN
		{
			newLeafNode(this_RPAREN_4, grammarAccess.getParenthesisedExpressionAccess().getRPARENTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleargumentList
entryRuleargumentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	iv_ruleargumentList=ruleargumentList
	{ $current=$iv_ruleargumentList.current; }
	EOF;

// Rule argumentList
ruleargumentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentListAccess().getArgumentListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_0_0());
					}
					lv_e1_1_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentListRule());
						}
						add(
							$current,
							"e1",
							lv_e1_1_0,
							"org.xtuml.bp.ui.xtext.MASL.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_COMMA_2=RULE_COMMA
				{
					newLeafNode(this_COMMA_2, grammarAccess.getArgumentListAccess().getCOMMATerminalRuleCall_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_1_1_0());
						}
						lv_e1_3_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgumentListRule());
							}
							add(
								$current,
								"e1",
								lv_e1_3_0,
								"org.xtuml.bp.ui.xtext.MASL.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleliteral
entryRuleliteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleliteral=ruleliteral
	{ $current=$iv_ruleliteral.current.getText(); }
	EOF;

// Rule literal
ruleliteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INTEGERLITERAL_0=RULE_INTEGERLITERAL
		{
			$current.merge(this_INTEGERLITERAL_0);
		}
		{
			newLeafNode(this_INTEGERLITERAL_0, grammarAccess.getLiteralAccess().getINTEGERLITERALTerminalRuleCall_0());
		}
		    |
		this_REALLITERAL_1=RULE_REALLITERAL
		{
			$current.merge(this_REALLITERAL_1);
		}
		{
			newLeafNode(this_REALLITERAL_1, grammarAccess.getLiteralAccess().getREALLITERALTerminalRuleCall_1());
		}
		    |
		this_STRINGLITERAL_2=RULE_STRINGLITERAL
		{
			$current.merge(this_STRINGLITERAL_2);
		}
		{
			newLeafNode(this_STRINGLITERAL_2, grammarAccess.getLiteralAccess().getSTRINGLITERALTerminalRuleCall_2());
		}
		    |
		this_TIMESTAMPLITERAL_3=RULE_TIMESTAMPLITERAL
		{
			$current.merge(this_TIMESTAMPLITERAL_3);
		}
		{
			newLeafNode(this_TIMESTAMPLITERAL_3, grammarAccess.getLiteralAccess().getTIMESTAMPLITERALTerminalRuleCall_3());
		}
		    |
		this_DURATIONLITERAL_4=RULE_DURATIONLITERAL
		{
			$current.merge(this_DURATIONLITERAL_4);
		}
		{
			newLeafNode(this_DURATIONLITERAL_4, grammarAccess.getLiteralAccess().getDURATIONLITERALTerminalRuleCall_4());
		}
		    |
		this_TRUE_5=RULE_TRUE
		{
			$current.merge(this_TRUE_5);
		}
		{
			newLeafNode(this_TRUE_5, grammarAccess.getLiteralAccess().getTRUETerminalRuleCall_5());
		}
		    |
		this_FALSE_6=RULE_FALSE
		{
			$current.merge(this_FALSE_6);
		}
		{
			newLeafNode(this_FALSE_6, grammarAccess.getLiteralAccess().getFALSETerminalRuleCall_6());
		}
		    |
		this_NULL_7=RULE_NULL
		{
			$current.merge(this_NULL_7);
		}
		{
			newLeafNode(this_NULL_7, grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_7());
		}
		    |
		this_FLUSH_8=RULE_FLUSH
		{
			$current.merge(this_FLUSH_8);
		}
		{
			newLeafNode(this_FLUSH_8, grammarAccess.getLiteralAccess().getFLUSHTerminalRuleCall_8());
		}
		    |
		this_ENDL_9=RULE_ENDL
		{
			$current.merge(this_ENDL_9);
		}
		{
			newLeafNode(this_ENDL_9, grammarAccess.getLiteralAccess().getENDLTerminalRuleCall_9());
		}
		    |
		this_THIS_10=RULE_THIS
		{
			$current.merge(this_THIS_10);
		}
		{
			newLeafNode(this_THIS_10, grammarAccess.getLiteralAccess().getTHISTerminalRuleCall_10());
		}
		    |
		this_CONSOLE_11=RULE_CONSOLE
		{
			$current.merge(this_CONSOLE_11);
		}
		{
			newLeafNode(this_CONSOLE_11, grammarAccess.getLiteralAccess().getCONSOLETerminalRuleCall_11());
		}
		    |
		this_LINE_NO_12=RULE_LINE_NO
		{
			$current.merge(this_LINE_NO_12);
		}
		{
			newLeafNode(this_LINE_NO_12, grammarAccess.getLiteralAccess().getLINE_NOTerminalRuleCall_12());
		}
		    |
		this_FILE_NAME_13=RULE_FILE_NAME
		{
			$current.merge(this_FILE_NAME_13);
		}
		{
			newLeafNode(this_FILE_NAME_13, grammarAccess.getLiteralAccess().getFILE_NAMETerminalRuleCall_13());
		}
	)
;

// Entry rule entryRuleidentifier
entryRuleidentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleidentifier=ruleidentifier
	{ $current=$iv_ruleidentifier.current.getText(); }
	EOF;

// Rule identifier
ruleidentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENT_0=RULE_IDENT
	{
		$current.merge(this_IDENT_0);
	}
	{
		newLeafNode(this_IDENT_0, grammarAccess.getIdentifierAccess().getIDENTTerminalRuleCall());
	}
;

// Entry rule entryRulecharacteristic
entryRulecharacteristic returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCharacteristicRule()); }
	iv_rulecharacteristic=rulecharacteristic
	{ $current=$iv_rulecharacteristic.current.getText(); }
	EOF;

// Rule characteristic
rulecharacteristic returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENT_0=RULE_IDENT
		{
			$current.merge(this_IDENT_0);
		}
		{
			newLeafNode(this_IDENT_0, grammarAccess.getCharacteristicAccess().getIDENTTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getCharacteristicAccess().getCharacteristicRWParserRuleCall_1());
		}
		this_characteristicRW_1=rulecharacteristicRW
		{
			$current.merge(this_characteristicRW_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulecharacteristicRW
entryRulecharacteristicRW returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCharacteristicRWRule()); }
	iv_rulecharacteristicRW=rulecharacteristicRW
	{ $current=$iv_rulecharacteristicRW.current.getText(); }
	EOF;

// Rule characteristicRW
rulecharacteristicRW returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RANGE_0=RULE_RANGE
		{
			$current.merge(this_RANGE_0);
		}
		{
			newLeafNode(this_RANGE_0, grammarAccess.getCharacteristicRWAccess().getRANGETerminalRuleCall_0());
		}
		    |
		this_DELTA_1=RULE_DELTA
		{
			$current.merge(this_DELTA_1);
		}
		{
			newLeafNode(this_DELTA_1, grammarAccess.getCharacteristicRWAccess().getDELTATerminalRuleCall_1());
		}
	)
;

RULE_AND : 'and';

RULE_OR : 'or';

RULE_XOR : 'xor';

RULE_ABS : 'abs';

RULE_NOT : 'not';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_CONCATENATE : '&';

RULE_UNION : 'union';

RULE_NOT_IN : 'not_in';

RULE_DIVIDE : '/';

RULE_TIMES : '*';

RULE_INTERSECTION : 'intersection';

RULE_MOD : 'mod';

RULE_POWER : '**';

RULE_REM : 'rem';

RULE_DISUNION : 'disunion';

RULE_EQUAL : '=';

RULE_NOT_EQUAL : '/=';

RULE_GT : '>';

RULE_GTE : '>=';

RULE_LT : '<';

RULE_LTE : '<=';

RULE_STREAM_LINE_IN : '>>>';

RULE_STREAM_LINE_OUT : '<<<';

RULE_STREAM_IN : '>>';

RULE_STREAM_OUT : '<<';

RULE_ASSIGN : ':=';

RULE_COLON : ':';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_LTGT : '<>';

RULE_PRIME : '\'';

RULE_RANGE_DOTS : '..';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_SCOPE : '::';

RULE_SEMI : ';';

RULE_GOES_TO : '=>';

RULE_NAVIGATE : '->';

RULE_TERMINATOR_SCOPE : '~>';

RULE_CASE_OR : '|';

RULE_ARRAY : 'array';

RULE_ANONYMOUS : 'anonymous';

RULE_ASSIGNER : 'assigner';

RULE_AT : 'at';

RULE_BAG : 'bag';

RULE_BEGIN : 'begin';

RULE_CANNOT_HAPPEN : ('Cannot_Happen'|'cannot_happen');

RULE_CANCEL : 'cancel';

RULE_CASE : 'case';

RULE_CONDITIONALLY : 'conditionally';

RULE_CONSOLE : 'console';

RULE_CREATE : 'create';

RULE_CREATION : 'creation';

RULE_CURRENT_STATE : 'Current_State';

RULE_DECLARE : 'declare';

RULE_DEFERRED : 'deferred';

RULE_DELAY : 'delay';

RULE_DELETE : 'delete';

RULE_DELTA : 'delta';

RULE_DICTIONARY : 'dictionary';

RULE_DIGITS : 'digits';

RULE_DOMAIN : 'domain';

RULE_ELSE : 'else';

RULE_ELSIF : 'elsif';

RULE_END : 'end';

RULE_ENUM : 'enum';

RULE_ERASE : 'erase';

RULE_EVENT : 'event';

RULE_EXCEPTION : 'exception';

RULE_EXIT : 'exit';

RULE_FIND : ('find'|'find_all');

RULE_FIND_ONE : 'find_one';

RULE_FIND_ONLY : 'find_only';

RULE_FOR : 'for';

RULE_FUNCTION : 'function';

RULE_GENERATE : 'generate';

RULE_IDENTIF : 'identifier';

RULE_IF : 'if';

RULE_IGNORE : 'Ignore';

RULE_IN : 'in';

RULE_INSTANCE : 'instance';

RULE_IS_A : 'is_a';

RULE_IS : 'is';

RULE_LINK : 'link';

RULE_LOOP : 'loop';

RULE_MANY : 'many';

RULE_NON_EXISTENT : ('Non_Existent'|'Non_Existant'|'non_existent');

RULE_OBJECT : 'object';

RULE_OF : 'of';

RULE_ONE : 'one';

RULE_ORDERED_BY : 'ordered_by';

RULE_OTHERS : 'others';

RULE_OUT : 'out';

RULE_PRAGMA : 'pragma';

RULE_PREFERRED : 'preferred';

RULE_PRIVATE : 'private';

RULE_PROJECT : 'project';

RULE_PUBLIC : 'public';

RULE_RAISE : 'raise';

RULE_RANGE : 'range';

RULE_READONLY : 'readonly';

RULE_REFERENTIAL : 'referential';

RULE_RELATIONSHIP : 'relationship';

RULE_RETURN : 'return';

RULE_REVERSE : 'reverse';

RULE_REVERSE_ORDERED_BY : 'reverse_ordered_by';

RULE_SCHEDULE : 'schedule';

RULE_SEQUENCE : 'sequence';

RULE_SERVICE : 'service';

RULE_SET : 'set';

RULE_START : 'start';

RULE_STATE : 'state';

RULE_STRUCTURE : 'structure';

RULE_TERMINAL : 'terminal';

RULE_TERMINATOR : 'terminator';

RULE_THEN : 'then';

RULE_THIS : 'this';

RULE_TO : 'to';

RULE_TRANSITION : 'transition';

RULE_TYPE : ('type'|'subtype');

RULE_UNCONDITIONALLY : 'unconditionally';

RULE_UNIQUE : 'unique';

RULE_UNLINK : 'unlink';

RULE_USING : 'using';

RULE_WHEN : 'when';

RULE_WHILE : 'while';

RULE_WITH : 'with';

RULE_NULL : 'null';

RULE_FLUSH : 'flush';

RULE_ENDL : 'endl';

RULE_TRUE : 'true';

RULE_FALSE : 'false';

RULE_LINE_NO : '#LINE#';

RULE_FILE_NAME : '#FILE#';

RULE_INTEGERLITERAL : (RULE_DIGIT RULE_DIGIT? '#' RULE_BASEDDIGIT+|RULE_DIGIT+);

RULE_REALLITERAL : (RULE_DIGIT+ ('.' RULE_DIGIT+)? RULE_UNBASEDEXPONENT?|'.' RULE_DIGIT+ RULE_UNBASEDEXPONENT?|RULE_DIGIT RULE_DIGIT? '#' (RULE_BASEDDIGIT+ ('.' RULE_BASEDDIGIT+ RULE_BASEDEXPONENT?|RULE_BASEDEXPONENT|'#'?)|'.' RULE_BASEDDIGIT+ RULE_BASEDEXPONENT?));

fragment RULE_UNBASEDEXPONENT : ('e'|'E') ('+'|'-')? RULE_DIGIT+;

fragment RULE_BASEDEXPONENT : '#' ('+'|'-')? RULE_DIGIT+;

fragment RULE_DIGIT : '0'..'9';

fragment RULE_BASEDDIGIT : ('0'..'9'|'a'..'z'|'A'..'Z');

fragment RULE_LETTER : ('A'..'Z'|'a'..'z');

RULE_DURATIONLITERAL : '@P' ~(('@'|' '|'\t'|'\f'|'\n'|'\r'))* '@';

RULE_TIMESTAMPLITERAL : '@' ~(('@'|' '|'\t'|'\f'|'\n'|'\r'))* '@';

RULE_STRINGLITERAL : '"' (RULE_ESCAPESEQUENCE|~(('\\'|'"')))* '"';

fragment RULE_ESCAPESEQUENCE : ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|RULE_UNICODEESCAPE|RULE_OCTALESCAPE);

fragment RULE_OCTALESCAPE : ('\\' '0'..'3' '0'..'7' '0'..'7'|'\\' '0'..'7' '0'..'7'|'\\' '0'..'7');

fragment RULE_UNICODEESCAPE : '\\' 'u' RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT;

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_RELATIONSHIPNAME : 'R' '1'..'9' RULE_DIGIT*;

RULE_IDENT : (RULE_LETTER|'_') (RULE_LETTER|RULE_DIGIT|'_')*;

RULE_COMMENT : '//' ~(('\n'|'\r'))* '\r'? '\n';

RULE_WHITESPACE : (' '|'\t'|'\f'|'\n'|'\r')+;
