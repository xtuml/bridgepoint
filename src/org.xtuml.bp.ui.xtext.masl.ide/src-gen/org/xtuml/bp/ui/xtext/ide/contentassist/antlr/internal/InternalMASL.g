/*
 * generated by Xtext 2.9.1
 */
grammar InternalMASL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtuml.bp.ui.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtuml.bp.ui.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtuml.bp.ui.xtext.services.MASLGrammarAccess;

}
@parser::members {
	private MASLGrammarAccess grammarAccess;

	public void setGrammarAccess(MASLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuledefinition
entryRuledefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruledefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule definition
ruledefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledomainName
entryRuledomainName
:
{ before(grammarAccess.getDomainNameRule()); }
	 ruledomainName
{ after(grammarAccess.getDomainNameRule()); } 
	 EOF 
;

// Rule domainName
ruledomainName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getDomainNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexceptionName
entryRuleexceptionName
:
{ before(grammarAccess.getExceptionNameRule()); }
	 ruleexceptionName
{ after(grammarAccess.getExceptionNameRule()); } 
	 EOF 
;

// Rule exceptionName
ruleexceptionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getExceptionNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeReference
entryRuletypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruletypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule typeReference
ruletypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
		(rule__TypeReference__Alternatives)
		{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeReferenceWithCA
entryRuletypeReferenceWithCA
:
{ before(grammarAccess.getTypeReferenceWithCARule()); }
	 ruletypeReferenceWithCA
{ after(grammarAccess.getTypeReferenceWithCARule()); } 
	 EOF 
;

// Rule typeReferenceWithCA
ruletypeReferenceWithCA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceWithCAAccess().getAlternatives()); }
		(rule__TypeReferenceWithCA__Alternatives)
		{ after(grammarAccess.getTypeReferenceWithCAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeprecatedType
entryRuledeprecatedType
:
{ before(grammarAccess.getDeprecatedTypeRule()); }
	 ruledeprecatedType
{ after(grammarAccess.getDeprecatedTypeRule()); } 
	 EOF 
;

// Rule deprecatedType
ruledeprecatedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeprecatedTypeAccess().getAlternatives()); }
		(rule__DeprecatedType__Alternatives)
		{ after(grammarAccess.getDeprecatedTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulequalifiedObjectName
entryRulequalifiedObjectName
:
{ before(grammarAccess.getQualifiedObjectNameRule()); }
	 rulequalifiedObjectName
{ after(grammarAccess.getQualifiedObjectNameRule()); } 
	 EOF 
;

// Rule qualifiedObjectName
rulequalifiedObjectName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedObjectNameAccess().getGroup()); }
		(rule__QualifiedObjectName__Group__0)
		{ after(grammarAccess.getQualifiedObjectNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinstanceTypeRef
entryRuleinstanceTypeRef
:
{ before(grammarAccess.getInstanceTypeRefRule()); }
	 ruleinstanceTypeRef
{ after(grammarAccess.getInstanceTypeRefRule()); } 
	 EOF 
;

// Rule instanceTypeRef
ruleinstanceTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceTypeRefAccess().getGroup()); }
		(rule__InstanceTypeRef__Group__0)
		{ after(grammarAccess.getInstanceTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenamedTypeRef
entryRulenamedTypeRef
:
{ before(grammarAccess.getNamedTypeRefRule()); }
	 rulenamedTypeRef
{ after(grammarAccess.getNamedTypeRefRule()); } 
	 EOF 
;

// Rule namedTypeRef
rulenamedTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedTypeRefAccess().getGroup()); }
		(rule__NamedTypeRef__Group__0)
		{ after(grammarAccess.getNamedTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleuserDefinedTypeRef
entryRuleuserDefinedTypeRef
:
{ before(grammarAccess.getUserDefinedTypeRefRule()); }
	 ruleuserDefinedTypeRef
{ after(grammarAccess.getUserDefinedTypeRefRule()); } 
	 EOF 
;

// Rule userDefinedTypeRef
ruleuserDefinedTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserDefinedTypeRefAccess().getGroup()); }
		(rule__UserDefinedTypeRef__Group__0)
		{ after(grammarAccess.getUserDefinedTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstrainedArrayTypeRef
entryRuleconstrainedArrayTypeRef
:
{ before(grammarAccess.getConstrainedArrayTypeRefRule()); }
	 ruleconstrainedArrayTypeRef
{ after(grammarAccess.getConstrainedArrayTypeRefRule()); } 
	 EOF 
;

// Rule constrainedArrayTypeRef
ruleconstrainedArrayTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainedArrayTypeRefAccess().getGroup()); }
		(rule__ConstrainedArrayTypeRef__Group__0)
		{ after(grammarAccess.getConstrainedArrayTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeName
entryRuletypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruletypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule typeName
ruletypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getTypeNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearrayBounds
entryRulearrayBounds
:
{ before(grammarAccess.getArrayBoundsRule()); }
	 rulearrayBounds
{ after(grammarAccess.getArrayBoundsRule()); } 
	 EOF 
;

// Rule arrayBounds
rulearrayBounds 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayBoundsAccess().getGroup()); }
		(rule__ArrayBounds__Group__0)
		{ after(grammarAccess.getArrayBoundsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecollectionTypeRef
entryRulecollectionTypeRef
:
{ before(grammarAccess.getCollectionTypeRefRule()); }
	 rulecollectionTypeRef
{ after(grammarAccess.getCollectionTypeRefRule()); } 
	 EOF 
;

// Rule collectionTypeRef
rulecollectionTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getAlternatives()); }
		(rule__CollectionTypeRef__Alternatives)
		{ after(grammarAccess.getCollectionTypeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledictKeyType
entryRuledictKeyType
:
{ before(grammarAccess.getDictKeyTypeRule()); }
	 ruledictKeyType
{ after(grammarAccess.getDictKeyTypeRule()); } 
	 EOF 
;

// Rule dictKeyType
ruledictKeyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDictKeyTypeAccess().getAlternatives()); }
		(rule__DictKeyType__Alternatives)
		{ after(grammarAccess.getDictKeyTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledictValueType
entryRuledictValueType
:
{ before(grammarAccess.getDictValueTypeRule()); }
	 ruledictValueType
{ after(grammarAccess.getDictValueTypeRule()); } 
	 EOF 
;

// Rule dictValueType
ruledictValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDictValueTypeAccess().getTAssignment()); }
		(rule__DictValueType__TAssignment)
		{ after(grammarAccess.getDictValueTypeAccess().getTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterminatorName
entryRuleterminatorName
:
{ before(grammarAccess.getTerminatorNameRule()); }
	 ruleterminatorName
{ after(grammarAccess.getTerminatorNameRule()); } 
	 EOF 
;

// Rule terminatorName
ruleterminatorName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getTerminatorNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleobjectName
entryRuleobjectName
:
{ before(grammarAccess.getObjectNameRule()); }
	 ruleobjectName
{ after(grammarAccess.getObjectNameRule()); } 
	 EOF 
;

// Rule objectName
ruleobjectName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getObjectNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleattributeName
entryRuleattributeName
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleattributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule attributeName
ruleattributeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getAttributeNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelationshipSpec
entryRulerelationshipSpec
:
{ before(grammarAccess.getRelationshipSpecRule()); }
	 rulerelationshipSpec
{ after(grammarAccess.getRelationshipSpecRule()); } 
	 EOF 
;

// Rule relationshipSpec
rulerelationshipSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getGroup()); }
		(rule__RelationshipSpec__Group__0)
		{ after(grammarAccess.getRelationshipSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleserviceType
entryRuleserviceType
:
{ before(grammarAccess.getServiceTypeRule()); }
	 ruleserviceType
{ after(grammarAccess.getServiceTypeRule()); } 
	 EOF 
;

// Rule serviceType
ruleserviceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceTypeAccess().getGroup()); }
		(rule__ServiceType__Group__0)?
		{ after(grammarAccess.getServiceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleeventName
entryRuleeventName
:
{ before(grammarAccess.getEventNameRule()); }
	 ruleeventName
{ after(grammarAccess.getEventNameRule()); } 
	 EOF 
;

// Rule eventName
ruleeventName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getEventNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestateName
entryRulestateName
:
{ before(grammarAccess.getStateNameRule()); }
	 rulestateName
{ after(grammarAccess.getStateNameRule()); } 
	 EOF 
;

// Rule stateName
rulestateName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getStateNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestateType
entryRulestateType
:
{ before(grammarAccess.getStateTypeRule()); }
	 rulestateType
{ after(grammarAccess.getStateTypeRule()); } 
	 EOF 
;

// Rule stateType
rulestateType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateTypeAccess().getGroup()); }
		(rule__StateType__Group__0)
		{ after(grammarAccess.getStateTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignerStart
entryRuleassignerStart
:
{ before(grammarAccess.getAssignerStartRule()); }
	 ruleassignerStart
{ after(grammarAccess.getAssignerStartRule()); } 
	 EOF 
;

// Rule assignerStart
ruleassignerStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignerStartAccess().getGroup()); }
		(rule__AssignerStart__Group__0)
		{ after(grammarAccess.getAssignerStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterList
entryRuleparameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleparameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule parameterList
ruleparameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterDefinition
entryRuleparameterDefinition
:
{ before(grammarAccess.getParameterDefinitionRule()); }
	 ruleparameterDefinition
{ after(grammarAccess.getParameterDefinitionRule()); } 
	 EOF 
;

// Rule parameterDefinition
ruleparameterDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDefinitionAccess().getGroup()); }
		(rule__ParameterDefinition__Group__0)
		{ after(grammarAccess.getParameterDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleserviceVisibility
entryRuleserviceVisibility
:
{ before(grammarAccess.getServiceVisibilityRule()); }
	 ruleserviceVisibility
{ after(grammarAccess.getServiceVisibilityRule()); } 
	 EOF 
;

// Rule serviceVisibility
ruleserviceVisibility 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceVisibilityAccess().getGroup()); }
		(rule__ServiceVisibility__Group__0)
		{ after(grammarAccess.getServiceVisibilityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterMode
entryRuleparameterMode
:
{ before(grammarAccess.getParameterModeRule()); }
	 ruleparameterMode
{ after(grammarAccess.getParameterModeRule()); } 
	 EOF 
;

// Rule parameterMode
ruleparameterMode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterModeAccess().getAlternatives()); }
		(rule__ParameterMode__Alternatives)
		{ after(grammarAccess.getParameterModeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleserviceName
entryRuleserviceName
:
{ before(grammarAccess.getServiceNameRule()); }
	 ruleserviceName
{ after(grammarAccess.getServiceNameRule()); } 
	 EOF 
;

// Rule serviceName
ruleserviceName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getServiceNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterName
entryRuleparameterName
:
{ before(grammarAccess.getParameterNameRule()); }
	 ruleparameterName
{ after(grammarAccess.getParameterNameRule()); } 
	 EOF 
;

// Rule parameterName
ruleparameterName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getParameterNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterType
entryRuleparameterType
:
{ before(grammarAccess.getParameterTypeRule()); }
	 ruleparameterType
{ after(grammarAccess.getParameterTypeRule()); } 
	 EOF 
;

// Rule parameterType
ruleparameterType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterTypeAccess().getTypeReferenceParserRuleCall()); }
		ruletypeReference
		{ after(grammarAccess.getParameterTypeAccess().getTypeReferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereturnType
entryRulereturnType
:
{ before(grammarAccess.getReturnTypeRule()); }
	 rulereturnType
{ after(grammarAccess.getReturnTypeRule()); } 
	 EOF 
;

// Rule returnType
rulereturnType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnTypeAccess().getTypeReferenceParserRuleCall()); }
		ruletypeReference
		{ after(grammarAccess.getReturnTypeAccess().getTypeReferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepragmaList
entryRulepragmaList
:
{ before(grammarAccess.getPragmaListRule()); }
	 rulepragmaList
{ after(grammarAccess.getPragmaListRule()); } 
	 EOF 
;

// Rule pragmaList
rulepragmaList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaListAccess().getGroup()); }
		(rule__PragmaList__Group__0)*
		{ after(grammarAccess.getPragmaListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepragmaDef
entryRulepragmaDef
:
{ before(grammarAccess.getPragmaDefRule()); }
	 rulepragmaDef
{ after(grammarAccess.getPragmaDefRule()); } 
	 EOF 
;

// Rule pragmaDef
rulepragmaDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaDefAccess().getGroup()); }
		(rule__PragmaDef__Group__0)
		{ after(grammarAccess.getPragmaDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepragmaValue
entryRulepragmaValue
:
{ before(grammarAccess.getPragmaValueRule()); }
	 rulepragmaValue
{ after(grammarAccess.getPragmaValueRule()); } 
	 EOF 
;

// Rule pragmaValue
rulepragmaValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaValueAccess().getAlternatives()); }
		(rule__PragmaValue__Alternatives)
		{ after(grammarAccess.getPragmaValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepragmaName
entryRulepragmaName
:
{ before(grammarAccess.getPragmaNameRule()); }
	 rulepragmaName
{ after(grammarAccess.getPragmaNameRule()); } 
	 EOF 
;

// Rule pragmaName
rulepragmaName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getPragmaNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledomainServiceDefinition
entryRuledomainServiceDefinition
:
{ before(grammarAccess.getDomainServiceDefinitionRule()); }
	 ruledomainServiceDefinition
{ after(grammarAccess.getDomainServiceDefinitionRule()); } 
	 EOF 
;

// Rule domainServiceDefinition
ruledomainServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getGroup()); }
		(rule__DomainServiceDefinition__Group__0)
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledomainFunctionDefinition
entryRuledomainFunctionDefinition
:
{ before(grammarAccess.getDomainFunctionDefinitionRule()); }
	 ruledomainFunctionDefinition
{ after(grammarAccess.getDomainFunctionDefinitionRule()); } 
	 EOF 
;

// Rule domainFunctionDefinition
ruledomainFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainFunctionDefinitionAccess().getGroup()); }
		(rule__DomainFunctionDefinition__Group__0)
		{ after(grammarAccess.getDomainFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleobjectServiceDefinition
entryRuleobjectServiceDefinition
:
{ before(grammarAccess.getObjectServiceDefinitionRule()); }
	 ruleobjectServiceDefinition
{ after(grammarAccess.getObjectServiceDefinitionRule()); } 
	 EOF 
;

// Rule objectServiceDefinition
ruleobjectServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getGroup()); }
		(rule__ObjectServiceDefinition__Group__0)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterminatorServiceDefinition
entryRuleterminatorServiceDefinition
:
{ before(grammarAccess.getTerminatorServiceDefinitionRule()); }
	 ruleterminatorServiceDefinition
{ after(grammarAccess.getTerminatorServiceDefinitionRule()); } 
	 EOF 
;

// Rule terminatorServiceDefinition
ruleterminatorServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup()); }
		(rule__TerminatorServiceDefinition__Group__0)
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterminatorFunctionDefinition
entryRuleterminatorFunctionDefinition
:
{ before(grammarAccess.getTerminatorFunctionDefinitionRule()); }
	 ruleterminatorFunctionDefinition
{ after(grammarAccess.getTerminatorFunctionDefinitionRule()); } 
	 EOF 
;

// Rule terminatorFunctionDefinition
ruleterminatorFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getGroup()); }
		(rule__TerminatorFunctionDefinition__Group__0)
		{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleobjectFunctionDefinition
entryRuleobjectFunctionDefinition
:
{ before(grammarAccess.getObjectFunctionDefinitionRule()); }
	 ruleobjectFunctionDefinition
{ after(grammarAccess.getObjectFunctionDefinitionRule()); } 
	 EOF 
;

// Rule objectFunctionDefinition
ruleobjectFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getGroup()); }
		(rule__ObjectFunctionDefinition__Group__0)
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestateDefinition
entryRulestateDefinition
:
{ before(grammarAccess.getStateDefinitionRule()); }
	 rulestateDefinition
{ after(grammarAccess.getStateDefinitionRule()); } 
	 EOF 
;

// Rule stateDefinition
rulestateDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getGroup()); }
		(rule__StateDefinition__Group__0)
		{ after(grammarAccess.getStateDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatementList
entryRulestatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 rulestatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule statementList
rulestatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenullStatement
entryRulenullStatement
:
{ before(grammarAccess.getNullStatementRule()); }
	 rulenullStatement
{ after(grammarAccess.getNullStatementRule()); } 
	 EOF 
;

// Rule nullStatement
rulenullStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullStatementAccess().getNULLTerminalRuleCall()); }
		RULE_NULL
		{ after(grammarAccess.getNullStatementAccess().getNULLTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignStatement
entryRuleassignStatement
:
{ before(grammarAccess.getAssignStatementRule()); }
	 ruleassignStatement
{ after(grammarAccess.getAssignStatementRule()); } 
	 EOF 
;

// Rule assignStatement
ruleassignStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignStatementAccess().getGroup()); }
		(rule__AssignStatement__Group__0)
		{ after(grammarAccess.getAssignStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestreamOperator
entryRulestreamOperator
:
{ before(grammarAccess.getStreamOperatorRule()); }
	 rulestreamOperator
{ after(grammarAccess.getStreamOperatorRule()); } 
	 EOF 
;

// Rule streamOperator
rulestreamOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamOperatorAccess().getAlternatives()); }
		(rule__StreamOperator__Alternatives)
		{ after(grammarAccess.getStreamOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestreamValue
entryRulestreamValue
:
{ before(grammarAccess.getStreamValueRule()); }
	 rulestreamValue
{ after(grammarAccess.getStreamValueRule()); } 
	 EOF 
;

// Rule streamValue
rulestreamValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamValueAccess().getGroup()); }
		(rule__StreamValue__Group__0)
		{ after(grammarAccess.getStreamValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestreamStatement
entryRulestreamStatement
:
{ before(grammarAccess.getStreamStatementRule()); }
	 rulestreamStatement
{ after(grammarAccess.getStreamStatementRule()); } 
	 EOF 
;

// Rule streamStatement
rulestreamStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamStatementAccess().getGroup()); }
		(rule__StreamStatement__Group__0)
		{ after(grammarAccess.getStreamStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecallStatement
entryRulecallStatement
:
{ before(grammarAccess.getCallStatementRule()); }
	 rulecallStatement
{ after(grammarAccess.getCallStatementRule()); } 
	 EOF 
;

// Rule callStatement
rulecallStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup()); }
		(rule__CallStatement__Group__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexitStatement
entryRuleexitStatement
:
{ before(grammarAccess.getExitStatementRule()); }
	 ruleexitStatement
{ after(grammarAccess.getExitStatementRule()); } 
	 EOF 
;

// Rule exitStatement
ruleexitStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitStatementAccess().getGroup()); }
		(rule__ExitStatement__Group__0)
		{ after(grammarAccess.getExitStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereturnStatement
entryRulereturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 rulereturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule returnStatement
rulereturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledelayStatement
entryRuledelayStatement
:
{ before(grammarAccess.getDelayStatementRule()); }
	 ruledelayStatement
{ after(grammarAccess.getDelayStatementRule()); } 
	 EOF 
;

// Rule delayStatement
ruledelayStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelayStatementAccess().getGroup()); }
		(rule__DelayStatement__Group__0)
		{ after(grammarAccess.getDelayStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleraiseStatement
entryRuleraiseStatement
:
{ before(grammarAccess.getRaiseStatementRule()); }
	 ruleraiseStatement
{ after(grammarAccess.getRaiseStatementRule()); } 
	 EOF 
;

// Rule raiseStatement
ruleraiseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaiseStatementAccess().getGroup()); }
		(rule__RaiseStatement__Group__0)
		{ after(grammarAccess.getRaiseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeleteStatement
entryRuledeleteStatement
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruledeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule deleteStatement
ruledeleteStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
		(rule__DeleteStatement__Group__0)
		{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleeraseStatement
entryRuleeraseStatement
:
{ before(grammarAccess.getEraseStatementRule()); }
	 ruleeraseStatement
{ after(grammarAccess.getEraseStatementRule()); } 
	 EOF 
;

// Rule eraseStatement
ruleeraseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEraseStatementAccess().getGroup()); }
		(rule__EraseStatement__Group__0)
		{ after(grammarAccess.getEraseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelinkStatement
entryRulelinkStatement
:
{ before(grammarAccess.getLinkStatementRule()); }
	 rulelinkStatement
{ after(grammarAccess.getLinkStatementRule()); } 
	 EOF 
;

// Rule linkStatement
rulelinkStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkStatementAccess().getGroup()); }
		(rule__LinkStatement__Group__0)
		{ after(grammarAccess.getLinkStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelinkType
entryRulelinkType
:
{ before(grammarAccess.getLinkTypeRule()); }
	 rulelinkType
{ after(grammarAccess.getLinkTypeRule()); } 
	 EOF 
;

// Rule linkType
rulelinkType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkTypeAccess().getAlternatives()); }
		(rule__LinkType__Alternatives)
		{ after(grammarAccess.getLinkTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulescheduleStatement
entryRulescheduleStatement
:
{ before(grammarAccess.getScheduleStatementRule()); }
	 rulescheduleStatement
{ after(grammarAccess.getScheduleStatementRule()); } 
	 EOF 
;

// Rule scheduleStatement
rulescheduleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getGroup()); }
		(rule__ScheduleStatement__Group__0)
		{ after(grammarAccess.getScheduleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecancelTimerStatement
entryRulecancelTimerStatement
:
{ before(grammarAccess.getCancelTimerStatementRule()); }
	 rulecancelTimerStatement
{ after(grammarAccess.getCancelTimerStatementRule()); } 
	 EOF 
;

// Rule cancelTimerStatement
rulecancelTimerStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCancelTimerStatementAccess().getGroup()); }
		(rule__CancelTimerStatement__Group__0)
		{ after(grammarAccess.getCancelTimerStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulescheduleType
entryRulescheduleType
:
{ before(grammarAccess.getScheduleTypeRule()); }
	 rulescheduleType
{ after(grammarAccess.getScheduleTypeRule()); } 
	 EOF 
;

// Rule scheduleType
rulescheduleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScheduleTypeAccess().getAlternatives()); }
		(rule__ScheduleType__Alternatives)
		{ after(grammarAccess.getScheduleTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegenerateStatement
entryRulegenerateStatement
:
{ before(grammarAccess.getGenerateStatementRule()); }
	 rulegenerateStatement
{ after(grammarAccess.getGenerateStatementRule()); } 
	 EOF 
;

// Rule generateStatement
rulegenerateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getGroup()); }
		(rule__GenerateStatement__Group__0)
		{ after(grammarAccess.getGenerateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulequalifiedEventName
entryRulequalifiedEventName
:
{ before(grammarAccess.getQualifiedEventNameRule()); }
	 rulequalifiedEventName
{ after(grammarAccess.getQualifiedEventNameRule()); } 
	 EOF 
;

// Rule qualifiedEventName
rulequalifiedEventName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedEventNameAccess().getGroup()); }
		(rule__QualifiedEventName__Group__0)
		{ after(grammarAccess.getQualifiedEventNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleifStatement
entryRuleifStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleifStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule ifStatement
ruleifStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelsifBlock
entryRuleelsifBlock
:
{ before(grammarAccess.getElsifBlockRule()); }
	 ruleelsifBlock
{ after(grammarAccess.getElsifBlockRule()); } 
	 EOF 
;

// Rule elsifBlock
ruleelsifBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElsifBlockAccess().getGroup()); }
		(rule__ElsifBlock__Group__0)
		{ after(grammarAccess.getElsifBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelseBlock
entryRuleelseBlock
:
{ before(grammarAccess.getElseBlockRule()); }
	 ruleelseBlock
{ after(grammarAccess.getElseBlockRule()); } 
	 EOF 
;

// Rule elseBlock
ruleelseBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseBlockAccess().getGroup()); }
		(rule__ElseBlock__Group__0)
		{ after(grammarAccess.getElseBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulewhileStatement
entryRulewhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 rulewhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule whileStatement
rulewhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecondition
entryRulecondition
:
{ before(grammarAccess.getConditionRule()); }
	 rulecondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule condition
rulecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecaseStatement
entryRulecaseStatement
:
{ before(grammarAccess.getCaseStatementRule()); }
	 rulecaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule caseStatement
rulecaseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
		(rule__CaseStatement__Group__0)
		{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecaseAlternative
entryRulecaseAlternative
:
{ before(grammarAccess.getCaseAlternativeRule()); }
	 rulecaseAlternative
{ after(grammarAccess.getCaseAlternativeRule()); } 
	 EOF 
;

// Rule caseAlternative
rulecaseAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getGroup()); }
		(rule__CaseAlternative__Group__0)
		{ after(grammarAccess.getCaseAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechoiceList
entryRulechoiceList
:
{ before(grammarAccess.getChoiceListRule()); }
	 rulechoiceList
{ after(grammarAccess.getChoiceListRule()); } 
	 EOF 
;

// Rule choiceList
rulechoiceList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChoiceListAccess().getGroup()); }
		(rule__ChoiceList__Group__0)
		{ after(grammarAccess.getChoiceListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecaseOthers
entryRulecaseOthers
:
{ before(grammarAccess.getCaseOthersRule()); }
	 rulecaseOthers
{ after(grammarAccess.getCaseOthersRule()); } 
	 EOF 
;

// Rule caseOthers
rulecaseOthers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseOthersAccess().getGroup()); }
		(rule__CaseOthers__Group__0)
		{ after(grammarAccess.getCaseOthersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleforStatement
entryRuleforStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleforStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule forStatement
ruleforStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleloopVariableSpec
entryRuleloopVariableSpec
:
{ before(grammarAccess.getLoopVariableSpecRule()); }
	 ruleloopVariableSpec
{ after(grammarAccess.getLoopVariableSpecRule()); } 
	 EOF 
;

// Rule loopVariableSpec
ruleloopVariableSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopVariableSpecAccess().getGroup()); }
		(rule__LoopVariableSpec__Group__0)
		{ after(grammarAccess.getLoopVariableSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecodeBlockStatement
entryRulecodeBlockStatement
:
{ before(grammarAccess.getCodeBlockStatementRule()); }
	 rulecodeBlockStatement
{ after(grammarAccess.getCodeBlockStatementRule()); } 
	 EOF 
;

// Rule codeBlockStatement
rulecodeBlockStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getGroup()); }
		(rule__CodeBlockStatement__Group__0)
		{ after(grammarAccess.getCodeBlockStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecodeBlock
entryRulecodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 rulecodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule codeBlock
rulecodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup()); }
		(rule__CodeBlock__Group__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariableDeclaration
entryRulevariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 rulevariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule variableDeclaration
rulevariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexceptionHandler
entryRuleexceptionHandler
:
{ before(grammarAccess.getExceptionHandlerRule()); }
	 ruleexceptionHandler
{ after(grammarAccess.getExceptionHandlerRule()); } 
	 EOF 
;

// Rule exceptionHandler
ruleexceptionHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionHandlerAccess().getGroup()); }
		(rule__ExceptionHandler__Group__0)
		{ after(grammarAccess.getExceptionHandlerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleotherHandler
entryRuleotherHandler
:
{ before(grammarAccess.getOtherHandlerRule()); }
	 ruleotherHandler
{ after(grammarAccess.getOtherHandlerRule()); } 
	 EOF 
;

// Rule otherHandler
ruleotherHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherHandlerAccess().getGroup()); }
		(rule__OtherHandler__Group__0)
		{ after(grammarAccess.getOtherHandlerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulequalifiedExceptionName
entryRulequalifiedExceptionName
:
{ before(grammarAccess.getQualifiedExceptionNameRule()); }
	 rulequalifiedExceptionName
{ after(grammarAccess.getQualifiedExceptionNameRule()); } 
	 EOF 
;

// Rule qualifiedExceptionName
rulequalifiedExceptionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedExceptionNameAccess().getGroup()); }
		(rule__QualifiedExceptionName__Group__0)
		{ after(grammarAccess.getQualifiedExceptionNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariableName
entryRulevariableName
:
{ before(grammarAccess.getVariableNameRule()); }
	 rulevariableName
{ after(grammarAccess.getVariableNameRule()); } 
	 EOF 
;

// Rule variableName
rulevariableName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getVariableNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindCondition
entryRulefindCondition
:
{ before(grammarAccess.getFindConditionRule()); }
	 rulefindCondition
{ after(grammarAccess.getFindConditionRule()); } 
	 EOF 
;

// Rule findCondition
rulefindCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindConditionAccess().getFAssignment()); }
		(rule__FindCondition__FAssignment)
		{ after(grammarAccess.getFindConditionAccess().getFAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindLogicalOr
entryRulefindLogicalOr
:
{ before(grammarAccess.getFindLogicalOrRule()); }
	 rulefindLogicalOr
{ after(grammarAccess.getFindLogicalOrRule()); } 
	 EOF 
;

// Rule findLogicalOr
rulefindLogicalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalOrAccess().getGroup()); }
		(rule__FindLogicalOr__Group__0)
		{ after(grammarAccess.getFindLogicalOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindLogicalXor
entryRulefindLogicalXor
:
{ before(grammarAccess.getFindLogicalXorRule()); }
	 rulefindLogicalXor
{ after(grammarAccess.getFindLogicalXorRule()); } 
	 EOF 
;

// Rule findLogicalXor
rulefindLogicalXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalXorAccess().getGroup()); }
		(rule__FindLogicalXor__Group__0)
		{ after(grammarAccess.getFindLogicalXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindLogicalAnd
entryRulefindLogicalAnd
:
{ before(grammarAccess.getFindLogicalAndRule()); }
	 rulefindLogicalAnd
{ after(grammarAccess.getFindLogicalAndRule()); } 
	 EOF 
;

// Rule findLogicalAnd
rulefindLogicalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalAndAccess().getGroup()); }
		(rule__FindLogicalAnd__Group__0)
		{ after(grammarAccess.getFindLogicalAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindPrimary
entryRulefindPrimary
:
{ before(grammarAccess.getFindPrimaryRule()); }
	 rulefindPrimary
{ after(grammarAccess.getFindPrimaryRule()); } 
	 EOF 
;

// Rule findPrimary
rulefindPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindPrimaryAccess().getAlternatives()); }
		(rule__FindPrimary__Alternatives)
		{ after(grammarAccess.getFindPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindUnary
entryRulefindUnary
:
{ before(grammarAccess.getFindUnaryRule()); }
	 rulefindUnary
{ after(grammarAccess.getFindUnaryRule()); } 
	 EOF 
;

// Rule findUnary
rulefindUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindUnaryAccess().getAlternatives()); }
		(rule__FindUnary__Alternatives)
		{ after(grammarAccess.getFindUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindComparison
entryRulefindComparison
:
{ before(grammarAccess.getFindComparisonRule()); }
	 rulefindComparison
{ after(grammarAccess.getFindComparisonRule()); } 
	 EOF 
;

// Rule findComparison
rulefindComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindComparisonAccess().getGroup()); }
		(rule__FindComparison__Group__0)
		{ after(grammarAccess.getFindComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindName
entryRulefindName
:
{ before(grammarAccess.getFindNameRule()); }
	 rulefindName
{ after(grammarAccess.getFindNameRule()); } 
	 EOF 
;

// Rule findName
rulefindName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindNameAccess().getGroup()); }
		(rule__FindName__Group__0)
		{ after(grammarAccess.getFindNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getRAssignment()); }
		(rule__Expression__RAssignment)
		{ after(grammarAccess.getExpressionAccess().getRAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerangeExpression
entryRulerangeExpression
:
{ before(grammarAccess.getRangeExpressionRule()); }
	 rulerangeExpression
{ after(grammarAccess.getRangeExpressionRule()); } 
	 EOF 
;

// Rule rangeExpression
rulerangeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getGroup()); }
		(rule__RangeExpression__Group__0)
		{ after(grammarAccess.getRangeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogicalOr
entryRulelogicalOr
:
{ before(grammarAccess.getLogicalOrRule()); }
	 rulelogicalOr
{ after(grammarAccess.getLogicalOrRule()); } 
	 EOF 
;

// Rule logicalOr
rulelogicalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrAccess().getGroup()); }
		(rule__LogicalOr__Group__0)
		{ after(grammarAccess.getLogicalOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogicalXor
entryRulelogicalXor
:
{ before(grammarAccess.getLogicalXorRule()); }
	 rulelogicalXor
{ after(grammarAccess.getLogicalXorRule()); } 
	 EOF 
;

// Rule logicalXor
rulelogicalXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalXorAccess().getGroup()); }
		(rule__LogicalXor__Group__0)
		{ after(grammarAccess.getLogicalXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogicalAnd
entryRulelogicalAnd
:
{ before(grammarAccess.getLogicalAndRule()); }
	 rulelogicalAnd
{ after(grammarAccess.getLogicalAndRule()); } 
	 EOF 
;

// Rule logicalAnd
rulelogicalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndAccess().getGroup()); }
		(rule__LogicalAnd__Group__0)
		{ after(grammarAccess.getLogicalAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleequality
entryRuleequality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleequality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule equality
ruleequality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelationalExp
entryRulerelationalExp
:
{ before(grammarAccess.getRelationalExpRule()); }
	 rulerelationalExp
{ after(grammarAccess.getRelationalExpRule()); } 
	 EOF 
;

// Rule relationalExp
rulerelationalExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpAccess().getGroup()); }
		(rule__RelationalExp__Group__0)
		{ after(grammarAccess.getRelationalExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditiveExp
entryRuleadditiveExp
:
{ before(grammarAccess.getAdditiveExpRule()); }
	 ruleadditiveExp
{ after(grammarAccess.getAdditiveExpRule()); } 
	 EOF 
;

// Rule additiveExp
ruleadditiveExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getGroup()); }
		(rule__AdditiveExp__Group__0)
		{ after(grammarAccess.getAdditiveExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultExp
entryRulemultExp
:
{ before(grammarAccess.getMultExpRule()); }
	 rulemultExp
{ after(grammarAccess.getMultExpRule()); } 
	 EOF 
;

// Rule multExp
rulemultExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExpAccess().getGroup()); }
		(rule__MultExp__Group__0)
		{ after(grammarAccess.getMultExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunaryExp
entryRuleunaryExp
:
{ before(grammarAccess.getUnaryExpRule()); }
	 ruleunaryExp
{ after(grammarAccess.getUnaryExpRule()); } 
	 EOF 
;

// Rule unaryExp
ruleunaryExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpAccess().getAlternatives()); }
		(rule__UnaryExp__Alternatives)
		{ after(grammarAccess.getUnaryExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunaryOperator
entryRuleunaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleunaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule unaryOperator
ruleunaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelinkExpression
entryRulelinkExpression
:
{ before(grammarAccess.getLinkExpressionRule()); }
	 rulelinkExpression
{ after(grammarAccess.getLinkExpressionRule()); } 
	 EOF 
;

// Rule linkExpression
rulelinkExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
		(rule__LinkExpression__Alternatives)
		{ after(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenavigateExpression
entryRulenavigateExpression
:
{ before(grammarAccess.getNavigateExpressionRule()); }
	 rulenavigateExpression
{ after(grammarAccess.getNavigateExpressionRule()); } 
	 EOF 
;

// Rule navigateExpression
rulenavigateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup()); }
		(rule__NavigateExpression__Group__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleextendedExpression
entryRuleextendedExpression
:
{ before(grammarAccess.getExtendedExpressionRule()); }
	 ruleextendedExpression
{ after(grammarAccess.getExtendedExpressionRule()); } 
	 EOF 
;

// Rule extendedExpression
ruleextendedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getAlternatives()); }
		(rule__ExtendedExpression__Alternatives)
		{ after(grammarAccess.getExtendedExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesortOrder
entryRulesortOrder
:
{ before(grammarAccess.getSortOrderRule()); }
	 rulesortOrder
{ after(grammarAccess.getSortOrderRule()); } 
	 EOF 
;

// Rule sortOrder
rulesortOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortOrderAccess().getGroup()); }
		(rule__SortOrder__Group__0)
		{ after(grammarAccess.getSortOrderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesortOrderComponent
entryRulesortOrderComponent
:
{ before(grammarAccess.getSortOrderComponentRule()); }
	 rulesortOrderComponent
{ after(grammarAccess.getSortOrderComponentRule()); } 
	 EOF 
;

// Rule sortOrderComponent
rulesortOrderComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortOrderComponentAccess().getGroup()); }
		(rule__SortOrderComponent__Group__0)
		{ after(grammarAccess.getSortOrderComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecreateExpression
entryRulecreateExpression
:
{ before(grammarAccess.getCreateExpressionRule()); }
	 rulecreateExpression
{ after(grammarAccess.getCreateExpressionRule()); } 
	 EOF 
;

// Rule createExpression
rulecreateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getGroup()); }
		(rule__CreateExpression__Group__0)
		{ after(grammarAccess.getCreateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecreateArgumentList
entryRulecreateArgumentList
:
{ before(grammarAccess.getCreateArgumentListRule()); }
	 rulecreateArgumentList
{ after(grammarAccess.getCreateArgumentListRule()); } 
	 EOF 
;

// Rule createArgumentList
rulecreateArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateArgumentListAccess().getGroup()); }
		(rule__CreateArgumentList__Group__0)
		{ after(grammarAccess.getCreateArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecreateArgument
entryRulecreateArgument
:
{ before(grammarAccess.getCreateArgumentRule()); }
	 rulecreateArgument
{ after(grammarAccess.getCreateArgumentRule()); } 
	 EOF 
;

// Rule createArgument
rulecreateArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getAlternatives()); }
		(rule__CreateArgument__Alternatives)
		{ after(grammarAccess.getCreateArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindExpression
entryRulefindExpression
:
{ before(grammarAccess.getFindExpressionRule()); }
	 rulefindExpression
{ after(grammarAccess.getFindExpressionRule()); } 
	 EOF 
;

// Rule findExpression
rulefindExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindExpressionAccess().getGroup()); }
		(rule__FindExpression__Group__0)
		{ after(grammarAccess.getFindExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulewhereClause
entryRulewhereClause
:
{ before(grammarAccess.getWhereClauseRule()); }
	 rulewhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule whereClause
rulewhereClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
		(rule__WhereClause__Group__0)
		{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefindType
entryRulefindType
:
{ before(grammarAccess.getFindTypeRule()); }
	 rulefindType
{ after(grammarAccess.getFindTypeRule()); } 
	 EOF 
;

// Rule findType
rulefindType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindTypeAccess().getAlternatives()); }
		(rule__FindType__Alternatives)
		{ after(grammarAccess.getFindTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfixExpression
entryRulepostfixExpression
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulepostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule postfixExpression
rulepostfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
		(rule__PostfixExpression__Group__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfixNoCallExpression
entryRulepostfixNoCallExpression
:
{ before(grammarAccess.getPostfixNoCallExpressionRule()); }
	 rulepostfixNoCallExpression
{ after(grammarAccess.getPostfixNoCallExpressionRule()); } 
	 EOF 
;

// Rule postfixNoCallExpression
rulepostfixNoCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getGroup()); }
		(rule__PostfixNoCallExpression__Group__0)
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExpression
entryRuleprimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 ruleprimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule primaryExpression
ruleprimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeNameExpression
entryRuletypeNameExpression
:
{ before(grammarAccess.getTypeNameExpressionRule()); }
	 ruletypeNameExpression
{ after(grammarAccess.getTypeNameExpressionRule()); } 
	 EOF 
;

// Rule typeNameExpression
ruletypeNameExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getAlternatives()); }
		(rule__TypeNameExpression__Alternatives)
		{ after(grammarAccess.getTypeNameExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenameExpression
entryRulenameExpression
:
{ before(grammarAccess.getNameExpressionRule()); }
	 rulenameExpression
{ after(grammarAccess.getNameExpressionRule()); } 
	 EOF 
;

// Rule nameExpression
rulenameExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameExpressionAccess().getGroup()); }
		(rule__NameExpression__Group__0)
		{ after(grammarAccess.getNameExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparenthesisedExpression
entryRuleparenthesisedExpression
:
{ before(grammarAccess.getParenthesisedExpressionRule()); }
	 ruleparenthesisedExpression
{ after(grammarAccess.getParenthesisedExpressionRule()); } 
	 EOF 
;

// Rule parenthesisedExpression
ruleparenthesisedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup()); }
		(rule__ParenthesisedExpression__Group__0)
		{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleargumentList
entryRuleargumentList
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleargumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule argumentList
ruleargumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup()); }
		(rule__ArgumentList__Group__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteral
entryRuleliteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier
entryRuleidentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleidentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule identifier
ruleidentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getIDENTTerminalRuleCall()); }
		RULE_IDENT
		{ after(grammarAccess.getIdentifierAccess().getIDENTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecharacteristic
entryRulecharacteristic
:
{ before(grammarAccess.getCharacteristicRule()); }
	 rulecharacteristic
{ after(grammarAccess.getCharacteristicRule()); } 
	 EOF 
;

// Rule characteristic
rulecharacteristic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicAccess().getAlternatives()); }
		(rule__Characteristic__Alternatives)
		{ after(grammarAccess.getCharacteristicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecharacteristicRW
entryRulecharacteristicRW
:
{ before(grammarAccess.getCharacteristicRWRule()); }
	 rulecharacteristicRW
{ after(grammarAccess.getCharacteristicRWRule()); } 
	 EOF 
;

// Rule characteristicRW
rulecharacteristicRW 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicRWAccess().getAlternatives()); }
		(rule__CharacteristicRW__Alternatives)
		{ after(grammarAccess.getCharacteristicRWAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getObjectServiceDefinitionParserRuleCall_0()); }
		ruleobjectServiceDefinition
		{ after(grammarAccess.getDefinitionAccess().getObjectServiceDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getObjectFunctionDefinitionParserRuleCall_1()); }
		ruleobjectFunctionDefinition
		{ after(grammarAccess.getDefinitionAccess().getObjectFunctionDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getStateDefinitionParserRuleCall_2()); }
		rulestateDefinition
		{ after(grammarAccess.getDefinitionAccess().getStateDefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDomainServiceDefinitionParserRuleCall_3()); }
		ruledomainServiceDefinition
		{ after(grammarAccess.getDefinitionAccess().getDomainServiceDefinitionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDomainFunctionDefinitionParserRuleCall_4()); }
		ruledomainFunctionDefinition
		{ after(grammarAccess.getDefinitionAccess().getDomainFunctionDefinitionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getTerminatorServiceDefinitionParserRuleCall_5()); }
		ruleterminatorServiceDefinition
		{ after(grammarAccess.getDefinitionAccess().getTerminatorServiceDefinitionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getTerminatorFunctionDefinitionParserRuleCall_6()); }
		ruleterminatorFunctionDefinition
		{ after(grammarAccess.getDefinitionAccess().getTerminatorFunctionDefinitionParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
		(rule__TypeReference__Group_0__0)
		{ after(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
		(rule__TypeReference__Group_1__0)
		{ after(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getCAssignment_2()); }
		(rule__TypeReference__CAssignment_2)
		{ after(grammarAccess.getTypeReferenceAccess().getCAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getGroup_3()); }
		(rule__TypeReference__Group_3__0)
		{ after(grammarAccess.getTypeReferenceAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceWithCA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceWithCAAccess().getTypeReferenceParserRuleCall_0()); }
		ruletypeReference
		{ after(grammarAccess.getTypeReferenceWithCAAccess().getTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceWithCAAccess().getConstrainedArrayTypeRefParserRuleCall_1()); }
		ruleconstrainedArrayTypeRef
		{ after(grammarAccess.getTypeReferenceWithCAAccess().getConstrainedArrayTypeRefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeprecatedType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeprecatedTypeAccess().getINSTANCETerminalRuleCall_0()); }
		RULE_INSTANCE
		{ after(grammarAccess.getDeprecatedTypeAccess().getINSTANCETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeprecatedTypeAccess().getEVENTTerminalRuleCall_1()); }
		RULE_EVENT
		{ after(grammarAccess.getDeprecatedTypeAccess().getEVENTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeprecatedTypeAccess().getSERVICETerminalRuleCall_2()); }
		RULE_SERVICE
		{ after(grammarAccess.getDeprecatedTypeAccess().getSERVICETerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_0()); }
		(rule__CollectionTypeRef__Group_0__0)
		{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_1()); }
		(rule__CollectionTypeRef__Group_1__0)
		{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_2()); }
		(rule__CollectionTypeRef__Group_2__0)
		{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_3()); }
		(rule__CollectionTypeRef__Group_3__0)
		{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_4()); }
		(rule__CollectionTypeRef__Group_4__0)
		{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictKeyType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictKeyTypeAccess().getNAssignment_0()); }
		(rule__DictKeyType__NAssignment_0)
		{ after(grammarAccess.getDictKeyTypeAccess().getNAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDictKeyTypeAccess().getIAssignment_1()); }
		(rule__DictKeyType__IAssignment_1)
		{ after(grammarAccess.getDictKeyTypeAccess().getIAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__SAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateTypeAccess().getSASSIGNERTerminalRuleCall_1_0_0()); }
		RULE_ASSIGNER
		{ after(grammarAccess.getStateTypeAccess().getSASSIGNERTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateTypeAccess().getSAssignerStartParserRuleCall_1_0_1()); }
		ruleassignerStart
		{ after(grammarAccess.getStateTypeAccess().getSAssignerStartParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStateTypeAccess().getSCREATIONTerminalRuleCall_1_0_2()); }
		RULE_CREATION
		{ after(grammarAccess.getStateTypeAccess().getSCREATIONTerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStateTypeAccess().getSTERMINALTerminalRuleCall_1_0_3()); }
		RULE_TERMINAL
		{ after(grammarAccess.getStateTypeAccess().getSTERMINALTerminalRuleCall_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceVisibility__VAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceVisibilityAccess().getVPRIVATETerminalRuleCall_1_0_0()); }
		RULE_PRIVATE
		{ after(grammarAccess.getServiceVisibilityAccess().getVPRIVATETerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getServiceVisibilityAccess().getVPUBLICTerminalRuleCall_1_0_1()); }
		RULE_PUBLIC
		{ after(grammarAccess.getServiceVisibilityAccess().getVPUBLICTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterModeAccess().getINTerminalRuleCall_0()); }
		RULE_IN
		{ after(grammarAccess.getParameterModeAccess().getINTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterModeAccess().getOUTTerminalRuleCall_1()); }
		RULE_OUT
		{ after(grammarAccess.getParameterModeAccess().getOUTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaValueAccess().getIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getPragmaValueAccess().getIdentifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPragmaValueAccess().getLiteralParserRuleCall_1()); }
		ruleliteral
		{ after(grammarAccess.getPragmaValueAccess().getLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCAssignment_1_0()); }
		(rule__Statement__CAssignment_1_0)
		{ after(grammarAccess.getStatementAccess().getCAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1_1()); }
		(rule__Statement__Group_1_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1_2()); }
		(rule__Statement__Group_1_2__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1_3()); }
		(rule__Statement__Group_1_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1_4()); }
		(rule__Statement__Group_1_4__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEAssignment_1_5()); }
		(rule__Statement__EAssignment_1_5)
		{ after(grammarAccess.getStatementAccess().getEAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRAssignment_1_6()); }
		(rule__Statement__RAssignment_1_6)
		{ after(grammarAccess.getStatementAccess().getRAssignment_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDAssignment_1_7()); }
		(rule__Statement__DAssignment_1_7)
		{ after(grammarAccess.getStatementAccess().getDAssignment_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRaiseStatementParserRuleCall_1_8()); }
		ruleraiseStatement
		{ after(grammarAccess.getStatementAccess().getRaiseStatementParserRuleCall_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDAssignment_1_9()); }
		(rule__Statement__DAssignment_1_9)
		{ after(grammarAccess.getStatementAccess().getDAssignment_1_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEAssignment_1_10()); }
		(rule__Statement__EAssignment_1_10)
		{ after(grammarAccess.getStatementAccess().getEAssignment_1_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLAssignment_1_11()); }
		(rule__Statement__LAssignment_1_11)
		{ after(grammarAccess.getStatementAccess().getLAssignment_1_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSAssignment_1_12()); }
		(rule__Statement__SAssignment_1_12)
		{ after(grammarAccess.getStatementAccess().getSAssignment_1_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCAssignment_1_13()); }
		(rule__Statement__CAssignment_1_13)
		{ after(grammarAccess.getStatementAccess().getCAssignment_1_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGAssignment_1_14()); }
		(rule__Statement__GAssignment_1_14)
		{ after(grammarAccess.getStatementAccess().getGAssignment_1_14()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIAssignment_1_15()); }
		(rule__Statement__IAssignment_1_15)
		{ after(grammarAccess.getStatementAccess().getIAssignment_1_15()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCAssignment_1_16()); }
		(rule__Statement__CAssignment_1_16)
		{ after(grammarAccess.getStatementAccess().getCAssignment_1_16()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFAssignment_1_17()); }
		(rule__Statement__FAssignment_1_17)
		{ after(grammarAccess.getStatementAccess().getFAssignment_1_17()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWAssignment_1_18()); }
		(rule__Statement__WAssignment_1_18)
		{ after(grammarAccess.getStatementAccess().getWAssignment_1_18()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamOperatorAccess().getSTREAM_INTerminalRuleCall_0()); }
		RULE_STREAM_IN
		{ after(grammarAccess.getStreamOperatorAccess().getSTREAM_INTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getSTREAM_OUTTerminalRuleCall_1()); }
		RULE_STREAM_OUT
		{ after(grammarAccess.getStreamOperatorAccess().getSTREAM_OUTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_INTerminalRuleCall_2()); }
		RULE_STREAM_LINE_IN
		{ after(grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_INTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_OUTTerminalRuleCall_3()); }
		RULE_STREAM_LINE_OUT
		{ after(grammarAccess.getStreamOperatorAccess().getSTREAM_LINE_OUTTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1_0_0()); }
		(rule__CallStatement__Group_1_0_0__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1_0_1()); }
		(rule__CallStatement__Group_1_0_1__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1_0_2()); }
		(rule__CallStatement__Group_1_0_2__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1_0_3()); }
		(rule__CallStatement__Group_1_0_3__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkTypeAccess().getLINKTerminalRuleCall_0()); }
		RULE_LINK
		{ after(grammarAccess.getLinkTypeAccess().getLINKTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkTypeAccess().getUNLINKTerminalRuleCall_1()); }
		RULE_UNLINK
		{ after(grammarAccess.getLinkTypeAccess().getUNLINKTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleTypeAccess().getATTerminalRuleCall_0()); }
		RULE_AT
		{ after(grammarAccess.getScheduleTypeAccess().getATTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getScheduleTypeAccess().getDELAYTerminalRuleCall_1()); }
		RULE_DELAY
		{ after(grammarAccess.getScheduleTypeAccess().getDELAYTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPrimary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPrimaryAccess().getFindComparisonParserRuleCall_0()); }
		rulefindComparison
		{ after(grammarAccess.getFindPrimaryAccess().getFindComparisonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindPrimaryAccess().getFindUnaryParserRuleCall_1()); }
		rulefindUnary
		{ after(grammarAccess.getFindPrimaryAccess().getFindUnaryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindUnaryAccess().getGroup_0()); }
		(rule__FindUnary__Group_0__0)
		{ after(grammarAccess.getFindUnaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindUnaryAccess().getGroup_1()); }
		(rule__FindUnary__Group_1__0)
		{ after(grammarAccess.getFindUnaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindComparisonAccess().getEQUALTerminalRuleCall_1_0()); }
		RULE_EQUAL
		{ after(grammarAccess.getFindComparisonAccess().getEQUALTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindComparisonAccess().getNOT_EQUALTerminalRuleCall_1_1()); }
		RULE_NOT_EQUAL
		{ after(grammarAccess.getFindComparisonAccess().getNOT_EQUALTerminalRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFindComparisonAccess().getLTTerminalRuleCall_1_2()); }
		RULE_LT
		{ after(grammarAccess.getFindComparisonAccess().getLTTerminalRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getFindComparisonAccess().getGTTerminalRuleCall_1_3()); }
		RULE_GT
		{ after(grammarAccess.getFindComparisonAccess().getGTTerminalRuleCall_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getFindComparisonAccess().getLTETerminalRuleCall_1_4()); }
		RULE_LTE
		{ after(grammarAccess.getFindComparisonAccess().getLTETerminalRuleCall_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getFindComparisonAccess().getGTETerminalRuleCall_1_5()); }
		RULE_GTE
		{ after(grammarAccess.getFindComparisonAccess().getGTETerminalRuleCall_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getGroup_1_0()); }
		(rule__FindName__Group_1_0__0)
		{ after(grammarAccess.getFindNameAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindNameAccess().getGroup_1_1()); }
		(rule__FindName__Group_1_1__0)
		{ after(grammarAccess.getFindNameAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getEQUALTerminalRuleCall_1_0_0()); }
		RULE_EQUAL
		{ after(grammarAccess.getEqualityAccess().getEQUALTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getNOT_EQUALTerminalRuleCall_1_0_1()); }
		RULE_NOT_EQUAL
		{ after(grammarAccess.getEqualityAccess().getNOT_EQUALTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getLTTerminalRuleCall_1_0_0()); }
		RULE_LT
		{ after(grammarAccess.getRelationalExpAccess().getLTTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getGTTerminalRuleCall_1_0_1()); }
		RULE_GT
		{ after(grammarAccess.getRelationalExpAccess().getGTTerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getLTETerminalRuleCall_1_0_2()); }
		RULE_LTE
		{ after(grammarAccess.getRelationalExpAccess().getLTETerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getGTETerminalRuleCall_1_0_3()); }
		RULE_GTE
		{ after(grammarAccess.getRelationalExpAccess().getGTETerminalRuleCall_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getPLUSTerminalRuleCall_1_0_0()); }
		RULE_PLUS
		{ after(grammarAccess.getAdditiveExpAccess().getPLUSTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getMINUSTerminalRuleCall_1_0_1()); }
		RULE_MINUS
		{ after(grammarAccess.getAdditiveExpAccess().getMINUSTerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getCONCATENATETerminalRuleCall_1_0_2()); }
		RULE_CONCATENATE
		{ after(grammarAccess.getAdditiveExpAccess().getCONCATENATETerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getUNIONTerminalRuleCall_1_0_3()); }
		RULE_UNION
		{ after(grammarAccess.getAdditiveExpAccess().getUNIONTerminalRuleCall_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getNOT_INTerminalRuleCall_1_0_4()); }
		RULE_NOT_IN
		{ after(grammarAccess.getAdditiveExpAccess().getNOT_INTerminalRuleCall_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getTIMESTerminalRuleCall_1_0_0()); }
		RULE_TIMES
		{ after(grammarAccess.getMultExpAccess().getTIMESTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getDIVIDETerminalRuleCall_1_0_1()); }
		RULE_DIVIDE
		{ after(grammarAccess.getMultExpAccess().getDIVIDETerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getMODTerminalRuleCall_1_0_2()); }
		RULE_MOD
		{ after(grammarAccess.getMultExpAccess().getMODTerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getPOWERTerminalRuleCall_1_0_3()); }
		RULE_POWER
		{ after(grammarAccess.getMultExpAccess().getPOWERTerminalRuleCall_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getREMTerminalRuleCall_1_0_4()); }
		RULE_REM
		{ after(grammarAccess.getMultExpAccess().getREMTerminalRuleCall_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getINTERSECTIONTerminalRuleCall_1_0_5()); }
		RULE_INTERSECTION
		{ after(grammarAccess.getMultExpAccess().getINTERSECTIONTerminalRuleCall_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getDISUNIONTerminalRuleCall_1_0_6()); }
		RULE_DISUNION
		{ after(grammarAccess.getMultExpAccess().getDISUNIONTerminalRuleCall_1_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpAccess().getGroup_0()); }
		(rule__UnaryExp__Group_0__0)
		{ after(grammarAccess.getUnaryExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpAccess().getLinkExpressionParserRuleCall_1()); }
		rulelinkExpression
		{ after(grammarAccess.getUnaryExpAccess().getLinkExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getMINUSTerminalRuleCall_0()); }
		RULE_MINUS
		{ after(grammarAccess.getUnaryOperatorAccess().getMINUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getPLUSTerminalRuleCall_1()); }
		RULE_PLUS
		{ after(grammarAccess.getUnaryOperatorAccess().getPLUSTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNOTTerminalRuleCall_2()); }
		RULE_NOT
		{ after(grammarAccess.getUnaryOperatorAccess().getNOTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getABSTerminalRuleCall_3()); }
		RULE_ABS
		{ after(grammarAccess.getUnaryOperatorAccess().getABSTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getN1Assignment_0()); }
		(rule__LinkExpression__N1Assignment_0)
		{ after(grammarAccess.getLinkExpressionAccess().getN1Assignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
		(rule__LinkExpression__Group_1__0)
		{ after(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_0()); }
		(rule__NavigateExpression__Group_1_0__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1()); }
		(rule__NavigateExpression__Group_1_1__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_2()); }
		(rule__NavigateExpression__Group_1_2__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_3()); }
		(rule__NavigateExpression__Group_1_3__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
		rulepostfixExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getCreateExpressionParserRuleCall_1()); }
		rulecreateExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getCreateExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getFindExpressionParserRuleCall_2()); }
		rulefindExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getFindExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getGroup_0()); }
		(rule__CreateArgument__Group_0__0)
		{ after(grammarAccess.getCreateArgumentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateArgumentAccess().getGroup_1()); }
		(rule__CreateArgument__Group_1__0)
		{ after(grammarAccess.getCreateArgumentAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindTypeAccess().getFINDTerminalRuleCall_0()); }
		RULE_FIND
		{ after(grammarAccess.getFindTypeAccess().getFINDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindTypeAccess().getFIND_ONETerminalRuleCall_1()); }
		RULE_FIND_ONE
		{ after(grammarAccess.getFindTypeAccess().getFIND_ONETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFindTypeAccess().getFIND_ONLYTerminalRuleCall_2()); }
		RULE_FIND_ONLY
		{ after(grammarAccess.getFindTypeAccess().getFIND_ONLYTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_0()); }
		(rule__PostfixExpression__Group_1_0__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_1()); }
		(rule__PostfixExpression__Group_1_1__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_2()); }
		(rule__PostfixExpression__Group_1_2__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_3()); }
		(rule__PostfixExpression__Group_1_3__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4()); }
		(rule__PostfixExpression__Group_1_4__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_5()); }
		(rule__PostfixExpression__Group_1_5__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_0()); }
		(rule__PostfixNoCallExpression__Group_1_0__0)
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_1()); }
		(rule__PostfixNoCallExpression__Group_1_1__0)
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_2()); }
		(rule__PostfixNoCallExpression__Group_1_2__0)
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_3()); }
		(rule__PostfixNoCallExpression__Group_1_3__0)
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
		ruleparenthesisedExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
		(rule__PrimaryExpression__Group_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
		ruletypeNameExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getGroup_0()); }
		(rule__TypeNameExpression__Group_0__0)
		{ after(grammarAccess.getTypeNameExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getCollectionTypeRefParserRuleCall_1()); }
		rulecollectionTypeRef
		{ after(grammarAccess.getTypeNameExpressionAccess().getCollectionTypeRefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getINTEGERLITERALTerminalRuleCall_0()); }
		RULE_INTEGERLITERAL
		{ after(grammarAccess.getLiteralAccess().getINTEGERLITERALTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getREALLITERALTerminalRuleCall_1()); }
		RULE_REALLITERAL
		{ after(grammarAccess.getLiteralAccess().getREALLITERALTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getSTRINGLITERALTerminalRuleCall_2()); }
		RULE_STRINGLITERAL
		{ after(grammarAccess.getLiteralAccess().getSTRINGLITERALTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTIMESTAMPLITERALTerminalRuleCall_3()); }
		RULE_TIMESTAMPLITERAL
		{ after(grammarAccess.getLiteralAccess().getTIMESTAMPLITERALTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDURATIONLITERALTerminalRuleCall_4()); }
		RULE_DURATIONLITERAL
		{ after(grammarAccess.getLiteralAccess().getDURATIONLITERALTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTRUETerminalRuleCall_5()); }
		RULE_TRUE
		{ after(grammarAccess.getLiteralAccess().getTRUETerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFALSETerminalRuleCall_6()); }
		RULE_FALSE
		{ after(grammarAccess.getLiteralAccess().getFALSETerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_7()); }
		RULE_NULL
		{ after(grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFLUSHTerminalRuleCall_8()); }
		RULE_FLUSH
		{ after(grammarAccess.getLiteralAccess().getFLUSHTerminalRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getENDLTerminalRuleCall_9()); }
		RULE_ENDL
		{ after(grammarAccess.getLiteralAccess().getENDLTerminalRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTHISTerminalRuleCall_10()); }
		RULE_THIS
		{ after(grammarAccess.getLiteralAccess().getTHISTerminalRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCONSOLETerminalRuleCall_11()); }
		RULE_CONSOLE
		{ after(grammarAccess.getLiteralAccess().getCONSOLETerminalRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getLINE_NOTerminalRuleCall_12()); }
		RULE_LINE_NO
		{ after(grammarAccess.getLiteralAccess().getLINE_NOTerminalRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFILE_NAMETerminalRuleCall_13()); }
		RULE_FILE_NAME
		{ after(grammarAccess.getLiteralAccess().getFILE_NAMETerminalRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getIDENTTerminalRuleCall_0()); }
		RULE_IDENT
		{ after(grammarAccess.getCharacteristicAccess().getIDENTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicAccess().getCharacteristicRWParserRuleCall_1()); }
		rulecharacteristicRW
		{ after(grammarAccess.getCharacteristicAccess().getCharacteristicRWParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicRW__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicRWAccess().getRANGETerminalRuleCall_0()); }
		RULE_RANGE
		{ after(grammarAccess.getCharacteristicRWAccess().getRANGETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicRWAccess().getDELTATerminalRuleCall_1()); }
		RULE_DELTA
		{ after(grammarAccess.getCharacteristicRWAccess().getDELTATerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_0__0__Impl
	rule__TypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0()); }
	()
	{ after(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getNamedTypeRefParserRuleCall_0_1()); }
	rulenamedTypeRef
	{ after(grammarAccess.getTypeReferenceAccess().getNamedTypeRefParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_1__0__Impl
	rule__TypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_1_0()); }
	()
	{ after(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getInstanceTypeRefParserRuleCall_1_1()); }
	ruleinstanceTypeRef
	{ after(grammarAccess.getTypeReferenceAccess().getInstanceTypeRefParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_3__0__Impl
	rule__TypeReference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_3_0()); }
	()
	{ after(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getDeprecatedTypeParserRuleCall_3_1()); }
	ruledeprecatedType
	{ after(grammarAccess.getTypeReferenceAccess().getDeprecatedTypeParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedObjectName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedObjectName__Group__0__Impl
	rule__QualifiedObjectName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedObjectNameAccess().getGroup_0()); }
	(rule__QualifiedObjectName__Group_0__0)?
	{ after(grammarAccess.getQualifiedObjectNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedObjectName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedObjectNameAccess().getObjectNameParserRuleCall_1()); }
	ruleobjectName
	{ after(grammarAccess.getQualifiedObjectNameAccess().getObjectNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedObjectName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedObjectName__Group_0__0__Impl
	rule__QualifiedObjectName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedObjectNameAccess().getDomainNameParserRuleCall_0_0()); }
	ruledomainName
	{ after(grammarAccess.getQualifiedObjectNameAccess().getDomainNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedObjectName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedObjectName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedObjectNameAccess().getSCOPETerminalRuleCall_0_1()); }
	RULE_SCOPE
	{ after(grammarAccess.getQualifiedObjectNameAccess().getSCOPETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeRef__Group__0__Impl
	rule__InstanceTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeRefAccess().getANONYMOUSTerminalRuleCall_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getInstanceTypeRefAccess().getANONYMOUSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeRef__Group__1__Impl
	rule__InstanceTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeRefAccess().getINSTANCETerminalRuleCall_1()); }
	RULE_INSTANCE
	{ after(grammarAccess.getInstanceTypeRefAccess().getINSTANCETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeRef__Group__2__Impl
	rule__InstanceTypeRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeRefAccess().getOFTerminalRuleCall_2()); }
	RULE_OF
	{ after(grammarAccess.getInstanceTypeRefAccess().getOFTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeRefAccess().getQualifiedObjectNameParserRuleCall_3()); }
	rulequalifiedObjectName
	{ after(grammarAccess.getInstanceTypeRefAccess().getQualifiedObjectNameParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeRef__Group__0__Impl
	rule__NamedTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeRefAccess().getANONYMOUSTerminalRuleCall_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getNamedTypeRefAccess().getANONYMOUSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeRef__Group__1__Impl
	rule__NamedTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeRefAccess().getGroup_1()); }
	(rule__NamedTypeRef__Group_1__0)?
	{ after(grammarAccess.getNamedTypeRefAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeRefAccess().getTypeNameParserRuleCall_2()); }
	ruletypeName
	{ after(grammarAccess.getNamedTypeRefAccess().getTypeNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeRef__Group_1__0__Impl
	rule__NamedTypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeRefAccess().getDomainNameParserRuleCall_1_0()); }
	ruledomainName
	{ after(grammarAccess.getNamedTypeRefAccess().getDomainNameParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeRefAccess().getSCOPETerminalRuleCall_1_1()); }
	RULE_SCOPE
	{ after(grammarAccess.getNamedTypeRefAccess().getSCOPETerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserDefinedTypeRef__Group__0__Impl
	rule__UserDefinedTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserDefinedTypeRefAccess().getGroup_0()); }
	(rule__UserDefinedTypeRef__Group_0__0)?
	{ after(grammarAccess.getUserDefinedTypeRefAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserDefinedTypeRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserDefinedTypeRefAccess().getTypeNameParserRuleCall_1()); }
	ruletypeName
	{ after(grammarAccess.getUserDefinedTypeRefAccess().getTypeNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedTypeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserDefinedTypeRef__Group_0__0__Impl
	rule__UserDefinedTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserDefinedTypeRefAccess().getDomainNameParserRuleCall_0_0()); }
	ruledomainName
	{ after(grammarAccess.getUserDefinedTypeRefAccess().getDomainNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserDefinedTypeRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedTypeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserDefinedTypeRefAccess().getSCOPETerminalRuleCall_0_1()); }
	RULE_SCOPE
	{ after(grammarAccess.getUserDefinedTypeRefAccess().getSCOPETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainedArrayTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeRef__Group__0__Impl
	rule__ConstrainedArrayTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeRefAccess().getUserDefinedTypeRefParserRuleCall_0()); }
	ruleuserDefinedTypeRef
	{ after(grammarAccess.getConstrainedArrayTypeRefAccess().getUserDefinedTypeRefParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeRefAccess().getArrayBoundsParserRuleCall_1()); }
	rulearrayBounds
	{ after(grammarAccess.getConstrainedArrayTypeRefAccess().getArrayBoundsParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBounds__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayBounds__Group__0__Impl
	rule__ArrayBounds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayBoundsAccess().getLPARENTerminalRuleCall_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getArrayBoundsAccess().getLPARENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayBounds__Group__1__Impl
	rule__ArrayBounds__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayBoundsAccess().getEAssignment_1()); }
	(rule__ArrayBounds__EAssignment_1)
	{ after(grammarAccess.getArrayBoundsAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayBounds__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayBoundsAccess().getRPARENTerminalRuleCall_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getArrayBoundsAccess().getRPARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0__0__Impl
	rule__CollectionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_0_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0__1__Impl
	rule__CollectionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getSEQUENCETerminalRuleCall_0_1()); }
	RULE_SEQUENCE
	{ after(grammarAccess.getCollectionTypeRefAccess().getSEQUENCETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0__2__Impl
	rule__CollectionTypeRef__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_0_2()); }
	(rule__CollectionTypeRef__Group_0_2__0)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0__3__Impl
	rule__CollectionTypeRef__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_0_3()); }
	RULE_OF
	{ after(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getTAssignment_0_4()); }
	(rule__CollectionTypeRef__TAssignment_0_4)
	{ after(grammarAccess.getCollectionTypeRefAccess().getTAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0_2__0__Impl
	rule__CollectionTypeRef__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getLPARENTerminalRuleCall_0_2_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getCollectionTypeRefAccess().getLPARENTerminalRuleCall_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0_2__1__Impl
	rule__CollectionTypeRef__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getEAssignment_0_2_1()); }
	(rule__CollectionTypeRef__EAssignment_0_2_1)
	{ after(grammarAccess.getCollectionTypeRefAccess().getEAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getRPARENTerminalRuleCall_0_2_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getCollectionTypeRefAccess().getRPARENTerminalRuleCall_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_1__0__Impl
	rule__CollectionTypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_1_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_1__1__Impl
	rule__CollectionTypeRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getARRAYTerminalRuleCall_1_1()); }
	RULE_ARRAY
	{ after(grammarAccess.getCollectionTypeRefAccess().getARRAYTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_1__2__Impl
	rule__CollectionTypeRef__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getAAssignment_1_2()); }
	(rule__CollectionTypeRef__AAssignment_1_2)
	{ after(grammarAccess.getCollectionTypeRefAccess().getAAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_1__3__Impl
	rule__CollectionTypeRef__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_1_3()); }
	RULE_OF
	{ after(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getTAssignment_1_4()); }
	(rule__CollectionTypeRef__TAssignment_1_4)
	{ after(grammarAccess.getCollectionTypeRefAccess().getTAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_2__0__Impl
	rule__CollectionTypeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_2_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_2__1__Impl
	rule__CollectionTypeRef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getSETTerminalRuleCall_2_1()); }
	RULE_SET
	{ after(grammarAccess.getCollectionTypeRefAccess().getSETTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_2__2__Impl
	rule__CollectionTypeRef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_2_2()); }
	RULE_OF
	{ after(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getTAssignment_2_3()); }
	(rule__CollectionTypeRef__TAssignment_2_3)
	{ after(grammarAccess.getCollectionTypeRefAccess().getTAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_3__0__Impl
	rule__CollectionTypeRef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_3_0()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_3__1__Impl
	rule__CollectionTypeRef__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getBAGTerminalRuleCall_3_1()); }
	RULE_BAG
	{ after(grammarAccess.getCollectionTypeRefAccess().getBAGTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_3__2__Impl
	rule__CollectionTypeRef__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_3_2()); }
	RULE_OF
	{ after(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getTAssignment_3_3()); }
	(rule__CollectionTypeRef__TAssignment_3_3)
	{ after(grammarAccess.getCollectionTypeRefAccess().getTAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4__0__Impl
	rule__CollectionTypeRef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getCollectionTypeRefAction_4_0()); }
	()
	{ after(grammarAccess.getCollectionTypeRefAccess().getCollectionTypeRefAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4__1__Impl
	rule__CollectionTypeRef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_4_1()); }
	(RULE_ANONYMOUS)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getANONYMOUSTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4__2__Impl
	rule__CollectionTypeRef__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getDICTIONARYTerminalRuleCall_4_2()); }
	RULE_DICTIONARY
	{ after(grammarAccess.getCollectionTypeRefAccess().getDICTIONARYTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getGroup_4_3()); }
	(rule__CollectionTypeRef__Group_4_3__0)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeRef__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4_3__0__Impl
	rule__CollectionTypeRef__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getDictKeyTypeParserRuleCall_4_3_0()); }
	(ruledictKeyType)?
	{ after(grammarAccess.getCollectionTypeRefAccess().getDictKeyTypeParserRuleCall_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4_3__1__Impl
	rule__CollectionTypeRef__Group_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_4_3_1()); }
	RULE_OF
	{ after(grammarAccess.getCollectionTypeRefAccess().getOFTerminalRuleCall_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeRef__Group_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__Group_4_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeRefAccess().getDAssignment_4_3_2()); }
	(rule__CollectionTypeRef__DAssignment_4_3_2)
	{ after(grammarAccess.getCollectionTypeRefAccess().getDAssignment_4_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group__0__Impl
	rule__RelationshipSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getRAssignment_0()); }
	(rule__RelationshipSpec__RAssignment_0)
	{ after(grammarAccess.getRelationshipSpecAccess().getRAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getGroup_1()); }
	(rule__RelationshipSpec__Group_1__0)?
	{ after(grammarAccess.getRelationshipSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group_1__0__Impl
	rule__RelationshipSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_0()); }
	RULE_DOT
	{ after(grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group_1__1__Impl
	rule__RelationshipSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_1()); }
	(rule__RelationshipSpec__RAssignment_1_1)
	{ after(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getGroup_1_2()); }
	(rule__RelationshipSpec__Group_1_2__0)?
	{ after(grammarAccess.getRelationshipSpecAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSpec__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group_1_2__0__Impl
	rule__RelationshipSpec__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_2_0()); }
	RULE_DOT
	{ after(grammarAccess.getRelationshipSpecAccess().getDOTTerminalRuleCall_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_2_1()); }
	(rule__RelationshipSpec__RAssignment_1_2_1)
	{ after(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group__0__Impl
	rule__ServiceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getINSTANCETerminalRuleCall_0()); }
	RULE_INSTANCE
	{ after(grammarAccess.getServiceTypeAccess().getINSTANCETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getGroup_1()); }
	(rule__ServiceType__Group_1__0)?
	{ after(grammarAccess.getServiceTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group_1__0__Impl
	rule__ServiceType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getDEFERREDTerminalRuleCall_1_0()); }
	RULE_DEFERRED
	{ after(grammarAccess.getServiceTypeAccess().getDEFERREDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group_1__1__Impl
	rule__ServiceType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getLPARENTerminalRuleCall_1_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getServiceTypeAccess().getLPARENTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group_1__2__Impl
	rule__ServiceType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getRELATIONSHIPNAMETerminalRuleCall_1_2()); }
	RULE_RELATIONSHIPNAME
	{ after(grammarAccess.getServiceTypeAccess().getRELATIONSHIPNAMETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceTypeAccess().getRPARENTerminalRuleCall_1_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getServiceTypeAccess().getRPARENTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateType__Group__0__Impl
	rule__StateType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTypeAccess().getStateTypeAction_0()); }
	()
	{ after(grammarAccess.getStateTypeAccess().getStateTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTypeAccess().getSAssignment_1()); }
	(rule__StateType__SAssignment_1)?
	{ after(grammarAccess.getStateTypeAccess().getSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignerStart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignerStart__Group__0__Impl
	rule__AssignerStart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignerStart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignerStartAccess().getASSIGNERTerminalRuleCall_0()); }
	RULE_ASSIGNER
	{ after(grammarAccess.getAssignerStartAccess().getASSIGNERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignerStart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignerStart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignerStart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignerStartAccess().getSTARTTerminalRuleCall_1()); }
	RULE_START
	{ after(grammarAccess.getAssignerStartAccess().getSTARTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
	()
	{ after(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getParameterListAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
	rule__ParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPAssignment_2()); }
	(rule__ParameterList__PAssignment_2)?
	{ after(grammarAccess.getParameterListAccess().getPAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__3__Impl
	rule__ParameterList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_3()); }
	(rule__ParameterList__Group_3__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRPARENTerminalRuleCall_4()); }
	RULE_RPAREN
	{ after(grammarAccess.getParameterListAccess().getRPARENTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_3__0__Impl
	rule__ParameterList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCOMMATerminalRuleCall_3_0()); }
	RULE_COMMA
	{ after(grammarAccess.getParameterListAccess().getCOMMATerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPAssignment_3_1()); }
	(rule__ParameterList__PAssignment_3_1)
	{ after(grammarAccess.getParameterListAccess().getPAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDefinition__Group__0__Impl
	rule__ParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDefinitionAccess().getParameterNameParserRuleCall_0()); }
	ruleparameterName
	{ after(grammarAccess.getParameterDefinitionAccess().getParameterNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDefinition__Group__1__Impl
	rule__ParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDefinitionAccess().getCOLONTerminalRuleCall_1()); }
	RULE_COLON
	{ after(grammarAccess.getParameterDefinitionAccess().getCOLONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDefinition__Group__2__Impl
	rule__ParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDefinitionAccess().getParameterModeParserRuleCall_2()); }
	ruleparameterMode
	{ after(grammarAccess.getParameterDefinitionAccess().getParameterModeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDefinitionAccess().getParameterTypeParserRuleCall_3()); }
	ruleparameterType
	{ after(grammarAccess.getParameterDefinitionAccess().getParameterTypeParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceVisibility__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceVisibility__Group__0__Impl
	rule__ServiceVisibility__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceVisibility__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceVisibilityAccess().getServiceVisibilityAction_0()); }
	()
	{ after(grammarAccess.getServiceVisibilityAccess().getServiceVisibilityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceVisibility__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceVisibility__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceVisibility__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceVisibilityAccess().getVAssignment_1()); }
	(rule__ServiceVisibility__VAssignment_1)?
	{ after(grammarAccess.getServiceVisibilityAccess().getVAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaList__Group__0__Impl
	rule__PragmaList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaListAccess().getPragmaDefParserRuleCall_0()); }
	rulepragmaDef
	{ after(grammarAccess.getPragmaListAccess().getPragmaDefParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaListAccess().getSEMITerminalRuleCall_1()); }
	RULE_SEMI
	{ after(grammarAccess.getPragmaListAccess().getSEMITerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group__0__Impl
	rule__PragmaDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getPRAGMATerminalRuleCall_0()); }
	RULE_PRAGMA
	{ after(grammarAccess.getPragmaDefAccess().getPRAGMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group__1__Impl
	rule__PragmaDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getPragmaNameParserRuleCall_1()); }
	rulepragmaName
	{ after(grammarAccess.getPragmaDefAccess().getPragmaNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group__2__Impl
	rule__PragmaDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getLPARENTerminalRuleCall_2()); }
	RULE_LPAREN
	{ after(grammarAccess.getPragmaDefAccess().getLPARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group__3__Impl
	rule__PragmaDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getGroup_3()); }
	(rule__PragmaDef__Group_3__0)?
	{ after(grammarAccess.getPragmaDefAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getRPARENTerminalRuleCall_4()); }
	RULE_RPAREN
	{ after(grammarAccess.getPragmaDefAccess().getRPARENTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaDef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group_3__0__Impl
	rule__PragmaDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_0()); }
	rulepragmaValue
	{ after(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getGroup_3_1()); }
	(rule__PragmaDef__Group_3_1__0)*
	{ after(grammarAccess.getPragmaDefAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaDef__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group_3_1__0__Impl
	rule__PragmaDef__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getCOMMATerminalRuleCall_3_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getPragmaDefAccess().getCOMMATerminalRuleCall_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaDef__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaDef__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_1_1()); }
	rulepragmaValue
	{ after(grammarAccess.getPragmaDefAccess().getPragmaValueParserRuleCall_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__0__Impl
	rule__DomainServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSAssignment_0()); }
	(rule__DomainServiceDefinition__SAssignment_0)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__1__Impl
	rule__DomainServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_1()); }
	RULE_SERVICE
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__2__Impl
	rule__DomainServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getDomainNameParserRuleCall_2()); }
	ruledomainName
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getDomainNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__3__Impl
	rule__DomainServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSCOPETerminalRuleCall_3()); }
	RULE_SCOPE
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSCOPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__4__Impl
	rule__DomainServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getServiceNameParserRuleCall_4()); }
	ruleserviceName
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getServiceNameParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__5__Impl
	rule__DomainServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getPAssignment_5()); }
	(rule__DomainServiceDefinition__PAssignment_5)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getPAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__6__Impl
	rule__DomainServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getISTerminalRuleCall_6()); }
	RULE_IS
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getISTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__7__Impl
	rule__DomainServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getCAssignment_7()); }
	(rule__DomainServiceDefinition__CAssignment_7)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getCAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__8__Impl
	rule__DomainServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_8()); }
	(RULE_SERVICE)?
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSERVICETerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__9__Impl
	rule__DomainServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSEMITerminalRuleCall_9()); }
	RULE_SEMI
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSEMITerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getPragmaListParserRuleCall_10()); }
	rulepragmaList
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getPragmaListParserRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__0__Impl
	rule__DomainFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getSAssignment_0()); }
	(rule__DomainFunctionDefinition__SAssignment_0)
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__1__Impl
	rule__DomainFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1()); }
	RULE_FUNCTION
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__2__Impl
	rule__DomainFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getDomainNameParserRuleCall_2()); }
	ruledomainName
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getDomainNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__3__Impl
	rule__DomainFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getSCOPETerminalRuleCall_3()); }
	RULE_SCOPE
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getSCOPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__4__Impl
	rule__DomainFunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getServiceNameParserRuleCall_4()); }
	ruleserviceName
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getServiceNameParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__5__Impl
	rule__DomainFunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getPAssignment_5()); }
	(rule__DomainFunctionDefinition__PAssignment_5)
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getPAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__6__Impl
	rule__DomainFunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getRETURNTerminalRuleCall_6()); }
	RULE_RETURN
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getRETURNTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__7__Impl
	rule__DomainFunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getRAssignment_7()); }
	(rule__DomainFunctionDefinition__RAssignment_7)
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getRAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__8__Impl
	rule__DomainFunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getISTerminalRuleCall_8()); }
	RULE_IS
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getISTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__9__Impl
	rule__DomainFunctionDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getCAssignment_9()); }
	(rule__DomainFunctionDefinition__CAssignment_9)
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getCAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__10__Impl
	rule__DomainFunctionDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_10()); }
	(RULE_FUNCTION)?
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__11__Impl
	rule__DomainFunctionDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getSEMITerminalRuleCall_11()); }
	RULE_SEMI
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getSEMITerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainFunctionDefinition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainFunctionDefinitionAccess().getPragmaListParserRuleCall_12()); }
	rulepragmaList
	{ after(grammarAccess.getDomainFunctionDefinitionAccess().getPragmaListParserRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__0__Impl
	rule__ObjectServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSAssignment_0()); }
	(rule__ObjectServiceDefinition__SAssignment_0)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__1__Impl
	rule__ObjectServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getINSTANCETerminalRuleCall_1()); }
	(RULE_INSTANCE)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getINSTANCETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__2__Impl
	rule__ObjectServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_2()); }
	RULE_SERVICE
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__3__Impl
	rule__ObjectServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getDomainNameParserRuleCall_3()); }
	ruledomainName
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getDomainNameParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__4__Impl
	rule__ObjectServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSCOPETerminalRuleCall_4()); }
	RULE_SCOPE
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSCOPETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__5__Impl
	rule__ObjectServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getObjectNameParserRuleCall_5()); }
	ruleobjectName
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getObjectNameParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__6__Impl
	rule__ObjectServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getDOTTerminalRuleCall_6()); }
	RULE_DOT
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getDOTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__7__Impl
	rule__ObjectServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getServiceNameParserRuleCall_7()); }
	ruleserviceName
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getServiceNameParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__8__Impl
	rule__ObjectServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getPAssignment_8()); }
	(rule__ObjectServiceDefinition__PAssignment_8)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getPAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__9__Impl
	rule__ObjectServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getISTerminalRuleCall_9()); }
	RULE_IS
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getISTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__10__Impl
	rule__ObjectServiceDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getCAssignment_10()); }
	(rule__ObjectServiceDefinition__CAssignment_10)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getCAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__11__Impl
	rule__ObjectServiceDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_11()); }
	(RULE_SERVICE)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSERVICETerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__12__Impl
	rule__ObjectServiceDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSEMITerminalRuleCall_12()); }
	RULE_SEMI
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSEMITerminalRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getPragmaListParserRuleCall_13()); }
	rulepragmaList
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getPragmaListParserRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__0__Impl
	rule__TerminatorServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSAssignment_0()); }
	(rule__TerminatorServiceDefinition__SAssignment_0)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__1__Impl
	rule__TerminatorServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_1()); }
	RULE_SERVICE
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__2__Impl
	rule__TerminatorServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainNameParserRuleCall_2()); }
	ruledomainName
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__3__Impl
	rule__TerminatorServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSCOPETerminalRuleCall_3()); }
	RULE_SCOPE
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSCOPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__4__Impl
	rule__TerminatorServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorNameParserRuleCall_4()); }
	ruleterminatorName
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorNameParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__5__Impl
	rule__TerminatorServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5()); }
	RULE_TERMINATOR_SCOPE
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__6__Impl
	rule__TerminatorServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceNameParserRuleCall_6()); }
	ruleserviceName
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceNameParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__7__Impl
	rule__TerminatorServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getPAssignment_7()); }
	(rule__TerminatorServiceDefinition__PAssignment_7)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getPAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__8__Impl
	rule__TerminatorServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getISTerminalRuleCall_8()); }
	RULE_IS
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getISTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__9__Impl
	rule__TerminatorServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getCAssignment_9()); }
	(rule__TerminatorServiceDefinition__CAssignment_9)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getCAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__10__Impl
	rule__TerminatorServiceDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_10()); }
	(RULE_SERVICE)?
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSERVICETerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__11__Impl
	rule__TerminatorServiceDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSEMITerminalRuleCall_11()); }
	RULE_SEMI
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSEMITerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getPragmaListParserRuleCall_12()); }
	rulepragmaList
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getPragmaListParserRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__0__Impl
	rule__TerminatorFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getSAssignment_0()); }
	(rule__TerminatorFunctionDefinition__SAssignment_0)
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__1__Impl
	rule__TerminatorFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1()); }
	RULE_FUNCTION
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__2__Impl
	rule__TerminatorFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getDomainNameParserRuleCall_2()); }
	ruledomainName
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getDomainNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__3__Impl
	rule__TerminatorFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getSCOPETerminalRuleCall_3()); }
	RULE_SCOPE
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getSCOPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__4__Impl
	rule__TerminatorFunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getTerminatorNameParserRuleCall_4()); }
	ruleterminatorName
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getTerminatorNameParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__5__Impl
	rule__TerminatorFunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5()); }
	RULE_TERMINATOR_SCOPE
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getTERMINATOR_SCOPETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__6__Impl
	rule__TerminatorFunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getServiceNameParserRuleCall_6()); }
	ruleserviceName
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getServiceNameParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__7__Impl
	rule__TerminatorFunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getPAssignment_7()); }
	(rule__TerminatorFunctionDefinition__PAssignment_7)
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getPAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__8__Impl
	rule__TerminatorFunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getRETURNTerminalRuleCall_8()); }
	RULE_RETURN
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getRETURNTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__9__Impl
	rule__TerminatorFunctionDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getRAssignment_9()); }
	(rule__TerminatorFunctionDefinition__RAssignment_9)
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getRAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__10__Impl
	rule__TerminatorFunctionDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getISTerminalRuleCall_10()); }
	RULE_IS
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getISTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__11__Impl
	rule__TerminatorFunctionDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getCAssignment_11()); }
	(rule__TerminatorFunctionDefinition__CAssignment_11)
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getCAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__12__Impl
	rule__TerminatorFunctionDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_12()); }
	(RULE_FUNCTION)?
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__13__Impl
	rule__TerminatorFunctionDefinition__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getSEMITerminalRuleCall_13()); }
	RULE_SEMI
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getSEMITerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorFunctionDefinition__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getPragmaListParserRuleCall_14()); }
	rulepragmaList
	{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getPragmaListParserRuleCall_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__0__Impl
	rule__ObjectFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getVAssignment_0()); }
	(rule__ObjectFunctionDefinition__VAssignment_0)
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getVAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__1__Impl
	rule__ObjectFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getSAssignment_1()); }
	(rule__ObjectFunctionDefinition__SAssignment_1)
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__2__Impl
	rule__ObjectFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_2()); }
	RULE_FUNCTION
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__3__Impl
	rule__ObjectFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getDomainNameParserRuleCall_3()); }
	ruledomainName
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getDomainNameParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__4__Impl
	rule__ObjectFunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getSCOPETerminalRuleCall_4()); }
	RULE_SCOPE
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getSCOPETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__5__Impl
	rule__ObjectFunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getObjectNameParserRuleCall_5()); }
	ruleobjectName
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getObjectNameParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__6__Impl
	rule__ObjectFunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getDOTTerminalRuleCall_6()); }
	RULE_DOT
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getDOTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__7__Impl
	rule__ObjectFunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getServiceNameParserRuleCall_7()); }
	ruleserviceName
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getServiceNameParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__8__Impl
	rule__ObjectFunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getPAssignment_8()); }
	(rule__ObjectFunctionDefinition__PAssignment_8)
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getPAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__9__Impl
	rule__ObjectFunctionDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getRETURNTerminalRuleCall_9()); }
	RULE_RETURN
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getRETURNTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__10__Impl
	rule__ObjectFunctionDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getRAssignment_10()); }
	(rule__ObjectFunctionDefinition__RAssignment_10)
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getRAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__11__Impl
	rule__ObjectFunctionDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getISTerminalRuleCall_11()); }
	RULE_IS
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getISTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__12__Impl
	rule__ObjectFunctionDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getCAssignment_12()); }
	(rule__ObjectFunctionDefinition__CAssignment_12)
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getCAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__13__Impl
	rule__ObjectFunctionDefinition__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_13()); }
	(RULE_FUNCTION)?
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getFUNCTIONTerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__14__Impl
	rule__ObjectFunctionDefinition__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getSEMITerminalRuleCall_14()); }
	RULE_SEMI
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getSEMITerminalRuleCall_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectFunctionDefinition__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFunctionDefinitionAccess().getPragmaListParserRuleCall_15()); }
	rulepragmaList
	{ after(grammarAccess.getObjectFunctionDefinitionAccess().getPragmaListParserRuleCall_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__0__Impl
	rule__StateDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSAssignment_0()); }
	(rule__StateDefinition__SAssignment_0)
	{ after(grammarAccess.getStateDefinitionAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__1__Impl
	rule__StateDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_1()); }
	RULE_STATE
	{ after(grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__2__Impl
	rule__StateDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getDomainNameParserRuleCall_2()); }
	ruledomainName
	{ after(grammarAccess.getStateDefinitionAccess().getDomainNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__3__Impl
	rule__StateDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSCOPETerminalRuleCall_3()); }
	RULE_SCOPE
	{ after(grammarAccess.getStateDefinitionAccess().getSCOPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__4__Impl
	rule__StateDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getObjectNameParserRuleCall_4()); }
	ruleobjectName
	{ after(grammarAccess.getStateDefinitionAccess().getObjectNameParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__5__Impl
	rule__StateDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getDOTTerminalRuleCall_5()); }
	RULE_DOT
	{ after(grammarAccess.getStateDefinitionAccess().getDOTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__6__Impl
	rule__StateDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getStateNameParserRuleCall_6()); }
	rulestateName
	{ after(grammarAccess.getStateDefinitionAccess().getStateNameParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__7__Impl
	rule__StateDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getPAssignment_7()); }
	(rule__StateDefinition__PAssignment_7)
	{ after(grammarAccess.getStateDefinitionAccess().getPAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__8__Impl
	rule__StateDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getISTerminalRuleCall_8()); }
	RULE_IS
	{ after(grammarAccess.getStateDefinitionAccess().getISTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__9__Impl
	rule__StateDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getCAssignment_9()); }
	(rule__StateDefinition__CAssignment_9)
	{ after(grammarAccess.getStateDefinitionAccess().getCAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__10__Impl
	rule__StateDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_10()); }
	(RULE_STATE)?
	{ after(grammarAccess.getStateDefinitionAccess().getSTATETerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__11__Impl
	rule__StateDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSEMITerminalRuleCall_11()); }
	RULE_SEMI
	{ after(grammarAccess.getStateDefinitionAccess().getSEMITerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getPragmaListParserRuleCall_12()); }
	rulepragmaList
	{ after(grammarAccess.getStateDefinitionAccess().getPragmaListParserRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSAssignment_1()); }
	(rule__StatementList__SAssignment_1)*
	{ after(grammarAccess.getStatementListAccess().getSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
	(rule__Statement__Alternatives_1)?
	{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
	rule__Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSEMITerminalRuleCall_2()); }
	RULE_SEMI
	{ after(grammarAccess.getStatementAccess().getSEMITerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getPragmaListParserRuleCall_3()); }
	rulepragmaList
	{ after(grammarAccess.getStatementAccess().getPragmaListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEAssignment_1_1_0()); }
	(rule__Statement__EAssignment_1_1_0)
	{ after(grammarAccess.getStatementAccess().getEAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSAssignment_1_2_0()); }
	(rule__Statement__SAssignment_1_2_0)
	{ after(grammarAccess.getStatementAccess().getSAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getNAssignment_1_3_0()); }
	(rule__Statement__NAssignment_1_3_0)
	{ after(grammarAccess.getStatementAccess().getNAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getCAssignment_1_4_0()); }
	(rule__Statement__CAssignment_1_4_0)
	{ after(grammarAccess.getStatementAccess().getCAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__0__Impl
	rule__AssignStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getLhsAssignment_0()); }
	(rule__AssignStatement__LhsAssignment_0)
	{ after(grammarAccess.getAssignStatementAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__1__Impl
	rule__AssignStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getASSIGNTerminalRuleCall_1()); }
	RULE_ASSIGN
	{ after(grammarAccess.getAssignStatementAccess().getASSIGNTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getRhsAssignment_2()); }
	(rule__AssignStatement__RhsAssignment_2)
	{ after(grammarAccess.getAssignStatementAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamValue__Group__0__Impl
	rule__StreamValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamValueAccess().getStreamOperatorParserRuleCall_0()); }
	rulestreamOperator
	{ after(grammarAccess.getStreamValueAccess().getStreamOperatorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamValueAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getStreamValueAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamStatement__Group__0__Impl
	rule__StreamStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamStatementAccess().getEAssignment_0()); }
	(rule__StreamStatement__EAssignment_0)
	{ after(grammarAccess.getStreamStatementAccess().getEAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStreamStatementAccess().getSAssignment_1()); }
		(rule__StreamStatement__SAssignment_1)
		{ after(grammarAccess.getStreamStatementAccess().getSAssignment_1()); }
	)
	(
		{ before(grammarAccess.getStreamStatementAccess().getSAssignment_1()); }
		(rule__StreamStatement__SAssignment_1)*
		{ after(grammarAccess.getStreamStatementAccess().getSAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group__0__Impl
	rule__CallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getPAssignment_0()); }
	(rule__CallStatement__PAssignment_0)
	{ after(grammarAccess.getCallStatementAccess().getPAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1()); }
		(rule__CallStatement__Group_1__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup_1()); }
		(rule__CallStatement__Group_1__0)*
		{ after(grammarAccess.getCallStatementAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__0__Impl
	rule__CallStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getAlternatives_1_0()); }
	(rule__CallStatement__Alternatives_1_0)*
	{ after(grammarAccess.getCallStatementAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__1__Impl
	rule__CallStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getLPARENTerminalRuleCall_1_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getCallStatementAccess().getLPARENTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__2__Impl
	rule__CallStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getAAssignment_1_2()); }
	(rule__CallStatement__AAssignment_1_2)
	{ after(grammarAccess.getCallStatementAccess().getAAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getRPARENTerminalRuleCall_1_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getCallStatementAccess().getRPARENTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_0__0__Impl
	rule__CallStatement__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getDOTTerminalRuleCall_1_0_0_0()); }
	RULE_DOT
	{ after(grammarAccess.getCallStatementAccess().getDOTTerminalRuleCall_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_0_1()); }
	ruleidentifier
	{ after(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_1__0__Impl
	rule__CallStatement__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getTERMINATOR_SCOPETerminalRuleCall_1_0_1_0()); }
	RULE_TERMINATOR_SCOPE
	{ after(grammarAccess.getCallStatementAccess().getTERMINATOR_SCOPETerminalRuleCall_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_1_1()); }
	ruleidentifier
	{ after(grammarAccess.getCallStatementAccess().getIdentifierParserRuleCall_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_2__0__Impl
	rule__CallStatement__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getLBRACKETTerminalRuleCall_1_0_2_0()); }
	RULE_LBRACKET
	{ after(grammarAccess.getCallStatementAccess().getLBRACKETTerminalRuleCall_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_2__1__Impl
	rule__CallStatement__Group_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getEAssignment_1_0_2_1()); }
	(rule__CallStatement__EAssignment_1_0_2_1)
	{ after(grammarAccess.getCallStatementAccess().getEAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getRBRACKETTerminalRuleCall_1_0_2_2()); }
	RULE_RBRACKET
	{ after(grammarAccess.getCallStatementAccess().getRBRACKETTerminalRuleCall_1_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_3__0__Impl
	rule__CallStatement__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getPRIMETerminalRuleCall_1_0_3_0()); }
	RULE_PRIME
	{ after(grammarAccess.getCallStatementAccess().getPRIMETerminalRuleCall_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getCAssignment_1_0_3_1()); }
	(rule__CallStatement__CAssignment_1_0_3_1)
	{ after(grammarAccess.getCallStatementAccess().getCAssignment_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__0__Impl
	rule__ExitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
	()
	{ after(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__1__Impl
	rule__ExitStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getEXITTerminalRuleCall_1()); }
	RULE_EXIT
	{ after(grammarAccess.getExitStatementAccess().getEXITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getGroup_2()); }
	(rule__ExitStatement__Group_2__0)?
	{ after(grammarAccess.getExitStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group_2__0__Impl
	rule__ExitStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getWHENTerminalRuleCall_2_0()); }
	RULE_WHEN
	{ after(grammarAccess.getExitStatementAccess().getWHENTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getCAssignment_2_1()); }
	(rule__ExitStatement__CAssignment_2_1)
	{ after(grammarAccess.getExitStatementAccess().getCAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0()); }
	RULE_RETURN
	{ after(grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getReturnStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelayStatement__Group__0__Impl
	rule__DelayStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayStatementAccess().getDELAYTerminalRuleCall_0()); }
	RULE_DELAY
	{ after(grammarAccess.getDelayStatementAccess().getDELAYTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelayStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getDelayStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group__0__Impl
	rule__RaiseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getRAISETerminalRuleCall_0()); }
	RULE_RAISE
	{ after(grammarAccess.getRaiseStatementAccess().getRAISETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getQualifiedExceptionNameParserRuleCall_1()); }
	rulequalifiedExceptionName
	{ after(grammarAccess.getRaiseStatementAccess().getQualifiedExceptionNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getDELETETerminalRuleCall_0()); }
	RULE_DELETE
	{ after(grammarAccess.getDeleteStatementAccess().getDELETETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getDeleteStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EraseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EraseStatement__Group__0__Impl
	rule__EraseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEraseStatementAccess().getERASETerminalRuleCall_0()); }
	RULE_ERASE
	{ after(grammarAccess.getEraseStatementAccess().getERASETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EraseStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEraseStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getEraseStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group__0__Impl
	rule__LinkStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getLinkTypeParserRuleCall_0()); }
	rulelinkType
	{ after(grammarAccess.getLinkStatementAccess().getLinkTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group__1__Impl
	rule__LinkStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getN1Assignment_1()); }
	(rule__LinkStatement__N1Assignment_1)
	{ after(grammarAccess.getLinkStatementAccess().getN1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group__2__Impl
	rule__LinkStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getRAssignment_2()); }
	(rule__LinkStatement__RAssignment_2)
	{ after(grammarAccess.getLinkStatementAccess().getRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getGroup_3()); }
	(rule__LinkStatement__Group_3__0)?
	{ after(grammarAccess.getLinkStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group_3__0__Impl
	rule__LinkStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getN2Assignment_3_0()); }
	(rule__LinkStatement__N2Assignment_3_0)
	{ after(grammarAccess.getLinkStatementAccess().getN2Assignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getGroup_3_1()); }
	(rule__LinkStatement__Group_3_1__0)?
	{ after(grammarAccess.getLinkStatementAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkStatement__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group_3_1__0__Impl
	rule__LinkStatement__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getUSINGTerminalRuleCall_3_1_0()); }
	RULE_USING
	{ after(grammarAccess.getLinkStatementAccess().getUSINGTerminalRuleCall_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkStatement__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStatementAccess().getN3Assignment_3_1_1()); }
	(rule__LinkStatement__N3Assignment_3_1_1)
	{ after(grammarAccess.getLinkStatementAccess().getN3Assignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__0__Impl
	rule__ScheduleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getSCHEDULETerminalRuleCall_0()); }
	RULE_SCHEDULE
	{ after(grammarAccess.getScheduleStatementAccess().getSCHEDULETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__1__Impl
	rule__ScheduleStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getScheduleStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__2__Impl
	rule__ScheduleStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getGAssignment_2()); }
	(rule__ScheduleStatement__GAssignment_2)
	{ after(grammarAccess.getScheduleStatementAccess().getGAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__3__Impl
	rule__ScheduleStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getScheduleTypeParserRuleCall_3()); }
	rulescheduleType
	{ after(grammarAccess.getScheduleStatementAccess().getScheduleTypeParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__4__Impl
	rule__ScheduleStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getEAssignment_4()); }
	(rule__ScheduleStatement__EAssignment_4)
	{ after(grammarAccess.getScheduleStatementAccess().getEAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getGroup_5()); }
	(rule__ScheduleStatement__Group_5__0)?
	{ after(grammarAccess.getScheduleStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group_5__0__Impl
	rule__ScheduleStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getDELTATerminalRuleCall_5_0()); }
	RULE_DELTA
	{ after(grammarAccess.getScheduleStatementAccess().getDELTATerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getEAssignment_5_1()); }
	(rule__ScheduleStatement__EAssignment_5_1)
	{ after(grammarAccess.getScheduleStatementAccess().getEAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CancelTimerStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CancelTimerStatement__Group__0__Impl
	rule__CancelTimerStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelTimerStatementAccess().getCANCELTerminalRuleCall_0()); }
	RULE_CANCEL
	{ after(grammarAccess.getCancelTimerStatementAccess().getCANCELTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CancelTimerStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelTimerStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getCancelTimerStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__0__Impl
	rule__GenerateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGENERATETerminalRuleCall_0()); }
	RULE_GENERATE
	{ after(grammarAccess.getGenerateStatementAccess().getGENERATETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__1__Impl
	rule__GenerateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getQualifiedEventNameParserRuleCall_1()); }
	rulequalifiedEventName
	{ after(grammarAccess.getGenerateStatementAccess().getQualifiedEventNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__2__Impl
	rule__GenerateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getLPARENTerminalRuleCall_2()); }
	RULE_LPAREN
	{ after(grammarAccess.getGenerateStatementAccess().getLPARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__3__Impl
	rule__GenerateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getArgumentListParserRuleCall_3()); }
	ruleargumentList
	{ after(grammarAccess.getGenerateStatementAccess().getArgumentListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__4__Impl
	rule__GenerateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getRPARENTerminalRuleCall_4()); }
	RULE_RPAREN
	{ after(grammarAccess.getGenerateStatementAccess().getRPARENTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGroup_5()); }
	(rule__GenerateStatement__Group_5__0)?
	{ after(grammarAccess.getGenerateStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_5__0__Impl
	rule__GenerateStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getTOTerminalRuleCall_5_0()); }
	RULE_TO
	{ after(grammarAccess.getGenerateStatementAccess().getTOTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getEAssignment_5_1()); }
	(rule__GenerateStatement__EAssignment_5_1)
	{ after(grammarAccess.getGenerateStatementAccess().getEAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedEventName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedEventName__Group__0__Impl
	rule__QualifiedEventName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedEventNameAccess().getGroup_0()); }
	(rule__QualifiedEventName__Group_0__0)?
	{ after(grammarAccess.getQualifiedEventNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedEventName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedEventNameAccess().getEventNameParserRuleCall_1()); }
	ruleeventName
	{ after(grammarAccess.getQualifiedEventNameAccess().getEventNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedEventName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedEventName__Group_0__0__Impl
	rule__QualifiedEventName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedEventNameAccess().getQualifiedObjectNameParserRuleCall_0_0()); }
	rulequalifiedObjectName
	{ after(grammarAccess.getQualifiedEventNameAccess().getQualifiedObjectNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedEventName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedEventName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedEventNameAccess().getDOTTerminalRuleCall_0_1()); }
	RULE_DOT
	{ after(grammarAccess.getQualifiedEventNameAccess().getDOTTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0()); }
	RULE_IF
	{ after(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getCAssignment_1()); }
	(rule__IfStatement__CAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTHENTerminalRuleCall_2()); }
	RULE_THEN
	{ after(grammarAccess.getIfStatementAccess().getTHENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getSAssignment_3()); }
	(rule__IfStatement__SAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getE1Assignment_4()); }
	(rule__IfStatement__E1Assignment_4)*
	{ after(grammarAccess.getIfStatementAccess().getE1Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getE2Assignment_5()); }
	(rule__IfStatement__E2Assignment_5)?
	{ after(grammarAccess.getIfStatementAccess().getE2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
	rule__IfStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getIfStatementAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_7()); }
	(RULE_IF)?
	{ after(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsifBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__0__Impl
	rule__ElsifBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getELSIFTerminalRuleCall_0()); }
	RULE_ELSIF
	{ after(grammarAccess.getElsifBlockAccess().getELSIFTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__1__Impl
	rule__ElsifBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getCAssignment_1()); }
	(rule__ElsifBlock__CAssignment_1)
	{ after(grammarAccess.getElsifBlockAccess().getCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__2__Impl
	rule__ElsifBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getTHENTerminalRuleCall_2()); }
	RULE_THEN
	{ after(grammarAccess.getElsifBlockAccess().getTHENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getSAssignment_3()); }
	(rule__ElsifBlock__SAssignment_3)
	{ after(grammarAccess.getElsifBlockAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseBlock__Group__0__Impl
	rule__ElseBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseBlockAccess().getELSETerminalRuleCall_0()); }
	RULE_ELSE
	{ after(grammarAccess.getElseBlockAccess().getELSETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseBlockAccess().getStatementListParserRuleCall_1()); }
	rulestatementList
	{ after(grammarAccess.getElseBlockAccess().getStatementListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0()); }
	RULE_WHILE
	{ after(grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCAssignment_1()); }
	(rule__WhileStatement__CAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_2()); }
	RULE_LOOP
	{ after(grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getSAssignment_3()); }
	(rule__WhileStatement__SAssignment_3)
	{ after(grammarAccess.getWhileStatementAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getWhileStatementAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_5()); }
	(RULE_LOOP)?
	{ after(grammarAccess.getWhileStatementAccess().getLOOPTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_0()); }
	RULE_CASE
	{ after(grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getCaseStatementAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__2__Impl
	rule__CaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getISTerminalRuleCall_2()); }
	RULE_IS
	{ after(grammarAccess.getCaseStatementAccess().getISTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__3__Impl
	rule__CaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getC1Assignment_3()); }
	(rule__CaseStatement__C1Assignment_3)*
	{ after(grammarAccess.getCaseStatementAccess().getC1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__4__Impl
	rule__CaseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getC2Assignment_4()); }
	(rule__CaseStatement__C2Assignment_4)?
	{ after(grammarAccess.getCaseStatementAccess().getC2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__5__Impl
	rule__CaseStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getCaseStatementAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_6()); }
	(RULE_CASE)?
	{ after(grammarAccess.getCaseStatementAccess().getCASETerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__0__Impl
	rule__CaseAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getWHENTerminalRuleCall_0()); }
	RULE_WHEN
	{ after(grammarAccess.getCaseAlternativeAccess().getWHENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__1__Impl
	rule__CaseAlternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getChoiceListParserRuleCall_1()); }
	rulechoiceList
	{ after(grammarAccess.getCaseAlternativeAccess().getChoiceListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__2__Impl
	rule__CaseAlternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getGOES_TOTerminalRuleCall_2()); }
	RULE_GOES_TO
	{ after(grammarAccess.getCaseAlternativeAccess().getGOES_TOTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getSAssignment_3()); }
	(rule__CaseAlternative__SAssignment_3)
	{ after(grammarAccess.getCaseAlternativeAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChoiceList__Group__0__Impl
	rule__ChoiceList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceListAccess().getEAssignment_0()); }
	(rule__ChoiceList__EAssignment_0)
	{ after(grammarAccess.getChoiceListAccess().getEAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChoiceList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceListAccess().getGroup_1()); }
	(rule__ChoiceList__Group_1__0)*
	{ after(grammarAccess.getChoiceListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChoiceList__Group_1__0__Impl
	rule__ChoiceList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceListAccess().getCASE_ORTerminalRuleCall_1_0()); }
	RULE_CASE_OR
	{ after(grammarAccess.getChoiceListAccess().getCASE_ORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChoiceList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceListAccess().getEAssignment_1_1()); }
	(rule__ChoiceList__EAssignment_1_1)
	{ after(grammarAccess.getChoiceListAccess().getEAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseOthers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__0__Impl
	rule__CaseOthers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getWHENTerminalRuleCall_0()); }
	RULE_WHEN
	{ after(grammarAccess.getCaseOthersAccess().getWHENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__1__Impl
	rule__CaseOthers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getOTHERSTerminalRuleCall_1()); }
	RULE_OTHERS
	{ after(grammarAccess.getCaseOthersAccess().getOTHERSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__2__Impl
	rule__CaseOthers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getGOES_TOTerminalRuleCall_2()); }
	RULE_GOES_TO
	{ after(grammarAccess.getCaseOthersAccess().getGOES_TOTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getStatementListParserRuleCall_3()); }
	rulestatementList
	{ after(grammarAccess.getCaseOthersAccess().getStatementListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0()); }
	RULE_FOR
	{ after(grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopVariableSpecParserRuleCall_1()); }
	ruleloopVariableSpec
	{ after(grammarAccess.getForStatementAccess().getLoopVariableSpecParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_2()); }
	RULE_LOOP
	{ after(grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSAssignment_3()); }
	(rule__ForStatement__SAssignment_3)
	{ after(grammarAccess.getForStatementAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getForStatementAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_5()); }
	(RULE_LOOP)?
	{ after(grammarAccess.getForStatementAccess().getLOOPTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariableSpec__Group__0__Impl
	rule__LoopVariableSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableSpecAccess().getIdentifierParserRuleCall_0()); }
	ruleidentifier
	{ after(grammarAccess.getLoopVariableSpecAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariableSpec__Group__1__Impl
	rule__LoopVariableSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableSpecAccess().getINTerminalRuleCall_1()); }
	RULE_IN
	{ after(grammarAccess.getLoopVariableSpecAccess().getINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariableSpec__Group__2__Impl
	rule__LoopVariableSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableSpecAccess().getREVERSETerminalRuleCall_2()); }
	(RULE_REVERSE)?
	{ after(grammarAccess.getLoopVariableSpecAccess().getREVERSETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariableSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableSpecAccess().getExpressionParserRuleCall_3()); }
	ruleexpression
	{ after(grammarAccess.getLoopVariableSpecAccess().getExpressionParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlockStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__0__Impl
	rule__CodeBlockStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getGroup_0()); }
	(rule__CodeBlockStatement__Group_0__0)?
	{ after(grammarAccess.getCodeBlockStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__1__Impl
	rule__CodeBlockStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getCodeBlockStatementAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__2__Impl
	rule__CodeBlockStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getSAssignment_2()); }
	(rule__CodeBlockStatement__SAssignment_2)
	{ after(grammarAccess.getCodeBlockStatementAccess().getSAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__3__Impl
	rule__CodeBlockStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getGroup_3()); }
	(rule__CodeBlockStatement__Group_3__0)?
	{ after(grammarAccess.getCodeBlockStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getCodeBlockStatementAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlockStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group_0__0__Impl
	rule__CodeBlockStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getDECLARETerminalRuleCall_0_0()); }
	RULE_DECLARE
	{ after(grammarAccess.getCodeBlockStatementAccess().getDECLARETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getVAssignment_0_1()); }
	(rule__CodeBlockStatement__VAssignment_0_1)*
	{ after(grammarAccess.getCodeBlockStatementAccess().getVAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlockStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group_3__0__Impl
	rule__CodeBlockStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getEXCEPTIONTerminalRuleCall_3_0()); }
	RULE_EXCEPTION
	{ after(grammarAccess.getCodeBlockStatementAccess().getEXCEPTIONTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group_3__1__Impl
	rule__CodeBlockStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getEAssignment_3_1()); }
	(rule__CodeBlockStatement__EAssignment_3_1)*
	{ after(grammarAccess.getCodeBlockStatementAccess().getEAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getPAssignment_3_2()); }
	(rule__CodeBlockStatement__PAssignment_3_2)?
	{ after(grammarAccess.getCodeBlockStatementAccess().getPAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__0__Impl
	rule__CodeBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getVAssignment_0()); }
	(rule__CodeBlock__VAssignment_0)*
	{ after(grammarAccess.getCodeBlockAccess().getVAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__1__Impl
	rule__CodeBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getCodeBlockAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__2__Impl
	rule__CodeBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getSAssignment_2()); }
	(rule__CodeBlock__SAssignment_2)
	{ after(grammarAccess.getCodeBlockAccess().getSAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__3__Impl
	rule__CodeBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getGroup_3()); }
	(rule__CodeBlock__Group_3__0)?
	{ after(grammarAccess.getCodeBlockAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getCodeBlockAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_3__0__Impl
	rule__CodeBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getEXCEPTIONTerminalRuleCall_3_0()); }
	RULE_EXCEPTION
	{ after(grammarAccess.getCodeBlockAccess().getEXCEPTIONTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_3__1__Impl
	rule__CodeBlock__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getEAssignment_3_1()); }
	(rule__CodeBlock__EAssignment_3_1)*
	{ after(grammarAccess.getCodeBlockAccess().getEAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getOAssignment_3_2()); }
	(rule__CodeBlock__OAssignment_3_2)?
	{ after(grammarAccess.getCodeBlockAccess().getOAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableNameParserRuleCall_0()); }
	rulevariableName
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCOLONTerminalRuleCall_1()); }
	RULE_COLON
	{ after(grammarAccess.getVariableDeclarationAccess().getCOLONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getREADONLYTerminalRuleCall_2()); }
	(RULE_READONLY)?
	{ after(grammarAccess.getVariableDeclarationAccess().getREADONLYTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTAssignment_3()); }
	(rule__VariableDeclaration__TAssignment_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getTAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
	rule__VariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
	(rule__VariableDeclaration__Group_4__0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__5__Impl
	rule__VariableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getSEMITerminalRuleCall_5()); }
	RULE_SEMI
	{ after(grammarAccess.getVariableDeclarationAccess().getSEMITerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getPragmaListParserRuleCall_6()); }
	rulepragmaList
	{ after(grammarAccess.getVariableDeclarationAccess().getPragmaListParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__0__Impl
	rule__VariableDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getASSIGNTerminalRuleCall_4_0()); }
	RULE_ASSIGN
	{ after(grammarAccess.getVariableDeclarationAccess().getASSIGNTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEAssignment_4_1()); }
	(rule__VariableDeclaration__EAssignment_4_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getEAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionHandler__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__0__Impl
	rule__ExceptionHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getWHENTerminalRuleCall_0()); }
	RULE_WHEN
	{ after(grammarAccess.getExceptionHandlerAccess().getWHENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__1__Impl
	rule__ExceptionHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getQualifiedExceptionNameParserRuleCall_1()); }
	rulequalifiedExceptionName
	{ after(grammarAccess.getExceptionHandlerAccess().getQualifiedExceptionNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__2__Impl
	rule__ExceptionHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getGOES_TOTerminalRuleCall_2()); }
	RULE_GOES_TO
	{ after(grammarAccess.getExceptionHandlerAccess().getGOES_TOTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getStatementListParserRuleCall_3()); }
	rulestatementList
	{ after(grammarAccess.getExceptionHandlerAccess().getStatementListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OtherHandler__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherHandler__Group__0__Impl
	rule__OtherHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherHandlerAccess().getWHENTerminalRuleCall_0()); }
	RULE_WHEN
	{ after(grammarAccess.getOtherHandlerAccess().getWHENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherHandler__Group__1__Impl
	rule__OtherHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherHandlerAccess().getOTHERSTerminalRuleCall_1()); }
	RULE_OTHERS
	{ after(grammarAccess.getOtherHandlerAccess().getOTHERSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherHandler__Group__2__Impl
	rule__OtherHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherHandlerAccess().getGOES_TOTerminalRuleCall_2()); }
	RULE_GOES_TO
	{ after(grammarAccess.getOtherHandlerAccess().getGOES_TOTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherHandler__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherHandler__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherHandlerAccess().getStatementListParserRuleCall_3()); }
	rulestatementList
	{ after(grammarAccess.getOtherHandlerAccess().getStatementListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedExceptionName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedExceptionName__Group__0__Impl
	rule__QualifiedExceptionName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedExceptionNameAccess().getGroup_0()); }
	(rule__QualifiedExceptionName__Group_0__0)?
	{ after(grammarAccess.getQualifiedExceptionNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedExceptionName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedExceptionNameAccess().getExceptionNameParserRuleCall_1()); }
	ruleexceptionName
	{ after(grammarAccess.getQualifiedExceptionNameAccess().getExceptionNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedExceptionName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedExceptionName__Group_0__0__Impl
	rule__QualifiedExceptionName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedExceptionNameAccess().getDomainNameParserRuleCall_0_0()); }
	ruledomainName
	{ after(grammarAccess.getQualifiedExceptionNameAccess().getDomainNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedExceptionName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedExceptionName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedExceptionNameAccess().getSCOPETerminalRuleCall_0_1()); }
	RULE_SCOPE
	{ after(grammarAccess.getQualifiedExceptionNameAccess().getSCOPETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group__0__Impl
	rule__FindLogicalOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getFAssignment_0()); }
	(rule__FindLogicalOr__FAssignment_0)
	{ after(grammarAccess.getFindLogicalOrAccess().getFAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getGroup_1()); }
	(rule__FindLogicalOr__Group_1__0)*
	{ after(grammarAccess.getFindLogicalOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group_1__0__Impl
	rule__FindLogicalOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getORTerminalRuleCall_1_0()); }
	RULE_OR
	{ after(grammarAccess.getFindLogicalOrAccess().getORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getFAssignment_1_1()); }
	(rule__FindLogicalOr__FAssignment_1_1)
	{ after(grammarAccess.getFindLogicalOrAccess().getFAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalXor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group__0__Impl
	rule__FindLogicalXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getFAssignment_0()); }
	(rule__FindLogicalXor__FAssignment_0)
	{ after(grammarAccess.getFindLogicalXorAccess().getFAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getGroup_1()); }
	(rule__FindLogicalXor__Group_1__0)*
	{ after(grammarAccess.getFindLogicalXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalXor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group_1__0__Impl
	rule__FindLogicalXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getXORTerminalRuleCall_1_0()); }
	RULE_XOR
	{ after(grammarAccess.getFindLogicalXorAccess().getXORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getFAssignment_1_1()); }
	(rule__FindLogicalXor__FAssignment_1_1)
	{ after(grammarAccess.getFindLogicalXorAccess().getFAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group__0__Impl
	rule__FindLogicalAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getFAssignment_0()); }
	(rule__FindLogicalAnd__FAssignment_0)
	{ after(grammarAccess.getFindLogicalAndAccess().getFAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getGroup_1()); }
	(rule__FindLogicalAnd__Group_1__0)*
	{ after(grammarAccess.getFindLogicalAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group_1__0__Impl
	rule__FindLogicalAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getANDTerminalRuleCall_1_0()); }
	RULE_AND
	{ after(grammarAccess.getFindLogicalAndAccess().getANDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getFAssignment_1_1()); }
	(rule__FindLogicalAnd__FAssignment_1_1)
	{ after(grammarAccess.getFindLogicalAndAccess().getFAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindUnary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_0__0__Impl
	rule__FindUnary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getNOTTerminalRuleCall_0_0()); }
	RULE_NOT
	{ after(grammarAccess.getFindUnaryAccess().getNOTTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getFindUnaryParserRuleCall_0_1()); }
	rulefindUnary
	{ after(grammarAccess.getFindUnaryAccess().getFindUnaryParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindUnary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__0__Impl
	rule__FindUnary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getFindUnaryAccess().getLPARENTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__1__Impl
	rule__FindUnary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getFindConditionParserRuleCall_1_1()); }
	rulefindCondition
	{ after(grammarAccess.getFindUnaryAccess().getFindConditionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getRPARENTerminalRuleCall_1_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getFindUnaryAccess().getRPARENTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindComparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindComparison__Group__0__Impl
	rule__FindComparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindComparisonAccess().getFAssignment_0()); }
	(rule__FindComparison__FAssignment_0)
	{ after(grammarAccess.getFindComparisonAccess().getFAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindComparison__Group__1__Impl
	rule__FindComparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindComparisonAccess().getAlternatives_1()); }
	(rule__FindComparison__Alternatives_1)
	{ after(grammarAccess.getFindComparisonAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindComparison__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindComparisonAccess().getAAssignment_2()); }
	(rule__FindComparison__AAssignment_2)
	{ after(grammarAccess.getFindComparisonAccess().getAAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group__0__Impl
	rule__FindName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getI1Assignment_0()); }
	(rule__FindName__I1Assignment_0)
	{ after(grammarAccess.getFindNameAccess().getI1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getAlternatives_1()); }
	(rule__FindName__Alternatives_1)*
	{ after(grammarAccess.getFindNameAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_0__0__Impl
	rule__FindName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getDOTTerminalRuleCall_1_0_0()); }
	RULE_DOT
	{ after(grammarAccess.getFindNameAccess().getDOTTerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getI2Assignment_1_0_1()); }
	(rule__FindName__I2Assignment_1_0_1)
	{ after(grammarAccess.getFindNameAccess().getI2Assignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__0__Impl
	rule__FindName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getLBRACKETTerminalRuleCall_1_1_0()); }
	RULE_LBRACKET
	{ after(grammarAccess.getFindNameAccess().getLBRACKETTerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__1__Impl
	rule__FindName__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getEAssignment_1_1_1()); }
	(rule__FindName__EAssignment_1_1_1)
	{ after(grammarAccess.getFindNameAccess().getEAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getRBRACKETTerminalRuleCall_1_1_2()); }
	RULE_RBRACKET
	{ after(grammarAccess.getFindNameAccess().getRBRACKETTerminalRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__0__Impl
	rule__RangeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getLAssignment_0()); }
	(rule__RangeExpression__LAssignment_0)
	{ after(grammarAccess.getRangeExpressionAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
	(rule__RangeExpression__Group_1__0)?
	{ after(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__0__Impl
	rule__RangeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRANGE_DOTSTerminalRuleCall_1_0()); }
	RULE_RANGE_DOTS
	{ after(grammarAccess.getRangeExpressionAccess().getRANGE_DOTSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getLAssignment_1_1()); }
	(rule__RangeExpression__LAssignment_1_1)
	{ after(grammarAccess.getRangeExpressionAccess().getLAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group__0__Impl
	rule__LogicalOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getLAssignment_0()); }
	(rule__LogicalOr__LAssignment_0)
	{ after(grammarAccess.getLogicalOrAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getGroup_1()); }
	(rule__LogicalOr__Group_1__0)*
	{ after(grammarAccess.getLogicalOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group_1__0__Impl
	rule__LogicalOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getORTerminalRuleCall_1_0()); }
	RULE_OR
	{ after(grammarAccess.getLogicalOrAccess().getORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getLAssignment_1_1()); }
	(rule__LogicalOr__LAssignment_1_1)
	{ after(grammarAccess.getLogicalOrAccess().getLAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalXor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group__0__Impl
	rule__LogicalXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getLAssignment_0()); }
	(rule__LogicalXor__LAssignment_0)
	{ after(grammarAccess.getLogicalXorAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getGroup_1()); }
	(rule__LogicalXor__Group_1__0)*
	{ after(grammarAccess.getLogicalXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalXor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group_1__0__Impl
	rule__LogicalXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getXORTerminalRuleCall_1_0()); }
	RULE_XOR
	{ after(grammarAccess.getLogicalXorAccess().getXORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getLAssignment_1_1()); }
	(rule__LogicalXor__LAssignment_1_1)
	{ after(grammarAccess.getLogicalXorAccess().getLAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group__0__Impl
	rule__LogicalAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getEAssignment_0()); }
	(rule__LogicalAnd__EAssignment_0)
	{ after(grammarAccess.getLogicalAndAccess().getEAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getGroup_1()); }
	(rule__LogicalAnd__Group_1__0)*
	{ after(grammarAccess.getLogicalAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group_1__0__Impl
	rule__LogicalAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getANDTerminalRuleCall_1_0()); }
	RULE_AND
	{ after(grammarAccess.getLogicalAndAccess().getANDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getEAssignment_1_1()); }
	(rule__LogicalAnd__EAssignment_1_1)
	{ after(grammarAccess.getLogicalAndAccess().getEAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRAssignment_0()); }
	(rule__Equality__RAssignment_0)
	{ after(grammarAccess.getEqualityAccess().getRAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
	(rule__Equality__Alternatives_1_0)
	{ after(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRAssignment_1_1()); }
	(rule__Equality__RAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getRAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group__0__Impl
	rule__RelationalExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getAAssignment_0()); }
	(rule__RelationalExp__AAssignment_0)
	{ after(grammarAccess.getRelationalExpAccess().getAAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getGroup_1()); }
	(rule__RelationalExp__Group_1__0)*
	{ after(grammarAccess.getRelationalExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group_1__0__Impl
	rule__RelationalExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getAlternatives_1_0()); }
	(rule__RelationalExp__Alternatives_1_0)
	{ after(grammarAccess.getRelationalExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getAAssignment_1_1()); }
	(rule__RelationalExp__AAssignment_1_1)
	{ after(grammarAccess.getRelationalExpAccess().getAAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group__0__Impl
	rule__AdditiveExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getMAssignment_0()); }
	(rule__AdditiveExp__MAssignment_0)
	{ after(grammarAccess.getAdditiveExpAccess().getMAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getGroup_1()); }
	(rule__AdditiveExp__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group_1__0__Impl
	rule__AdditiveExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getAlternatives_1_0()); }
	(rule__AdditiveExp__Alternatives_1_0)
	{ after(grammarAccess.getAdditiveExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getMAssignment_1_1()); }
	(rule__AdditiveExp__MAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpAccess().getMAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group__0__Impl
	rule__MultExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getUAssignment_0()); }
	(rule__MultExp__UAssignment_0)
	{ after(grammarAccess.getMultExpAccess().getUAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getGroup_1()); }
	(rule__MultExp__Group_1__0)*
	{ after(grammarAccess.getMultExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group_1__0__Impl
	rule__MultExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getAlternatives_1_0()); }
	(rule__MultExp__Alternatives_1_0)
	{ after(grammarAccess.getMultExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getUAssignment_1_1()); }
	(rule__MultExp__UAssignment_1_1)
	{ after(grammarAccess.getMultExpAccess().getUAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExp__Group_0__0__Impl
	rule__UnaryExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpAccess().getUnaryOperatorParserRuleCall_0_0()); }
	ruleunaryOperator
	{ after(grammarAccess.getUnaryExpAccess().getUnaryOperatorParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpAccess().getUnaryExpParserRuleCall_0_1()); }
	ruleunaryExp
	{ after(grammarAccess.getUnaryExpAccess().getUnaryExpParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__0__Impl
	rule__LinkExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLinkTypeParserRuleCall_1_0()); }
	rulelinkType
	{ after(grammarAccess.getLinkExpressionAccess().getLinkTypeParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__1__Impl
	rule__LinkExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getN2Assignment_1_1()); }
	(rule__LinkExpression__N2Assignment_1_1)
	{ after(grammarAccess.getLinkExpressionAccess().getN2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__2__Impl
	rule__LinkExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRAssignment_1_2()); }
	(rule__LinkExpression__RAssignment_1_2)
	{ after(grammarAccess.getLinkExpressionAccess().getRAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getN3Assignment_1_3()); }
	(rule__LinkExpression__N3Assignment_1_3)?
	{ after(grammarAccess.getLinkExpressionAccess().getN3Assignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group__0__Impl
	rule__NavigateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getEAssignment_0()); }
	(rule__NavigateExpression__EAssignment_0)
	{ after(grammarAccess.getNavigateExpressionAccess().getEAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getAlternatives_1()); }
	(rule__NavigateExpression__Alternatives_1)*
	{ after(grammarAccess.getNavigateExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_0__0__Impl
	rule__NavigateExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_0_0()); }
	RULE_NAVIGATE
	{ after(grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_0__1__Impl
	rule__NavigateExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_0_1()); }
	(rule__NavigateExpression__RAssignment_1_0_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getWAssignment_1_0_2()); }
	(rule__NavigateExpression__WAssignment_1_0_2)?
	{ after(grammarAccess.getNavigateExpressionAccess().getWAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1__0__Impl
	rule__NavigateExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getWITHTerminalRuleCall_1_1_0()); }
	RULE_WITH
	{ after(grammarAccess.getNavigateExpressionAccess().getWITHTerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1__1__Impl
	rule__NavigateExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getEAssignment_1_1_1()); }
	(rule__NavigateExpression__EAssignment_1_1_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getEAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1__2__Impl
	rule__NavigateExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_1_2()); }
	RULE_NAVIGATE
	{ after(grammarAccess.getNavigateExpressionAccess().getNAVIGATETerminalRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_1_3()); }
	(rule__NavigateExpression__RAssignment_1_1_3)
	{ after(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_2__0__Impl
	rule__NavigateExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getORDERED_BYTerminalRuleCall_1_2_0()); }
	RULE_ORDERED_BY
	{ after(grammarAccess.getNavigateExpressionAccess().getORDERED_BYTerminalRuleCall_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_2_1()); }
	rulesortOrder
	{ after(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_3__0__Impl
	rule__NavigateExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getREVERSE_ORDERED_BYTerminalRuleCall_1_3_0()); }
	RULE_REVERSE_ORDERED_BY
	{ after(grammarAccess.getNavigateExpressionAccess().getREVERSE_ORDERED_BYTerminalRuleCall_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_3_1()); }
	rulesortOrder
	{ after(grammarAccess.getNavigateExpressionAccess().getSortOrderParserRuleCall_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__0__Impl
	rule__SortOrder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getLPARENTerminalRuleCall_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getSortOrderAccess().getLPARENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__1__Impl
	rule__SortOrder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getGroup_1()); }
	(rule__SortOrder__Group_1__0)?
	{ after(grammarAccess.getSortOrderAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getRPARENTerminalRuleCall_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getSortOrderAccess().getRPARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_1__0__Impl
	rule__SortOrder__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_0()); }
	rulesortOrderComponent
	{ after(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getGroup_1_1()); }
	(rule__SortOrder__Group_1_1__0)*
	{ after(grammarAccess.getSortOrderAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_1_1__0__Impl
	rule__SortOrder__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getCOMMATerminalRuleCall_1_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getSortOrderAccess().getCOMMATerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_1_1()); }
	rulesortOrderComponent
	{ after(grammarAccess.getSortOrderAccess().getSortOrderComponentParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrderComponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderComponent__Group__0__Impl
	rule__SortOrderComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderComponentAccess().getREVERSETerminalRuleCall_0()); }
	(RULE_REVERSE)?
	{ after(grammarAccess.getSortOrderComponentAccess().getREVERSETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderComponent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderComponentAccess().getIdentifierParserRuleCall_1()); }
	ruleidentifier
	{ after(grammarAccess.getSortOrderComponentAccess().getIdentifierParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__0__Impl
	rule__CreateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getCREATETerminalRuleCall_0()); }
	RULE_CREATE
	{ after(grammarAccess.getCreateExpressionAccess().getCREATETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__1__Impl
	rule__CreateExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getUNIQUETerminalRuleCall_1()); }
	(RULE_UNIQUE)?
	{ after(grammarAccess.getCreateExpressionAccess().getUNIQUETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__2__Impl
	rule__CreateExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getObjectNameParserRuleCall_2()); }
	ruleobjectName
	{ after(grammarAccess.getCreateExpressionAccess().getObjectNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getCreateArgumentListParserRuleCall_3()); }
	rulecreateArgumentList
	{ after(grammarAccess.getCreateExpressionAccess().getCreateArgumentListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group__0__Impl
	rule__CreateArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getCreateArgumentListAction_0()); }
	()
	{ after(grammarAccess.getCreateArgumentListAccess().getCreateArgumentListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group__1__Impl
	rule__CreateArgumentList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getCreateArgumentListAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group__2__Impl
	rule__CreateArgumentList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getGroup_2()); }
	(rule__CreateArgumentList__Group_2__0)?
	{ after(grammarAccess.getCreateArgumentListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getCreateArgumentListAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgumentList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group_2__0__Impl
	rule__CreateArgumentList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_0()); }
	(rule__CreateArgumentList__CAssignment_2_0)
	{ after(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getGroup_2_1()); }
	(rule__CreateArgumentList__Group_2_1__0)*
	{ after(grammarAccess.getCreateArgumentListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgumentList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group_2_1__0__Impl
	rule__CreateArgumentList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getCOMMATerminalRuleCall_2_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getCreateArgumentListAccess().getCOMMATerminalRuleCall_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgumentList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_1_1()); }
	(rule__CreateArgumentList__CAssignment_2_1_1)
	{ after(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgument__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__0__Impl
	rule__CreateArgument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getAAssignment_0_0()); }
	(rule__CreateArgument__AAssignment_0_0)
	{ after(grammarAccess.getCreateArgumentAccess().getAAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__1__Impl
	rule__CreateArgument__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_0_1()); }
	RULE_GOES_TO
	{ after(grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getEAssignment_0_2()); }
	(rule__CreateArgument__EAssignment_0_2)
	{ after(grammarAccess.getCreateArgumentAccess().getEAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgument__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__0__Impl
	rule__CreateArgument__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getCURRENT_STATETerminalRuleCall_1_0()); }
	RULE_CURRENT_STATE
	{ after(grammarAccess.getCreateArgumentAccess().getCURRENT_STATETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__1__Impl
	rule__CreateArgument__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_1_1()); }
	RULE_GOES_TO
	{ after(grammarAccess.getCreateArgumentAccess().getGOES_TOTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getSAssignment_1_2()); }
	(rule__CreateArgument__SAssignment_1_2)
	{ after(grammarAccess.getCreateArgumentAccess().getSAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__0__Impl
	rule__FindExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getFindTypeParserRuleCall_0()); }
	rulefindType
	{ after(grammarAccess.getFindExpressionAccess().getFindTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__1__Impl
	rule__FindExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getPAssignment_1()); }
	(rule__FindExpression__PAssignment_1)
	{ after(grammarAccess.getFindExpressionAccess().getPAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getWAssignment_2()); }
	(rule__FindExpression__WAssignment_2)
	{ after(grammarAccess.getFindExpressionAccess().getWAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getWhereClauseAction_0()); }
	()
	{ after(grammarAccess.getWhereClauseAccess().getWhereClauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__1__Impl
	rule__WhereClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getWhereClauseAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__2__Impl
	rule__WhereClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getFindConditionParserRuleCall_2()); }
	(rulefindCondition)?
	{ after(grammarAccess.getWhereClauseAccess().getFindConditionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getWhereClauseAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPAssignment_0()); }
	(rule__PostfixExpression__PAssignment_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getPAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
	(rule__PostfixExpression__Alternatives_1)*
	{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__0__Impl
	rule__PostfixExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_0_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__1__Impl
	rule__PostfixExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_0_1()); }
	(rule__PostfixExpression__AAssignment_1_0_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_0_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_1__0__Impl
	rule__PostfixExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getDOTTerminalRuleCall_1_1_0()); }
	RULE_DOT
	{ after(grammarAccess.getPostfixExpressionAccess().getDOTTerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_1_1()); }
	ruleidentifier
	{ after(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__0__Impl
	rule__PostfixExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_2_0()); }
	RULE_TERMINATOR_SCOPE
	{ after(grammarAccess.getPostfixExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_2_1()); }
	ruleidentifier
	{ after(grammarAccess.getPostfixExpressionAccess().getIdentifierParserRuleCall_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__0__Impl
	rule__PostfixExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLBRACKETTerminalRuleCall_1_3_0()); }
	RULE_LBRACKET
	{ after(grammarAccess.getPostfixExpressionAccess().getLBRACKETTerminalRuleCall_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__1__Impl
	rule__PostfixExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getEAssignment_1_3_1()); }
	(rule__PostfixExpression__EAssignment_1_3_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getEAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRBRACKETTerminalRuleCall_1_3_2()); }
	RULE_RBRACKET
	{ after(grammarAccess.getPostfixExpressionAccess().getRBRACKETTerminalRuleCall_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__0__Impl
	rule__PostfixExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_0()); }
	(rule__PostfixExpression__Group_1_4_0__0)
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__1__Impl
	rule__PostfixExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_1()); }
	(RULE_PRIME)
	{ after(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__2__Impl
	rule__PostfixExpression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_2()); }
	rulecharacteristic
	{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__3__Impl
	rule__PostfixExpression__Group_1_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_3()); }
	RULE_LPAREN
	{ after(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__4__Impl
	rule__PostfixExpression__Group_1_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_4_4()); }
	(rule__PostfixExpression__AAssignment_1_4_4)
	{ after(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_4_5()); }
	RULE_RPAREN
	{ after(grammarAccess.getPostfixExpressionAccess().getRPARENTerminalRuleCall_1_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_0__0__Impl
	rule__PostfixExpression__Group_1_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_0_0()); }
	RULE_PRIME
	{ after(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_0__1__Impl
	rule__PostfixExpression__Group_1_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_0_1()); }
	rulecharacteristic
	{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_0_2()); }
	RULE_LPAREN
	{ after(grammarAccess.getPostfixExpressionAccess().getLPARENTerminalRuleCall_1_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_5__0__Impl
	rule__PostfixExpression__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_5_0()); }
	RULE_PRIME
	{ after(grammarAccess.getPostfixExpressionAccess().getPRIMETerminalRuleCall_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_5_1()); }
	rulecharacteristic
	{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicParserRuleCall_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoCallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group__0__Impl
	rule__PostfixNoCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getPAssignment_0()); }
	(rule__PostfixNoCallExpression__PAssignment_0)
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getPAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getAlternatives_1()); }
	(rule__PostfixNoCallExpression__Alternatives_1)*
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoCallExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_0__0__Impl
	rule__PostfixNoCallExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getDOTTerminalRuleCall_1_0_0()); }
	RULE_DOT
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getDOTTerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_0_1()); }
	ruleidentifier
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoCallExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_1__0__Impl
	rule__PostfixNoCallExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_1_0()); }
	RULE_TERMINATOR_SCOPE
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getTERMINATOR_SCOPETerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_1_1()); }
	ruleidentifier
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getIdentifierParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoCallExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_2__0__Impl
	rule__PostfixNoCallExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getLBRACKETTerminalRuleCall_1_2_0()); }
	RULE_LBRACKET
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getLBRACKETTerminalRuleCall_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_2__1__Impl
	rule__PostfixNoCallExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getEAssignment_1_2_1()); }
	(rule__PostfixNoCallExpression__EAssignment_1_2_1)
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getEAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getRBRACKETTerminalRuleCall_1_2_2()); }
	RULE_RBRACKET
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getRBRACKETTerminalRuleCall_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoCallExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_3__0__Impl
	rule__PostfixNoCallExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getPRIMETerminalRuleCall_1_3_0()); }
	RULE_PRIME
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getPRIMETerminalRuleCall_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoCallExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoCallExpressionAccess().getCharacteristicParserRuleCall_1_3_1()); }
	rulecharacteristic
	{ after(grammarAccess.getPostfixNoCallExpressionAccess().getCharacteristicParserRuleCall_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0_1()); }
	ruleliteral
	{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNameExpressionParserRuleCall_2_1()); }
	rulenameExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getNameExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameExpression__Group_0__0__Impl
	rule__TypeNameExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameExpressionAccess().getTypeNameExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getTypeNameExpressionAccess().getTypeNameExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameExpressionAccess().getInstanceTypeRefParserRuleCall_0_1()); }
	ruleinstanceTypeRef
	{ after(grammarAccess.getTypeNameExpressionAccess().getInstanceTypeRefParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpression__Group__0__Impl
	rule__NameExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpressionAccess().getGroup_0()); }
	(rule__NameExpression__Group_0__0)?
	{ after(grammarAccess.getNameExpressionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpressionAccess().getIdentifierParserRuleCall_1()); }
	ruleidentifier
	{ after(grammarAccess.getNameExpressionAccess().getIdentifierParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpression__Group_0__0__Impl
	rule__NameExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpressionAccess().getDomainNameParserRuleCall_0_0()); }
	ruledomainName
	{ after(grammarAccess.getNameExpressionAccess().getDomainNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpressionAccess().getSCOPETerminalRuleCall_0_1()); }
	RULE_SCOPE
	{ after(grammarAccess.getNameExpressionAccess().getSCOPETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__0__Impl
	rule__ParenthesisedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getLPARENTerminalRuleCall_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getParenthesisedExpressionAccess().getLPARENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__1__Impl
	rule__ParenthesisedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_1()); }
	(rule__ParenthesisedExpression__EAssignment_1)
	{ after(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__2__Impl
	rule__ParenthesisedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup_2()); }
	(rule__ParenthesisedExpression__Group_2__0)*
	{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getParenthesisedExpressionAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2__0__Impl
	rule__ParenthesisedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
	{ after(grammarAccess.getParenthesisedExpressionAccess().getCOMMATerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_2_1()); }
	(rule__ParenthesisedExpression__EAssignment_2_1)
	{ after(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getArgumentListAction_0()); }
	()
	{ after(grammarAccess.getArgumentListAccess().getArgumentListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
	(rule__ArgumentList__Group_1__0)?
	{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getE1Assignment_1_0()); }
	(rule__ArgumentList__E1Assignment_1_0)
	{ after(grammarAccess.getArgumentListAccess().getE1Assignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1_1()); }
	(rule__ArgumentList__Group_1_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1_1__0__Impl
	rule__ArgumentList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCOMMATerminalRuleCall_1_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getArgumentListAccess().getCOMMATerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getE1Assignment_1_1_1()); }
	(rule__ArgumentList__E1Assignment_1_1_1)
	{ after(grammarAccess.getArgumentListAccess().getE1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__CAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getCCollectionTypeRefParserRuleCall_2_0()); }
		rulecollectionTypeRef
		{ after(grammarAccess.getTypeReferenceAccess().getCCollectionTypeRefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBounds__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayBoundsAccess().getEExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getArrayBoundsAccess().getEExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__EAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getEExpressionParserRuleCall_0_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getCollectionTypeRefAccess().getEExpressionParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__TAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_0_4_0()); }
		ruletypeReference
		{ after(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__AAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getAArrayBoundsParserRuleCall_1_2_0()); }
		rulearrayBounds
		{ after(grammarAccess.getCollectionTypeRefAccess().getAArrayBoundsParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__TAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_1_4_0()); }
		ruletypeReference
		{ after(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__TAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_2_3_0()); }
		ruletypeReference
		{ after(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__TAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_3_3_0()); }
		ruletypeReference
		{ after(grammarAccess.getCollectionTypeRefAccess().getTTypeReferenceParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeRef__DAssignment_4_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeRefAccess().getDDictValueTypeParserRuleCall_4_3_2_0()); }
		ruledictValueType
		{ after(grammarAccess.getCollectionTypeRefAccess().getDDictValueTypeParserRuleCall_4_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictKeyType__NAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictKeyTypeAccess().getNNamedTypeRefParserRuleCall_0_0()); }
		rulenamedTypeRef
		{ after(grammarAccess.getDictKeyTypeAccess().getNNamedTypeRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictKeyType__IAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictKeyTypeAccess().getIInstanceTypeRefParserRuleCall_1_0()); }
		ruleinstanceTypeRef
		{ after(grammarAccess.getDictKeyTypeAccess().getIInstanceTypeRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictValueType__TAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictValueTypeAccess().getTTypeReferenceParserRuleCall_0()); }
		ruletypeReference
		{ after(grammarAccess.getDictValueTypeAccess().getTTypeReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__RAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getRRELATIONSHIPNAMETerminalRuleCall_0_0()); }
		RULE_RELATIONSHIPNAME
		{ after(grammarAccess.getRelationshipSpecAccess().getRRELATIONSHIPNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__RAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getRIdentifierParserRuleCall_1_1_0()); }
		ruleidentifier
		{ after(grammarAccess.getRelationshipSpecAccess().getRIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__RAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getRObjectNameParserRuleCall_1_2_1_0()); }
		ruleobjectName
		{ after(grammarAccess.getRelationshipSpecAccess().getRObjectNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateTypeAccess().getSAlternatives_1_0()); }
		(rule__StateType__SAlternatives_1_0)
		{ after(grammarAccess.getStateTypeAccess().getSAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_2_0()); }
		ruleparameterDefinition
		{ after(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_3_1_0()); }
		ruleparameterDefinition
		{ after(grammarAccess.getParameterListAccess().getPParameterDefinitionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceVisibility__VAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceVisibilityAccess().getVAlternatives_1_0()); }
		(rule__ServiceVisibility__VAlternatives_1_0)
		{ after(grammarAccess.getServiceVisibilityAccess().getVAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__PAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getPParameterListParserRuleCall_5_0()); }
		ruleparameterList
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getPParameterListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__CAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getCCodeBlockParserRuleCall_7_0()); }
		rulecodeBlock
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getCCodeBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getDomainFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__PAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainFunctionDefinitionAccess().getPParameterListParserRuleCall_5_0()); }
		ruleparameterList
		{ after(grammarAccess.getDomainFunctionDefinitionAccess().getPParameterListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__RAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainFunctionDefinitionAccess().getRReturnTypeParserRuleCall_7_0()); }
		rulereturnType
		{ after(grammarAccess.getDomainFunctionDefinitionAccess().getRReturnTypeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainFunctionDefinition__CAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainFunctionDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
		rulecodeBlock
		{ after(grammarAccess.getDomainFunctionDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__PAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getPParameterListParserRuleCall_8_0()); }
		ruleparameterList
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getPParameterListParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__CAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getCCodeBlockParserRuleCall_10_0()); }
		rulecodeBlock
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getCCodeBlockParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__PAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
		ruleparameterList
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__CAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
		rulecodeBlock
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getSServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__PAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
		ruleparameterList
		{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__RAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getRReturnTypeParserRuleCall_9_0()); }
		rulereturnType
		{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getRReturnTypeParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorFunctionDefinition__CAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorFunctionDefinitionAccess().getCCodeBlockParserRuleCall_11_0()); }
		rulecodeBlock
		{ after(grammarAccess.getTerminatorFunctionDefinitionAccess().getCCodeBlockParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__VAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getVServiceVisibilityParserRuleCall_0_0()); }
		ruleserviceVisibility
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getVServiceVisibilityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getSServiceTypeParserRuleCall_1_0()); }
		ruleserviceType
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getSServiceTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__PAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getPParameterListParserRuleCall_8_0()); }
		ruleparameterList
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getPParameterListParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__RAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getRReturnTypeParserRuleCall_10_0()); }
		rulereturnType
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getRReturnTypeParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFunctionDefinition__CAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFunctionDefinitionAccess().getCCodeBlockParserRuleCall_12_0()); }
		rulecodeBlock
		{ after(grammarAccess.getObjectFunctionDefinitionAccess().getCCodeBlockParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getSStateTypeParserRuleCall_0_0()); }
		rulestateType
		{ after(grammarAccess.getStateDefinitionAccess().getSStateTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__PAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
		ruleparameterList
		{ after(grammarAccess.getStateDefinitionAccess().getPParameterListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__CAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
		rulecodeBlock
		{ after(grammarAccess.getStateDefinitionAccess().getCCodeBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getSStatementParserRuleCall_1_0()); }
		rulestatement
		{ after(grammarAccess.getStatementListAccess().getSStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCCodeBlockStatementParserRuleCall_1_0_0()); }
		rulecodeBlockStatement
		{ after(grammarAccess.getStatementAccess().getCCodeBlockStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__EAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEAssignStatementParserRuleCall_1_1_0_0()); }
		ruleassignStatement
		{ after(grammarAccess.getStatementAccess().getEAssignStatementParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSStreamStatementParserRuleCall_1_2_0_0()); }
		rulestreamStatement
		{ after(grammarAccess.getStatementAccess().getSStreamStatementParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getNNullStatementParserRuleCall_1_3_0_0()); }
		rulenullStatement
		{ after(grammarAccess.getStatementAccess().getNNullStatementParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCCallStatementParserRuleCall_1_4_0_0()); }
		rulecallStatement
		{ after(grammarAccess.getStatementAccess().getCCallStatementParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__EAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEExitStatementParserRuleCall_1_5_0()); }
		ruleexitStatement
		{ after(grammarAccess.getStatementAccess().getEExitStatementParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRReturnStatementParserRuleCall_1_6_0()); }
		rulereturnStatement
		{ after(grammarAccess.getStatementAccess().getRReturnStatementParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DAssignment_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDDelayStatementParserRuleCall_1_7_0()); }
		ruledelayStatement
		{ after(grammarAccess.getStatementAccess().getDDelayStatementParserRuleCall_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DAssignment_1_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDDeleteStatementParserRuleCall_1_9_0()); }
		ruledeleteStatement
		{ after(grammarAccess.getStatementAccess().getDDeleteStatementParserRuleCall_1_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__EAssignment_1_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEEraseStatementParserRuleCall_1_10_0()); }
		ruleeraseStatement
		{ after(grammarAccess.getStatementAccess().getEEraseStatementParserRuleCall_1_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LAssignment_1_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLLinkStatementParserRuleCall_1_11_0()); }
		rulelinkStatement
		{ after(grammarAccess.getStatementAccess().getLLinkStatementParserRuleCall_1_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SAssignment_1_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSScheduleStatementParserRuleCall_1_12_0()); }
		rulescheduleStatement
		{ after(grammarAccess.getStatementAccess().getSScheduleStatementParserRuleCall_1_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CAssignment_1_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCCancelTimerStatementParserRuleCall_1_13_0()); }
		rulecancelTimerStatement
		{ after(grammarAccess.getStatementAccess().getCCancelTimerStatementParserRuleCall_1_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GAssignment_1_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGGenerateStatementParserRuleCall_1_14_0()); }
		rulegenerateStatement
		{ after(grammarAccess.getStatementAccess().getGGenerateStatementParserRuleCall_1_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IAssignment_1_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIIfStatementParserRuleCall_1_15_0()); }
		ruleifStatement
		{ after(grammarAccess.getStatementAccess().getIIfStatementParserRuleCall_1_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CAssignment_1_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCCaseStatementParserRuleCall_1_16_0()); }
		rulecaseStatement
		{ after(grammarAccess.getStatementAccess().getCCaseStatementParserRuleCall_1_16_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FAssignment_1_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFForStatementParserRuleCall_1_17_0()); }
		ruleforStatement
		{ after(grammarAccess.getStatementAccess().getFForStatementParserRuleCall_1_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WAssignment_1_18
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getWWhileStatementParserRuleCall_1_18_0()); }
		rulewhileStatement
		{ after(grammarAccess.getStatementAccess().getWWhileStatementParserRuleCall_1_18_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignStatementAccess().getLhsExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getAssignStatementAccess().getLhsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignStatementAccess().getRhsExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getAssignStatementAccess().getRhsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__EAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamStatementAccess().getEExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getStreamStatementAccess().getEExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamStatementAccess().getSStreamValueParserRuleCall_1_0()); }
		rulestreamValue
		{ after(grammarAccess.getStreamStatementAccess().getSStreamValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__PAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
		ruleprimaryExpression
		{ after(grammarAccess.getCallStatementAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__EAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getEExpressionParserRuleCall_1_0_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getCallStatementAccess().getEExpressionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__CAssignment_1_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getCCharacteristicParserRuleCall_1_0_3_1_0()); }
		rulecharacteristic
		{ after(grammarAccess.getCallStatementAccess().getCCharacteristicParserRuleCall_1_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__AAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getAArgumentListParserRuleCall_1_2_0()); }
		ruleargumentList
		{ after(grammarAccess.getCallStatementAccess().getAArgumentListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__CAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitStatementAccess().getCConditionParserRuleCall_2_1_0()); }
		rulecondition
		{ after(grammarAccess.getExitStatementAccess().getCConditionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__N1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStatementAccess().getN1NavigateExpressionParserRuleCall_1_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkStatementAccess().getN1NavigateExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__RAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStatementAccess().getRRelationshipSpecParserRuleCall_2_0()); }
		rulerelationshipSpec
		{ after(grammarAccess.getLinkStatementAccess().getRRelationshipSpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__N2Assignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStatementAccess().getN2NavigateExpressionParserRuleCall_3_0_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkStatementAccess().getN2NavigateExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkStatement__N3Assignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStatementAccess().getN3NavigateExpressionParserRuleCall_3_1_1_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkStatementAccess().getN3NavigateExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__GAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getGGenerateStatementParserRuleCall_2_0()); }
		rulegenerateStatement
		{ after(grammarAccess.getScheduleStatementAccess().getGGenerateStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__EAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_4_0()); }
		ruleexpression
		{ after(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__EAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_5_1_0()); }
		ruleexpression
		{ after(grammarAccess.getScheduleStatementAccess().getEExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__EAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getEExpressionParserRuleCall_5_1_0()); }
		ruleexpression
		{ after(grammarAccess.getGenerateStatementAccess().getEExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getCConditionParserRuleCall_1_0()); }
		rulecondition
		{ after(grammarAccess.getIfStatementAccess().getCConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getSStatementListParserRuleCall_3_0()); }
		rulestatementList
		{ after(grammarAccess.getIfStatementAccess().getSStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__E1Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getE1ElsifBlockParserRuleCall_4_0()); }
		ruleelsifBlock
		{ after(grammarAccess.getIfStatementAccess().getE1ElsifBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__E2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getE2ElseBlockParserRuleCall_5_0()); }
		ruleelseBlock
		{ after(grammarAccess.getIfStatementAccess().getE2ElseBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElsifBlockAccess().getCConditionParserRuleCall_1_0()); }
		rulecondition
		{ after(grammarAccess.getElsifBlockAccess().getCConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElsifBlockAccess().getSStatementListParserRuleCall_3_0()); }
		rulestatementList
		{ after(grammarAccess.getElsifBlockAccess().getSStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getCConditionParserRuleCall_1_0()); }
		rulecondition
		{ after(grammarAccess.getWhileStatementAccess().getCConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getSStatementListParserRuleCall_3_0()); }
		rulestatementList
		{ after(grammarAccess.getWhileStatementAccess().getSStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__C1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getC1CaseAlternativeParserRuleCall_3_0()); }
		rulecaseAlternative
		{ after(grammarAccess.getCaseStatementAccess().getC1CaseAlternativeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__C2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getC2CaseOthersParserRuleCall_4_0()); }
		rulecaseOthers
		{ after(grammarAccess.getCaseStatementAccess().getC2CaseOthersParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getSStatementListParserRuleCall_3_0()); }
		rulestatementList
		{ after(grammarAccess.getCaseAlternativeAccess().getSStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__EAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceList__EAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getChoiceListAccess().getEExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getSStatementListParserRuleCall_3_0()); }
		rulestatementList
		{ after(grammarAccess.getForStatementAccess().getSStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__VAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getVVariableDeclarationParserRuleCall_0_1_0()); }
		rulevariableDeclaration
		{ after(grammarAccess.getCodeBlockStatementAccess().getVVariableDeclarationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__SAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getSStatementListParserRuleCall_2_0()); }
		rulestatementList
		{ after(grammarAccess.getCodeBlockStatementAccess().getSStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__EAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getEExceptionHandlerParserRuleCall_3_1_0()); }
		ruleexceptionHandler
		{ after(grammarAccess.getCodeBlockStatementAccess().getEExceptionHandlerParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__PAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getPOtherHandlerParserRuleCall_3_2_0()); }
		ruleotherHandler
		{ after(grammarAccess.getCodeBlockStatementAccess().getPOtherHandlerParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__VAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getVVariableDeclarationParserRuleCall_0_0()); }
		rulevariableDeclaration
		{ after(grammarAccess.getCodeBlockAccess().getVVariableDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__SAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getSStatementListParserRuleCall_2_0()); }
		rulestatementList
		{ after(grammarAccess.getCodeBlockAccess().getSStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__EAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getEExceptionHandlerParserRuleCall_3_1_0()); }
		ruleexceptionHandler
		{ after(grammarAccess.getCodeBlockAccess().getEExceptionHandlerParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__OAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getOOtherHandlerParserRuleCall_3_2_0()); }
		ruleotherHandler
		{ after(grammarAccess.getCodeBlockAccess().getOOtherHandlerParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTTypeReferenceWithCAParserRuleCall_3_0()); }
		ruletypeReferenceWithCA
		{ after(grammarAccess.getVariableDeclarationAccess().getTTypeReferenceWithCAParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__EAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getEExpressionParserRuleCall_4_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableDeclarationAccess().getEExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindCondition__FAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindConditionAccess().getFFindLogicalOrParserRuleCall_0()); }
		rulefindLogicalOr
		{ after(grammarAccess.getFindConditionAccess().getFFindLogicalOrParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__FAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_0_0()); }
		rulefindLogicalXor
		{ after(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__FAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_1_1_0()); }
		rulefindLogicalXor
		{ after(grammarAccess.getFindLogicalOrAccess().getFFindLogicalXorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__FAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_0_0()); }
		rulefindLogicalAnd
		{ after(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__FAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_1_1_0()); }
		rulefindLogicalAnd
		{ after(grammarAccess.getFindLogicalXorAccess().getFFindLogicalAndParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__FAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_0_0()); }
		rulefindPrimary
		{ after(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__FAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_1_1_0()); }
		rulefindPrimary
		{ after(grammarAccess.getFindLogicalAndAccess().getFFindPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__FAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindComparisonAccess().getFFindNameParserRuleCall_0_0()); }
		rulefindName
		{ after(grammarAccess.getFindComparisonAccess().getFFindNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindComparison__AAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindComparisonAccess().getAAdditiveExpParserRuleCall_2_0()); }
		ruleadditiveExp
		{ after(grammarAccess.getFindComparisonAccess().getAAdditiveExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__I1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getI1IdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getFindNameAccess().getI1IdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__I2Assignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getI2IdentifierParserRuleCall_1_0_1_0()); }
		ruleidentifier
		{ after(grammarAccess.getFindNameAccess().getI2IdentifierParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__EAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getEExpressionParserRuleCall_1_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getFindNameAccess().getEExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRRangeExpressionParserRuleCall_0()); }
		rulerangeExpression
		{ after(grammarAccess.getExpressionAccess().getRRangeExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_0_0()); }
		rulelogicalOr
		{ after(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__LAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_1_1_0()); }
		rulelogicalOr
		{ after(grammarAccess.getRangeExpressionAccess().getLLogicalOrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_0_0()); }
		rulelogicalXor
		{ after(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__LAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_1_1_0()); }
		rulelogicalXor
		{ after(grammarAccess.getLogicalOrAccess().getLLogicalXorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_0_0()); }
		rulelogicalAnd
		{ after(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__LAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_1_1_0()); }
		rulelogicalAnd
		{ after(grammarAccess.getLogicalXorAccess().getLLogicalAndParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__EAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_0_0()); }
		ruleequality
		{ after(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__EAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_1_1_0()); }
		ruleequality
		{ after(grammarAccess.getLogicalAndAccess().getEEqualityParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_0_0()); }
		rulerelationalExp
		{ after(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_1_1_0()); }
		rulerelationalExp
		{ after(grammarAccess.getEqualityAccess().getRRelationalExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__AAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_0_0()); }
		ruleadditiveExp
		{ after(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__AAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_1_1_0()); }
		ruleadditiveExp
		{ after(grammarAccess.getRelationalExpAccess().getAAdditiveExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__MAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_0_0()); }
		rulemultExp
		{ after(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__MAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_1_1_0()); }
		rulemultExp
		{ after(grammarAccess.getAdditiveExpAccess().getMMultExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__UAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_0_0()); }
		ruleunaryExp
		{ after(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__UAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_1_1_0()); }
		ruleunaryExp
		{ after(grammarAccess.getMultExpAccess().getUUnaryExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__N1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getN1NavigateExpressionParserRuleCall_0_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getN1NavigateExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__N2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getN2NavigateExpressionParserRuleCall_1_1_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getN2NavigateExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__RAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getRRelationshipSpecParserRuleCall_1_2_0()); }
		rulerelationshipSpec
		{ after(grammarAccess.getLinkExpressionAccess().getRRelationshipSpecParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__N3Assignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getN3NavigateExpressionParserRuleCall_1_3_0()); }
		rulenavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getN3NavigateExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__EAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_0_0()); }
		ruleextendedExpression
		{ after(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_0_1_0()); }
		rulerelationshipSpec
		{ after(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__WAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getWWhereClauseParserRuleCall_1_0_2_0()); }
		rulewhereClause
		{ after(grammarAccess.getNavigateExpressionAccess().getWWhereClauseParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__EAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_1_1_1_0()); }
		ruleextendedExpression
		{ after(grammarAccess.getNavigateExpressionAccess().getEExtendedExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__RAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_1_3_0()); }
		rulerelationshipSpec
		{ after(grammarAccess.getNavigateExpressionAccess().getRRelationshipSpecParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__CAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_0_0()); }
		rulecreateArgument
		{ after(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgumentList__CAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_1_1_0()); }
		rulecreateArgument
		{ after(grammarAccess.getCreateArgumentListAccess().getCCreateArgumentParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__AAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getAAttributeNameParserRuleCall_0_0_0()); }
		ruleattributeName
		{ after(grammarAccess.getCreateArgumentAccess().getAAttributeNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__EAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getEExpressionParserRuleCall_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getCreateArgumentAccess().getEExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__SAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getSStateNameParserRuleCall_1_2_0()); }
		rulestateName
		{ after(grammarAccess.getCreateArgumentAccess().getSStateNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__PAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindExpressionAccess().getPPostfixNoCallExpressionParserRuleCall_1_0()); }
		rulepostfixNoCallExpression
		{ after(grammarAccess.getFindExpressionAccess().getPPostfixNoCallExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__WAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindExpressionAccess().getWWhereClauseParserRuleCall_2_0()); }
		rulewhereClause
		{ after(grammarAccess.getFindExpressionAccess().getWWhereClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__PAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
		ruleprimaryExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__AAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_0_1_0()); }
		ruleargumentList
		{ after(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__EAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getEExpressionParserRuleCall_1_3_1_0()); }
		ruleexpression
		{ after(grammarAccess.getPostfixExpressionAccess().getEExpressionParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__AAssignment_1_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_4_4_0()); }
		ruleargumentList
		{ after(grammarAccess.getPostfixExpressionAccess().getAArgumentListParserRuleCall_1_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__PAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
		ruleprimaryExpression
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getPPrimaryExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoCallExpression__EAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoCallExpressionAccess().getEExpressionParserRuleCall_1_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getPostfixNoCallExpressionAccess().getEExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__EAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getParenthesisedExpressionAccess().getEExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__E1Assignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_0_0()); }
		ruleexpression
		{ after(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__E1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getArgumentListAccess().getE1ExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_AND : 'and';

RULE_OR : 'or';

RULE_XOR : 'xor';

RULE_ABS : 'abs';

RULE_NOT : 'not';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_CONCATENATE : '&';

RULE_UNION : 'union';

RULE_NOT_IN : 'not_in';

RULE_DIVIDE : '/';

RULE_TIMES : '*';

RULE_INTERSECTION : 'intersection';

RULE_MOD : 'mod';

RULE_POWER : '**';

RULE_REM : 'rem';

RULE_DISUNION : 'disunion';

RULE_EQUAL : '=';

RULE_NOT_EQUAL : '/=';

RULE_GT : '>';

RULE_GTE : '>=';

RULE_LT : '<';

RULE_LTE : '<=';

RULE_STREAM_LINE_IN : '>>>';

RULE_STREAM_LINE_OUT : '<<<';

RULE_STREAM_IN : '>>';

RULE_STREAM_OUT : '<<';

RULE_ASSIGN : ':=';

RULE_COLON : ':';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_LTGT : '<>';

RULE_PRIME : '\'';

RULE_RANGE_DOTS : '..';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_SCOPE : '::';

RULE_SEMI : ';';

RULE_GOES_TO : '=>';

RULE_NAVIGATE : '->';

RULE_TERMINATOR_SCOPE : '~>';

RULE_CASE_OR : '|';

RULE_ARRAY : 'array';

RULE_ANONYMOUS : 'anonymous';

RULE_ASSIGNER : 'assigner';

RULE_AT : 'at';

RULE_BAG : 'bag';

RULE_BEGIN : 'begin';

RULE_CANNOT_HAPPEN : ('Cannot_Happen'|'cannot_happen');

RULE_CANCEL : 'cancel';

RULE_CASE : 'case';

RULE_CONDITIONALLY : 'conditionally';

RULE_CONSOLE : 'console';

RULE_CREATE : 'create';

RULE_CREATION : 'creation';

RULE_CURRENT_STATE : 'Current_State';

RULE_DECLARE : 'declare';

RULE_DEFERRED : 'deferred';

RULE_DELAY : 'delay';

RULE_DELETE : 'delete';

RULE_DELTA : 'delta';

RULE_DICTIONARY : 'dictionary';

RULE_DIGITS : 'digits';

RULE_DOMAIN : 'domain';

RULE_ELSE : 'else';

RULE_ELSIF : 'elsif';

RULE_END : 'end';

RULE_ENUM : 'enum';

RULE_ERASE : 'erase';

RULE_EVENT : 'event';

RULE_EXCEPTION : 'exception';

RULE_EXIT : 'exit';

RULE_FIND : ('find'|'find_all');

RULE_FIND_ONE : 'find_one';

RULE_FIND_ONLY : 'find_only';

RULE_FOR : 'for';

RULE_FUNCTION : 'function';

RULE_GENERATE : 'generate';

RULE_IDENTIF : 'identifier';

RULE_IF : 'if';

RULE_IGNORE : 'Ignore';

RULE_IN : 'in';

RULE_INSTANCE : 'instance';

RULE_IS_A : 'is_a';

RULE_IS : 'is';

RULE_LINK : 'link';

RULE_LOOP : 'loop';

RULE_MANY : 'many';

RULE_NON_EXISTENT : ('Non_Existent'|'Non_Existant'|'non_existent');

RULE_OBJECT : 'object';

RULE_OF : 'of';

RULE_ONE : 'one';

RULE_ORDERED_BY : 'ordered_by';

RULE_OTHERS : 'others';

RULE_OUT : 'out';

RULE_PRAGMA : 'pragma';

RULE_PREFERRED : 'preferred';

RULE_PRIVATE : 'private';

RULE_PROJECT : 'project';

RULE_PUBLIC : 'public';

RULE_RAISE : 'raise';

RULE_RANGE : 'range';

RULE_READONLY : 'readonly';

RULE_REFERENTIAL : 'referential';

RULE_RELATIONSHIP : 'relationship';

RULE_RETURN : 'return';

RULE_REVERSE : 'reverse';

RULE_REVERSE_ORDERED_BY : 'reverse_ordered_by';

RULE_SCHEDULE : 'schedule';

RULE_SEQUENCE : 'sequence';

RULE_SERVICE : 'service';

RULE_SET : 'set';

RULE_START : 'start';

RULE_STATE : 'state';

RULE_STRUCTURE : 'structure';

RULE_TERMINAL : 'terminal';

RULE_TERMINATOR : 'terminator';

RULE_THEN : 'then';

RULE_THIS : 'this';

RULE_TO : 'to';

RULE_TRANSITION : 'transition';

RULE_TYPE : ('type'|'subtype');

RULE_UNCONDITIONALLY : 'unconditionally';

RULE_UNIQUE : 'unique';

RULE_UNLINK : 'unlink';

RULE_USING : 'using';

RULE_WHEN : 'when';

RULE_WHILE : 'while';

RULE_WITH : 'with';

RULE_NULL : 'null';

RULE_FLUSH : 'flush';

RULE_ENDL : 'endl';

RULE_TRUE : 'true';

RULE_FALSE : 'false';

RULE_LINE_NO : '#LINE#';

RULE_FILE_NAME : '#FILE#';

RULE_INTEGERLITERAL : (RULE_DIGIT RULE_DIGIT? '#' RULE_BASEDDIGIT+|RULE_DIGIT+);

RULE_REALLITERAL : (RULE_DIGIT+ ('.' RULE_DIGIT+)? RULE_UNBASEDEXPONENT?|'.' RULE_DIGIT+ RULE_UNBASEDEXPONENT?|RULE_DIGIT RULE_DIGIT? '#' (RULE_BASEDDIGIT+ ('.' RULE_BASEDDIGIT+ RULE_BASEDEXPONENT?|RULE_BASEDEXPONENT|'#'?)|'.' RULE_BASEDDIGIT+ RULE_BASEDEXPONENT?));

fragment RULE_UNBASEDEXPONENT : ('e'|'E') ('+'|'-')? RULE_DIGIT+;

fragment RULE_BASEDEXPONENT : '#' ('+'|'-')? RULE_DIGIT+;

fragment RULE_DIGIT : '0'..'9';

fragment RULE_BASEDDIGIT : ('0'..'9'|'a'..'z'|'A'..'Z');

fragment RULE_LETTER : ('A'..'Z'|'a'..'z');

RULE_DURATIONLITERAL : '@P' ~(('@'|' '|'\t'|'\f'|'\n'|'\r'))* '@';

RULE_TIMESTAMPLITERAL : '@' ~(('@'|' '|'\t'|'\f'|'\n'|'\r'))* '@';

RULE_STRINGLITERAL : '"' (RULE_ESCAPESEQUENCE|~(('\\'|'"')))* '"';

fragment RULE_ESCAPESEQUENCE : ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|RULE_UNICODEESCAPE|RULE_OCTALESCAPE);

fragment RULE_OCTALESCAPE : ('\\' '0'..'3' '0'..'7' '0'..'7'|'\\' '0'..'7' '0'..'7'|'\\' '0'..'7');

fragment RULE_UNICODEESCAPE : '\\' 'u' RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT;

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_RELATIONSHIPNAME : 'R' '1'..'9' RULE_DIGIT*;

RULE_IDENT : (RULE_LETTER|'_') (RULE_LETTER|RULE_DIGIT|'_')*;

RULE_COMMENT : '//' ~(('\n'|'\r'))* '\r'? '\n';

RULE_WHITESPACE : (' '|'\t'|'\f'|'\n'|'\r')+;
