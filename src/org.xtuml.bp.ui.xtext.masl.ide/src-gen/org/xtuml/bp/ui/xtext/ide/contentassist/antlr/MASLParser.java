/*
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.ui.xtext.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtuml.bp.ui.xtext.ide.contentassist.antlr.internal.InternalMASLParser;
import org.xtuml.bp.ui.xtext.services.MASLGrammarAccess;

public class MASLParser extends AbstractContentAssistParser {

	@Inject
	private MASLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMASLParser createParser() {
		InternalMASLParser result = new InternalMASLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDefinitionAccess().getAlternatives(), "rule__Definition__Alternatives");
					put(grammarAccess.getTypeReferenceAccess().getAlternatives(), "rule__TypeReference__Alternatives");
					put(grammarAccess.getTypeReferenceWithCAAccess().getAlternatives(), "rule__TypeReferenceWithCA__Alternatives");
					put(grammarAccess.getDeprecatedTypeAccess().getAlternatives(), "rule__DeprecatedType__Alternatives");
					put(grammarAccess.getCollectionTypeRefAccess().getAlternatives(), "rule__CollectionTypeRef__Alternatives");
					put(grammarAccess.getDictKeyTypeAccess().getAlternatives(), "rule__DictKeyType__Alternatives");
					put(grammarAccess.getStateTypeAccess().getSAlternatives_1_0(), "rule__StateType__SAlternatives_1_0");
					put(grammarAccess.getServiceVisibilityAccess().getVAlternatives_1_0(), "rule__ServiceVisibility__VAlternatives_1_0");
					put(grammarAccess.getParameterModeAccess().getAlternatives(), "rule__ParameterMode__Alternatives");
					put(grammarAccess.getPragmaValueAccess().getAlternatives(), "rule__PragmaValue__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives_1(), "rule__Statement__Alternatives_1");
					put(grammarAccess.getStreamOperatorAccess().getAlternatives(), "rule__StreamOperator__Alternatives");
					put(grammarAccess.getCallStatementAccess().getAlternatives_1_0(), "rule__CallStatement__Alternatives_1_0");
					put(grammarAccess.getLinkTypeAccess().getAlternatives(), "rule__LinkType__Alternatives");
					put(grammarAccess.getScheduleTypeAccess().getAlternatives(), "rule__ScheduleType__Alternatives");
					put(grammarAccess.getFindPrimaryAccess().getAlternatives(), "rule__FindPrimary__Alternatives");
					put(grammarAccess.getFindUnaryAccess().getAlternatives(), "rule__FindUnary__Alternatives");
					put(grammarAccess.getFindComparisonAccess().getAlternatives_1(), "rule__FindComparison__Alternatives_1");
					put(grammarAccess.getFindNameAccess().getAlternatives_1(), "rule__FindName__Alternatives_1");
					put(grammarAccess.getEqualityAccess().getAlternatives_1_0(), "rule__Equality__Alternatives_1_0");
					put(grammarAccess.getRelationalExpAccess().getAlternatives_1_0(), "rule__RelationalExp__Alternatives_1_0");
					put(grammarAccess.getAdditiveExpAccess().getAlternatives_1_0(), "rule__AdditiveExp__Alternatives_1_0");
					put(grammarAccess.getMultExpAccess().getAlternatives_1_0(), "rule__MultExp__Alternatives_1_0");
					put(grammarAccess.getUnaryExpAccess().getAlternatives(), "rule__UnaryExp__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getLinkExpressionAccess().getAlternatives(), "rule__LinkExpression__Alternatives");
					put(grammarAccess.getNavigateExpressionAccess().getAlternatives_1(), "rule__NavigateExpression__Alternatives_1");
					put(grammarAccess.getExtendedExpressionAccess().getAlternatives(), "rule__ExtendedExpression__Alternatives");
					put(grammarAccess.getCreateArgumentAccess().getAlternatives(), "rule__CreateArgument__Alternatives");
					put(grammarAccess.getFindTypeAccess().getAlternatives(), "rule__FindType__Alternatives");
					put(grammarAccess.getPostfixExpressionAccess().getAlternatives_1(), "rule__PostfixExpression__Alternatives_1");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getAlternatives_1(), "rule__PostfixNoCallExpression__Alternatives_1");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getTypeNameExpressionAccess().getAlternatives(), "rule__TypeNameExpression__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getCharacteristicAccess().getAlternatives(), "rule__Characteristic__Alternatives");
					put(grammarAccess.getCharacteristicRWAccess().getAlternatives(), "rule__CharacteristicRW__Alternatives");
					put(grammarAccess.getTypeReferenceAccess().getGroup_0(), "rule__TypeReference__Group_0__0");
					put(grammarAccess.getTypeReferenceAccess().getGroup_1(), "rule__TypeReference__Group_1__0");
					put(grammarAccess.getTypeReferenceAccess().getGroup_3(), "rule__TypeReference__Group_3__0");
					put(grammarAccess.getQualifiedObjectNameAccess().getGroup(), "rule__QualifiedObjectName__Group__0");
					put(grammarAccess.getQualifiedObjectNameAccess().getGroup_0(), "rule__QualifiedObjectName__Group_0__0");
					put(grammarAccess.getInstanceTypeRefAccess().getGroup(), "rule__InstanceTypeRef__Group__0");
					put(grammarAccess.getNamedTypeRefAccess().getGroup(), "rule__NamedTypeRef__Group__0");
					put(grammarAccess.getNamedTypeRefAccess().getGroup_1(), "rule__NamedTypeRef__Group_1__0");
					put(grammarAccess.getUserDefinedTypeRefAccess().getGroup(), "rule__UserDefinedTypeRef__Group__0");
					put(grammarAccess.getUserDefinedTypeRefAccess().getGroup_0(), "rule__UserDefinedTypeRef__Group_0__0");
					put(grammarAccess.getConstrainedArrayTypeRefAccess().getGroup(), "rule__ConstrainedArrayTypeRef__Group__0");
					put(grammarAccess.getArrayBoundsAccess().getGroup(), "rule__ArrayBounds__Group__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_0(), "rule__CollectionTypeRef__Group_0__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_0_2(), "rule__CollectionTypeRef__Group_0_2__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_1(), "rule__CollectionTypeRef__Group_1__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_2(), "rule__CollectionTypeRef__Group_2__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_3(), "rule__CollectionTypeRef__Group_3__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_4(), "rule__CollectionTypeRef__Group_4__0");
					put(grammarAccess.getCollectionTypeRefAccess().getGroup_4_3(), "rule__CollectionTypeRef__Group_4_3__0");
					put(grammarAccess.getRelationshipSpecAccess().getGroup(), "rule__RelationshipSpec__Group__0");
					put(grammarAccess.getRelationshipSpecAccess().getGroup_1(), "rule__RelationshipSpec__Group_1__0");
					put(grammarAccess.getRelationshipSpecAccess().getGroup_1_2(), "rule__RelationshipSpec__Group_1_2__0");
					put(grammarAccess.getServiceTypeAccess().getGroup(), "rule__ServiceType__Group__0");
					put(grammarAccess.getServiceTypeAccess().getGroup_1(), "rule__ServiceType__Group_1__0");
					put(grammarAccess.getStateTypeAccess().getGroup(), "rule__StateType__Group__0");
					put(grammarAccess.getAssignerStartAccess().getGroup(), "rule__AssignerStart__Group__0");
					put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
					put(grammarAccess.getParameterListAccess().getGroup_3(), "rule__ParameterList__Group_3__0");
					put(grammarAccess.getParameterDefinitionAccess().getGroup(), "rule__ParameterDefinition__Group__0");
					put(grammarAccess.getServiceVisibilityAccess().getGroup(), "rule__ServiceVisibility__Group__0");
					put(grammarAccess.getPragmaListAccess().getGroup(), "rule__PragmaList__Group__0");
					put(grammarAccess.getPragmaDefAccess().getGroup(), "rule__PragmaDef__Group__0");
					put(grammarAccess.getPragmaDefAccess().getGroup_3(), "rule__PragmaDef__Group_3__0");
					put(grammarAccess.getPragmaDefAccess().getGroup_3_1(), "rule__PragmaDef__Group_3_1__0");
					put(grammarAccess.getDomainServiceDefinitionAccess().getGroup(), "rule__DomainServiceDefinition__Group__0");
					put(grammarAccess.getDomainFunctionDefinitionAccess().getGroup(), "rule__DomainFunctionDefinition__Group__0");
					put(grammarAccess.getObjectServiceDefinitionAccess().getGroup(), "rule__ObjectServiceDefinition__Group__0");
					put(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup(), "rule__TerminatorServiceDefinition__Group__0");
					put(grammarAccess.getTerminatorFunctionDefinitionAccess().getGroup(), "rule__TerminatorFunctionDefinition__Group__0");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getGroup(), "rule__ObjectFunctionDefinition__Group__0");
					put(grammarAccess.getStateDefinitionAccess().getGroup(), "rule__StateDefinition__Group__0");
					put(grammarAccess.getStatementListAccess().getGroup(), "rule__StatementList__Group__0");
					put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_1_1(), "rule__Statement__Group_1_1__0");
					put(grammarAccess.getStatementAccess().getGroup_1_2(), "rule__Statement__Group_1_2__0");
					put(grammarAccess.getStatementAccess().getGroup_1_3(), "rule__Statement__Group_1_3__0");
					put(grammarAccess.getStatementAccess().getGroup_1_4(), "rule__Statement__Group_1_4__0");
					put(grammarAccess.getAssignStatementAccess().getGroup(), "rule__AssignStatement__Group__0");
					put(grammarAccess.getStreamValueAccess().getGroup(), "rule__StreamValue__Group__0");
					put(grammarAccess.getStreamStatementAccess().getGroup(), "rule__StreamStatement__Group__0");
					put(grammarAccess.getCallStatementAccess().getGroup(), "rule__CallStatement__Group__0");
					put(grammarAccess.getCallStatementAccess().getGroup_1(), "rule__CallStatement__Group_1__0");
					put(grammarAccess.getCallStatementAccess().getGroup_1_0_0(), "rule__CallStatement__Group_1_0_0__0");
					put(grammarAccess.getCallStatementAccess().getGroup_1_0_1(), "rule__CallStatement__Group_1_0_1__0");
					put(grammarAccess.getCallStatementAccess().getGroup_1_0_2(), "rule__CallStatement__Group_1_0_2__0");
					put(grammarAccess.getCallStatementAccess().getGroup_1_0_3(), "rule__CallStatement__Group_1_0_3__0");
					put(grammarAccess.getExitStatementAccess().getGroup(), "rule__ExitStatement__Group__0");
					put(grammarAccess.getExitStatementAccess().getGroup_2(), "rule__ExitStatement__Group_2__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getDelayStatementAccess().getGroup(), "rule__DelayStatement__Group__0");
					put(grammarAccess.getRaiseStatementAccess().getGroup(), "rule__RaiseStatement__Group__0");
					put(grammarAccess.getDeleteStatementAccess().getGroup(), "rule__DeleteStatement__Group__0");
					put(grammarAccess.getEraseStatementAccess().getGroup(), "rule__EraseStatement__Group__0");
					put(grammarAccess.getLinkStatementAccess().getGroup(), "rule__LinkStatement__Group__0");
					put(grammarAccess.getLinkStatementAccess().getGroup_3(), "rule__LinkStatement__Group_3__0");
					put(grammarAccess.getLinkStatementAccess().getGroup_3_1(), "rule__LinkStatement__Group_3_1__0");
					put(grammarAccess.getScheduleStatementAccess().getGroup(), "rule__ScheduleStatement__Group__0");
					put(grammarAccess.getScheduleStatementAccess().getGroup_5(), "rule__ScheduleStatement__Group_5__0");
					put(grammarAccess.getCancelTimerStatementAccess().getGroup(), "rule__CancelTimerStatement__Group__0");
					put(grammarAccess.getGenerateStatementAccess().getGroup(), "rule__GenerateStatement__Group__0");
					put(grammarAccess.getGenerateStatementAccess().getGroup_5(), "rule__GenerateStatement__Group_5__0");
					put(grammarAccess.getQualifiedEventNameAccess().getGroup(), "rule__QualifiedEventName__Group__0");
					put(grammarAccess.getQualifiedEventNameAccess().getGroup_0(), "rule__QualifiedEventName__Group_0__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getElsifBlockAccess().getGroup(), "rule__ElsifBlock__Group__0");
					put(grammarAccess.getElseBlockAccess().getGroup(), "rule__ElseBlock__Group__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getCaseStatementAccess().getGroup(), "rule__CaseStatement__Group__0");
					put(grammarAccess.getCaseAlternativeAccess().getGroup(), "rule__CaseAlternative__Group__0");
					put(grammarAccess.getChoiceListAccess().getGroup(), "rule__ChoiceList__Group__0");
					put(grammarAccess.getChoiceListAccess().getGroup_1(), "rule__ChoiceList__Group_1__0");
					put(grammarAccess.getCaseOthersAccess().getGroup(), "rule__CaseOthers__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getLoopVariableSpecAccess().getGroup(), "rule__LoopVariableSpec__Group__0");
					put(grammarAccess.getCodeBlockStatementAccess().getGroup(), "rule__CodeBlockStatement__Group__0");
					put(grammarAccess.getCodeBlockStatementAccess().getGroup_0(), "rule__CodeBlockStatement__Group_0__0");
					put(grammarAccess.getCodeBlockStatementAccess().getGroup_3(), "rule__CodeBlockStatement__Group_3__0");
					put(grammarAccess.getCodeBlockAccess().getGroup(), "rule__CodeBlock__Group__0");
					put(grammarAccess.getCodeBlockAccess().getGroup_3(), "rule__CodeBlock__Group_3__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_4(), "rule__VariableDeclaration__Group_4__0");
					put(grammarAccess.getExceptionHandlerAccess().getGroup(), "rule__ExceptionHandler__Group__0");
					put(grammarAccess.getOtherHandlerAccess().getGroup(), "rule__OtherHandler__Group__0");
					put(grammarAccess.getQualifiedExceptionNameAccess().getGroup(), "rule__QualifiedExceptionName__Group__0");
					put(grammarAccess.getQualifiedExceptionNameAccess().getGroup_0(), "rule__QualifiedExceptionName__Group_0__0");
					put(grammarAccess.getFindLogicalOrAccess().getGroup(), "rule__FindLogicalOr__Group__0");
					put(grammarAccess.getFindLogicalOrAccess().getGroup_1(), "rule__FindLogicalOr__Group_1__0");
					put(grammarAccess.getFindLogicalXorAccess().getGroup(), "rule__FindLogicalXor__Group__0");
					put(grammarAccess.getFindLogicalXorAccess().getGroup_1(), "rule__FindLogicalXor__Group_1__0");
					put(grammarAccess.getFindLogicalAndAccess().getGroup(), "rule__FindLogicalAnd__Group__0");
					put(grammarAccess.getFindLogicalAndAccess().getGroup_1(), "rule__FindLogicalAnd__Group_1__0");
					put(grammarAccess.getFindUnaryAccess().getGroup_0(), "rule__FindUnary__Group_0__0");
					put(grammarAccess.getFindUnaryAccess().getGroup_1(), "rule__FindUnary__Group_1__0");
					put(grammarAccess.getFindComparisonAccess().getGroup(), "rule__FindComparison__Group__0");
					put(grammarAccess.getFindNameAccess().getGroup(), "rule__FindName__Group__0");
					put(grammarAccess.getFindNameAccess().getGroup_1_0(), "rule__FindName__Group_1_0__0");
					put(grammarAccess.getFindNameAccess().getGroup_1_1(), "rule__FindName__Group_1_1__0");
					put(grammarAccess.getRangeExpressionAccess().getGroup(), "rule__RangeExpression__Group__0");
					put(grammarAccess.getRangeExpressionAccess().getGroup_1(), "rule__RangeExpression__Group_1__0");
					put(grammarAccess.getLogicalOrAccess().getGroup(), "rule__LogicalOr__Group__0");
					put(grammarAccess.getLogicalOrAccess().getGroup_1(), "rule__LogicalOr__Group_1__0");
					put(grammarAccess.getLogicalXorAccess().getGroup(), "rule__LogicalXor__Group__0");
					put(grammarAccess.getLogicalXorAccess().getGroup_1(), "rule__LogicalXor__Group_1__0");
					put(grammarAccess.getLogicalAndAccess().getGroup(), "rule__LogicalAnd__Group__0");
					put(grammarAccess.getLogicalAndAccess().getGroup_1(), "rule__LogicalAnd__Group_1__0");
					put(grammarAccess.getEqualityAccess().getGroup(), "rule__Equality__Group__0");
					put(grammarAccess.getEqualityAccess().getGroup_1(), "rule__Equality__Group_1__0");
					put(grammarAccess.getRelationalExpAccess().getGroup(), "rule__RelationalExp__Group__0");
					put(grammarAccess.getRelationalExpAccess().getGroup_1(), "rule__RelationalExp__Group_1__0");
					put(grammarAccess.getAdditiveExpAccess().getGroup(), "rule__AdditiveExp__Group__0");
					put(grammarAccess.getAdditiveExpAccess().getGroup_1(), "rule__AdditiveExp__Group_1__0");
					put(grammarAccess.getMultExpAccess().getGroup(), "rule__MultExp__Group__0");
					put(grammarAccess.getMultExpAccess().getGroup_1(), "rule__MultExp__Group_1__0");
					put(grammarAccess.getUnaryExpAccess().getGroup_0(), "rule__UnaryExp__Group_0__0");
					put(grammarAccess.getLinkExpressionAccess().getGroup_1(), "rule__LinkExpression__Group_1__0");
					put(grammarAccess.getNavigateExpressionAccess().getGroup(), "rule__NavigateExpression__Group__0");
					put(grammarAccess.getNavigateExpressionAccess().getGroup_1_0(), "rule__NavigateExpression__Group_1_0__0");
					put(grammarAccess.getNavigateExpressionAccess().getGroup_1_1(), "rule__NavigateExpression__Group_1_1__0");
					put(grammarAccess.getNavigateExpressionAccess().getGroup_1_2(), "rule__NavigateExpression__Group_1_2__0");
					put(grammarAccess.getNavigateExpressionAccess().getGroup_1_3(), "rule__NavigateExpression__Group_1_3__0");
					put(grammarAccess.getSortOrderAccess().getGroup(), "rule__SortOrder__Group__0");
					put(grammarAccess.getSortOrderAccess().getGroup_1(), "rule__SortOrder__Group_1__0");
					put(grammarAccess.getSortOrderAccess().getGroup_1_1(), "rule__SortOrder__Group_1_1__0");
					put(grammarAccess.getSortOrderComponentAccess().getGroup(), "rule__SortOrderComponent__Group__0");
					put(grammarAccess.getCreateExpressionAccess().getGroup(), "rule__CreateExpression__Group__0");
					put(grammarAccess.getCreateArgumentListAccess().getGroup(), "rule__CreateArgumentList__Group__0");
					put(grammarAccess.getCreateArgumentListAccess().getGroup_2(), "rule__CreateArgumentList__Group_2__0");
					put(grammarAccess.getCreateArgumentListAccess().getGroup_2_1(), "rule__CreateArgumentList__Group_2_1__0");
					put(grammarAccess.getCreateArgumentAccess().getGroup_0(), "rule__CreateArgument__Group_0__0");
					put(grammarAccess.getCreateArgumentAccess().getGroup_1(), "rule__CreateArgument__Group_1__0");
					put(grammarAccess.getFindExpressionAccess().getGroup(), "rule__FindExpression__Group__0");
					put(grammarAccess.getWhereClauseAccess().getGroup(), "rule__WhereClause__Group__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup(), "rule__PostfixExpression__Group__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_0(), "rule__PostfixExpression__Group_1_0__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1(), "rule__PostfixExpression__Group_1_1__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_2(), "rule__PostfixExpression__Group_1_2__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_3(), "rule__PostfixExpression__Group_1_3__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_4(), "rule__PostfixExpression__Group_1_4__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_0(), "rule__PostfixExpression__Group_1_4_0__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_5(), "rule__PostfixExpression__Group_1_5__0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getGroup(), "rule__PostfixNoCallExpression__Group__0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_0(), "rule__PostfixNoCallExpression__Group_1_0__0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_1(), "rule__PostfixNoCallExpression__Group_1_1__0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_2(), "rule__PostfixNoCallExpression__Group_1_2__0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getGroup_1_3(), "rule__PostfixNoCallExpression__Group_1_3__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_0(), "rule__PrimaryExpression__Group_0__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_2(), "rule__PrimaryExpression__Group_2__0");
					put(grammarAccess.getTypeNameExpressionAccess().getGroup_0(), "rule__TypeNameExpression__Group_0__0");
					put(grammarAccess.getNameExpressionAccess().getGroup(), "rule__NameExpression__Group__0");
					put(grammarAccess.getNameExpressionAccess().getGroup_0(), "rule__NameExpression__Group_0__0");
					put(grammarAccess.getParenthesisedExpressionAccess().getGroup(), "rule__ParenthesisedExpression__Group__0");
					put(grammarAccess.getParenthesisedExpressionAccess().getGroup_2(), "rule__ParenthesisedExpression__Group_2__0");
					put(grammarAccess.getArgumentListAccess().getGroup(), "rule__ArgumentList__Group__0");
					put(grammarAccess.getArgumentListAccess().getGroup_1(), "rule__ArgumentList__Group_1__0");
					put(grammarAccess.getArgumentListAccess().getGroup_1_1(), "rule__ArgumentList__Group_1_1__0");
					put(grammarAccess.getTypeReferenceAccess().getCAssignment_2(), "rule__TypeReference__CAssignment_2");
					put(grammarAccess.getArrayBoundsAccess().getEAssignment_1(), "rule__ArrayBounds__EAssignment_1");
					put(grammarAccess.getCollectionTypeRefAccess().getEAssignment_0_2_1(), "rule__CollectionTypeRef__EAssignment_0_2_1");
					put(grammarAccess.getCollectionTypeRefAccess().getTAssignment_0_4(), "rule__CollectionTypeRef__TAssignment_0_4");
					put(grammarAccess.getCollectionTypeRefAccess().getAAssignment_1_2(), "rule__CollectionTypeRef__AAssignment_1_2");
					put(grammarAccess.getCollectionTypeRefAccess().getTAssignment_1_4(), "rule__CollectionTypeRef__TAssignment_1_4");
					put(grammarAccess.getCollectionTypeRefAccess().getTAssignment_2_3(), "rule__CollectionTypeRef__TAssignment_2_3");
					put(grammarAccess.getCollectionTypeRefAccess().getTAssignment_3_3(), "rule__CollectionTypeRef__TAssignment_3_3");
					put(grammarAccess.getCollectionTypeRefAccess().getDAssignment_4_3_2(), "rule__CollectionTypeRef__DAssignment_4_3_2");
					put(grammarAccess.getDictKeyTypeAccess().getNAssignment_0(), "rule__DictKeyType__NAssignment_0");
					put(grammarAccess.getDictKeyTypeAccess().getIAssignment_1(), "rule__DictKeyType__IAssignment_1");
					put(grammarAccess.getDictValueTypeAccess().getTAssignment(), "rule__DictValueType__TAssignment");
					put(grammarAccess.getRelationshipSpecAccess().getRAssignment_0(), "rule__RelationshipSpec__RAssignment_0");
					put(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_1(), "rule__RelationshipSpec__RAssignment_1_1");
					put(grammarAccess.getRelationshipSpecAccess().getRAssignment_1_2_1(), "rule__RelationshipSpec__RAssignment_1_2_1");
					put(grammarAccess.getStateTypeAccess().getSAssignment_1(), "rule__StateType__SAssignment_1");
					put(grammarAccess.getParameterListAccess().getPAssignment_2(), "rule__ParameterList__PAssignment_2");
					put(grammarAccess.getParameterListAccess().getPAssignment_3_1(), "rule__ParameterList__PAssignment_3_1");
					put(grammarAccess.getServiceVisibilityAccess().getVAssignment_1(), "rule__ServiceVisibility__VAssignment_1");
					put(grammarAccess.getDomainServiceDefinitionAccess().getSAssignment_0(), "rule__DomainServiceDefinition__SAssignment_0");
					put(grammarAccess.getDomainServiceDefinitionAccess().getPAssignment_5(), "rule__DomainServiceDefinition__PAssignment_5");
					put(grammarAccess.getDomainServiceDefinitionAccess().getCAssignment_7(), "rule__DomainServiceDefinition__CAssignment_7");
					put(grammarAccess.getDomainFunctionDefinitionAccess().getSAssignment_0(), "rule__DomainFunctionDefinition__SAssignment_0");
					put(grammarAccess.getDomainFunctionDefinitionAccess().getPAssignment_5(), "rule__DomainFunctionDefinition__PAssignment_5");
					put(grammarAccess.getDomainFunctionDefinitionAccess().getRAssignment_7(), "rule__DomainFunctionDefinition__RAssignment_7");
					put(grammarAccess.getDomainFunctionDefinitionAccess().getCAssignment_9(), "rule__DomainFunctionDefinition__CAssignment_9");
					put(grammarAccess.getObjectServiceDefinitionAccess().getSAssignment_0(), "rule__ObjectServiceDefinition__SAssignment_0");
					put(grammarAccess.getObjectServiceDefinitionAccess().getPAssignment_8(), "rule__ObjectServiceDefinition__PAssignment_8");
					put(grammarAccess.getObjectServiceDefinitionAccess().getCAssignment_10(), "rule__ObjectServiceDefinition__CAssignment_10");
					put(grammarAccess.getTerminatorServiceDefinitionAccess().getSAssignment_0(), "rule__TerminatorServiceDefinition__SAssignment_0");
					put(grammarAccess.getTerminatorServiceDefinitionAccess().getPAssignment_7(), "rule__TerminatorServiceDefinition__PAssignment_7");
					put(grammarAccess.getTerminatorServiceDefinitionAccess().getCAssignment_9(), "rule__TerminatorServiceDefinition__CAssignment_9");
					put(grammarAccess.getTerminatorFunctionDefinitionAccess().getSAssignment_0(), "rule__TerminatorFunctionDefinition__SAssignment_0");
					put(grammarAccess.getTerminatorFunctionDefinitionAccess().getPAssignment_7(), "rule__TerminatorFunctionDefinition__PAssignment_7");
					put(grammarAccess.getTerminatorFunctionDefinitionAccess().getRAssignment_9(), "rule__TerminatorFunctionDefinition__RAssignment_9");
					put(grammarAccess.getTerminatorFunctionDefinitionAccess().getCAssignment_11(), "rule__TerminatorFunctionDefinition__CAssignment_11");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getVAssignment_0(), "rule__ObjectFunctionDefinition__VAssignment_0");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getSAssignment_1(), "rule__ObjectFunctionDefinition__SAssignment_1");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getPAssignment_8(), "rule__ObjectFunctionDefinition__PAssignment_8");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getRAssignment_10(), "rule__ObjectFunctionDefinition__RAssignment_10");
					put(grammarAccess.getObjectFunctionDefinitionAccess().getCAssignment_12(), "rule__ObjectFunctionDefinition__CAssignment_12");
					put(grammarAccess.getStateDefinitionAccess().getSAssignment_0(), "rule__StateDefinition__SAssignment_0");
					put(grammarAccess.getStateDefinitionAccess().getPAssignment_7(), "rule__StateDefinition__PAssignment_7");
					put(grammarAccess.getStateDefinitionAccess().getCAssignment_9(), "rule__StateDefinition__CAssignment_9");
					put(grammarAccess.getStatementListAccess().getSAssignment_1(), "rule__StatementList__SAssignment_1");
					put(grammarAccess.getStatementAccess().getCAssignment_1_0(), "rule__Statement__CAssignment_1_0");
					put(grammarAccess.getStatementAccess().getEAssignment_1_1_0(), "rule__Statement__EAssignment_1_1_0");
					put(grammarAccess.getStatementAccess().getSAssignment_1_2_0(), "rule__Statement__SAssignment_1_2_0");
					put(grammarAccess.getStatementAccess().getNAssignment_1_3_0(), "rule__Statement__NAssignment_1_3_0");
					put(grammarAccess.getStatementAccess().getCAssignment_1_4_0(), "rule__Statement__CAssignment_1_4_0");
					put(grammarAccess.getStatementAccess().getEAssignment_1_5(), "rule__Statement__EAssignment_1_5");
					put(grammarAccess.getStatementAccess().getRAssignment_1_6(), "rule__Statement__RAssignment_1_6");
					put(grammarAccess.getStatementAccess().getDAssignment_1_7(), "rule__Statement__DAssignment_1_7");
					put(grammarAccess.getStatementAccess().getDAssignment_1_9(), "rule__Statement__DAssignment_1_9");
					put(grammarAccess.getStatementAccess().getEAssignment_1_10(), "rule__Statement__EAssignment_1_10");
					put(grammarAccess.getStatementAccess().getLAssignment_1_11(), "rule__Statement__LAssignment_1_11");
					put(grammarAccess.getStatementAccess().getSAssignment_1_12(), "rule__Statement__SAssignment_1_12");
					put(grammarAccess.getStatementAccess().getCAssignment_1_13(), "rule__Statement__CAssignment_1_13");
					put(grammarAccess.getStatementAccess().getGAssignment_1_14(), "rule__Statement__GAssignment_1_14");
					put(grammarAccess.getStatementAccess().getIAssignment_1_15(), "rule__Statement__IAssignment_1_15");
					put(grammarAccess.getStatementAccess().getCAssignment_1_16(), "rule__Statement__CAssignment_1_16");
					put(grammarAccess.getStatementAccess().getFAssignment_1_17(), "rule__Statement__FAssignment_1_17");
					put(grammarAccess.getStatementAccess().getWAssignment_1_18(), "rule__Statement__WAssignment_1_18");
					put(grammarAccess.getAssignStatementAccess().getLhsAssignment_0(), "rule__AssignStatement__LhsAssignment_0");
					put(grammarAccess.getAssignStatementAccess().getRhsAssignment_2(), "rule__AssignStatement__RhsAssignment_2");
					put(grammarAccess.getStreamStatementAccess().getEAssignment_0(), "rule__StreamStatement__EAssignment_0");
					put(grammarAccess.getStreamStatementAccess().getSAssignment_1(), "rule__StreamStatement__SAssignment_1");
					put(grammarAccess.getCallStatementAccess().getPAssignment_0(), "rule__CallStatement__PAssignment_0");
					put(grammarAccess.getCallStatementAccess().getEAssignment_1_0_2_1(), "rule__CallStatement__EAssignment_1_0_2_1");
					put(grammarAccess.getCallStatementAccess().getCAssignment_1_0_3_1(), "rule__CallStatement__CAssignment_1_0_3_1");
					put(grammarAccess.getCallStatementAccess().getAAssignment_1_2(), "rule__CallStatement__AAssignment_1_2");
					put(grammarAccess.getExitStatementAccess().getCAssignment_2_1(), "rule__ExitStatement__CAssignment_2_1");
					put(grammarAccess.getLinkStatementAccess().getN1Assignment_1(), "rule__LinkStatement__N1Assignment_1");
					put(grammarAccess.getLinkStatementAccess().getRAssignment_2(), "rule__LinkStatement__RAssignment_2");
					put(grammarAccess.getLinkStatementAccess().getN2Assignment_3_0(), "rule__LinkStatement__N2Assignment_3_0");
					put(grammarAccess.getLinkStatementAccess().getN3Assignment_3_1_1(), "rule__LinkStatement__N3Assignment_3_1_1");
					put(grammarAccess.getScheduleStatementAccess().getGAssignment_2(), "rule__ScheduleStatement__GAssignment_2");
					put(grammarAccess.getScheduleStatementAccess().getEAssignment_4(), "rule__ScheduleStatement__EAssignment_4");
					put(grammarAccess.getScheduleStatementAccess().getEAssignment_5_1(), "rule__ScheduleStatement__EAssignment_5_1");
					put(grammarAccess.getGenerateStatementAccess().getEAssignment_5_1(), "rule__GenerateStatement__EAssignment_5_1");
					put(grammarAccess.getIfStatementAccess().getCAssignment_1(), "rule__IfStatement__CAssignment_1");
					put(grammarAccess.getIfStatementAccess().getSAssignment_3(), "rule__IfStatement__SAssignment_3");
					put(grammarAccess.getIfStatementAccess().getE1Assignment_4(), "rule__IfStatement__E1Assignment_4");
					put(grammarAccess.getIfStatementAccess().getE2Assignment_5(), "rule__IfStatement__E2Assignment_5");
					put(grammarAccess.getElsifBlockAccess().getCAssignment_1(), "rule__ElsifBlock__CAssignment_1");
					put(grammarAccess.getElsifBlockAccess().getSAssignment_3(), "rule__ElsifBlock__SAssignment_3");
					put(grammarAccess.getWhileStatementAccess().getCAssignment_1(), "rule__WhileStatement__CAssignment_1");
					put(grammarAccess.getWhileStatementAccess().getSAssignment_3(), "rule__WhileStatement__SAssignment_3");
					put(grammarAccess.getCaseStatementAccess().getC1Assignment_3(), "rule__CaseStatement__C1Assignment_3");
					put(grammarAccess.getCaseStatementAccess().getC2Assignment_4(), "rule__CaseStatement__C2Assignment_4");
					put(grammarAccess.getCaseAlternativeAccess().getSAssignment_3(), "rule__CaseAlternative__SAssignment_3");
					put(grammarAccess.getChoiceListAccess().getEAssignment_0(), "rule__ChoiceList__EAssignment_0");
					put(grammarAccess.getChoiceListAccess().getEAssignment_1_1(), "rule__ChoiceList__EAssignment_1_1");
					put(grammarAccess.getForStatementAccess().getSAssignment_3(), "rule__ForStatement__SAssignment_3");
					put(grammarAccess.getCodeBlockStatementAccess().getVAssignment_0_1(), "rule__CodeBlockStatement__VAssignment_0_1");
					put(grammarAccess.getCodeBlockStatementAccess().getSAssignment_2(), "rule__CodeBlockStatement__SAssignment_2");
					put(grammarAccess.getCodeBlockStatementAccess().getEAssignment_3_1(), "rule__CodeBlockStatement__EAssignment_3_1");
					put(grammarAccess.getCodeBlockStatementAccess().getPAssignment_3_2(), "rule__CodeBlockStatement__PAssignment_3_2");
					put(grammarAccess.getCodeBlockAccess().getVAssignment_0(), "rule__CodeBlock__VAssignment_0");
					put(grammarAccess.getCodeBlockAccess().getSAssignment_2(), "rule__CodeBlock__SAssignment_2");
					put(grammarAccess.getCodeBlockAccess().getEAssignment_3_1(), "rule__CodeBlock__EAssignment_3_1");
					put(grammarAccess.getCodeBlockAccess().getOAssignment_3_2(), "rule__CodeBlock__OAssignment_3_2");
					put(grammarAccess.getVariableDeclarationAccess().getTAssignment_3(), "rule__VariableDeclaration__TAssignment_3");
					put(grammarAccess.getVariableDeclarationAccess().getEAssignment_4_1(), "rule__VariableDeclaration__EAssignment_4_1");
					put(grammarAccess.getFindConditionAccess().getFAssignment(), "rule__FindCondition__FAssignment");
					put(grammarAccess.getFindLogicalOrAccess().getFAssignment_0(), "rule__FindLogicalOr__FAssignment_0");
					put(grammarAccess.getFindLogicalOrAccess().getFAssignment_1_1(), "rule__FindLogicalOr__FAssignment_1_1");
					put(grammarAccess.getFindLogicalXorAccess().getFAssignment_0(), "rule__FindLogicalXor__FAssignment_0");
					put(grammarAccess.getFindLogicalXorAccess().getFAssignment_1_1(), "rule__FindLogicalXor__FAssignment_1_1");
					put(grammarAccess.getFindLogicalAndAccess().getFAssignment_0(), "rule__FindLogicalAnd__FAssignment_0");
					put(grammarAccess.getFindLogicalAndAccess().getFAssignment_1_1(), "rule__FindLogicalAnd__FAssignment_1_1");
					put(grammarAccess.getFindComparisonAccess().getFAssignment_0(), "rule__FindComparison__FAssignment_0");
					put(grammarAccess.getFindComparisonAccess().getAAssignment_2(), "rule__FindComparison__AAssignment_2");
					put(grammarAccess.getFindNameAccess().getI1Assignment_0(), "rule__FindName__I1Assignment_0");
					put(grammarAccess.getFindNameAccess().getI2Assignment_1_0_1(), "rule__FindName__I2Assignment_1_0_1");
					put(grammarAccess.getFindNameAccess().getEAssignment_1_1_1(), "rule__FindName__EAssignment_1_1_1");
					put(grammarAccess.getExpressionAccess().getRAssignment(), "rule__Expression__RAssignment");
					put(grammarAccess.getRangeExpressionAccess().getLAssignment_0(), "rule__RangeExpression__LAssignment_0");
					put(grammarAccess.getRangeExpressionAccess().getLAssignment_1_1(), "rule__RangeExpression__LAssignment_1_1");
					put(grammarAccess.getLogicalOrAccess().getLAssignment_0(), "rule__LogicalOr__LAssignment_0");
					put(grammarAccess.getLogicalOrAccess().getLAssignment_1_1(), "rule__LogicalOr__LAssignment_1_1");
					put(grammarAccess.getLogicalXorAccess().getLAssignment_0(), "rule__LogicalXor__LAssignment_0");
					put(grammarAccess.getLogicalXorAccess().getLAssignment_1_1(), "rule__LogicalXor__LAssignment_1_1");
					put(grammarAccess.getLogicalAndAccess().getEAssignment_0(), "rule__LogicalAnd__EAssignment_0");
					put(grammarAccess.getLogicalAndAccess().getEAssignment_1_1(), "rule__LogicalAnd__EAssignment_1_1");
					put(grammarAccess.getEqualityAccess().getRAssignment_0(), "rule__Equality__RAssignment_0");
					put(grammarAccess.getEqualityAccess().getRAssignment_1_1(), "rule__Equality__RAssignment_1_1");
					put(grammarAccess.getRelationalExpAccess().getAAssignment_0(), "rule__RelationalExp__AAssignment_0");
					put(grammarAccess.getRelationalExpAccess().getAAssignment_1_1(), "rule__RelationalExp__AAssignment_1_1");
					put(grammarAccess.getAdditiveExpAccess().getMAssignment_0(), "rule__AdditiveExp__MAssignment_0");
					put(grammarAccess.getAdditiveExpAccess().getMAssignment_1_1(), "rule__AdditiveExp__MAssignment_1_1");
					put(grammarAccess.getMultExpAccess().getUAssignment_0(), "rule__MultExp__UAssignment_0");
					put(grammarAccess.getMultExpAccess().getUAssignment_1_1(), "rule__MultExp__UAssignment_1_1");
					put(grammarAccess.getLinkExpressionAccess().getN1Assignment_0(), "rule__LinkExpression__N1Assignment_0");
					put(grammarAccess.getLinkExpressionAccess().getN2Assignment_1_1(), "rule__LinkExpression__N2Assignment_1_1");
					put(grammarAccess.getLinkExpressionAccess().getRAssignment_1_2(), "rule__LinkExpression__RAssignment_1_2");
					put(grammarAccess.getLinkExpressionAccess().getN3Assignment_1_3(), "rule__LinkExpression__N3Assignment_1_3");
					put(grammarAccess.getNavigateExpressionAccess().getEAssignment_0(), "rule__NavigateExpression__EAssignment_0");
					put(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_0_1(), "rule__NavigateExpression__RAssignment_1_0_1");
					put(grammarAccess.getNavigateExpressionAccess().getWAssignment_1_0_2(), "rule__NavigateExpression__WAssignment_1_0_2");
					put(grammarAccess.getNavigateExpressionAccess().getEAssignment_1_1_1(), "rule__NavigateExpression__EAssignment_1_1_1");
					put(grammarAccess.getNavigateExpressionAccess().getRAssignment_1_1_3(), "rule__NavigateExpression__RAssignment_1_1_3");
					put(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_0(), "rule__CreateArgumentList__CAssignment_2_0");
					put(grammarAccess.getCreateArgumentListAccess().getCAssignment_2_1_1(), "rule__CreateArgumentList__CAssignment_2_1_1");
					put(grammarAccess.getCreateArgumentAccess().getAAssignment_0_0(), "rule__CreateArgument__AAssignment_0_0");
					put(grammarAccess.getCreateArgumentAccess().getEAssignment_0_2(), "rule__CreateArgument__EAssignment_0_2");
					put(grammarAccess.getCreateArgumentAccess().getSAssignment_1_2(), "rule__CreateArgument__SAssignment_1_2");
					put(grammarAccess.getFindExpressionAccess().getPAssignment_1(), "rule__FindExpression__PAssignment_1");
					put(grammarAccess.getFindExpressionAccess().getWAssignment_2(), "rule__FindExpression__WAssignment_2");
					put(grammarAccess.getPostfixExpressionAccess().getPAssignment_0(), "rule__PostfixExpression__PAssignment_0");
					put(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_0_1(), "rule__PostfixExpression__AAssignment_1_0_1");
					put(grammarAccess.getPostfixExpressionAccess().getEAssignment_1_3_1(), "rule__PostfixExpression__EAssignment_1_3_1");
					put(grammarAccess.getPostfixExpressionAccess().getAAssignment_1_4_4(), "rule__PostfixExpression__AAssignment_1_4_4");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getPAssignment_0(), "rule__PostfixNoCallExpression__PAssignment_0");
					put(grammarAccess.getPostfixNoCallExpressionAccess().getEAssignment_1_2_1(), "rule__PostfixNoCallExpression__EAssignment_1_2_1");
					put(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_1(), "rule__ParenthesisedExpression__EAssignment_1");
					put(grammarAccess.getParenthesisedExpressionAccess().getEAssignment_2_1(), "rule__ParenthesisedExpression__EAssignment_2_1");
					put(grammarAccess.getArgumentListAccess().getE1Assignment_1_0(), "rule__ArgumentList__E1Assignment_1_0");
					put(grammarAccess.getArgumentListAccess().getE1Assignment_1_1_1(), "rule__ArgumentList__E1Assignment_1_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalMASLParser typedParser = (InternalMASLParser) parser;
			typedParser.entryRuledefinition();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_COMMENT", "RULE_WHITESPACE" };
	}

	public MASLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MASLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
