/*
 * generated by Xtext 2.39.0
 */
parser grammar InternalMASLParser;

options {
	tokenVocab=InternalMASLLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package org.xtuml.bp.xtext.masl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtuml.bp.xtext.masl.services.MASLGrammarAccess;

}
@members {
	private MASLGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("Apostrophe", "'\''");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("AsteriskAsterisk", "'**'");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("SolidusEqualsSign", "'/='");
		tokenNameToValue.put("ColonColon", "'::'");
		tokenNameToValue.put("ColonEqualsSign", "':='");
		tokenNameToValue.put("LessThanSignLessThanSign", "'<<'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("GreaterThanSignGreaterThanSign", "'>>'");
		tokenNameToValue.put("At", "'at'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("TildeGreaterThanSign", "'~>'");
		tokenNameToValue.put("LessThanSignLessThanSignLessThanSign", "'<<<'");
		tokenNameToValue.put("GreaterThanSignGreaterThanSignGreaterThanSign", "'>>>'");
		tokenNameToValue.put("Abs", "'abs'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Bag", "'bag'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Mod", "'mod'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("One", "'one'");
		tokenNameToValue.put("Out", "'out'");
		tokenNameToValue.put("Rem", "'rem'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Xor", "'xor'");
		tokenNameToValue.put("Case", "'case'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Endl", "'endl'");
		tokenNameToValue.put("Enum", "'enum'");
		tokenNameToValue.put("Exit", "'exit'");
		tokenNameToValue.put("Find", "'find'");
		tokenNameToValue.put("Is_a", "'is_a'");
		tokenNameToValue.put("Link", "'link'");
		tokenNameToValue.put("Loop", "'loop'");
		tokenNameToValue.put("Many", "'many'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("Then", "'then'");
		tokenNameToValue.put("This", "'this'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("When", "'when'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Array", "'array'");
		tokenNameToValue.put("Begin", "'begin'");
		tokenNameToValue.put("Delay", "'delay'");
		tokenNameToValue.put("Delta", "'delta'");
		tokenNameToValue.put("Elsif", "'elsif'");
		tokenNameToValue.put("Erase", "'erase'");
		tokenNameToValue.put("Event", "'event'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Flush", "'flush'");
		tokenNameToValue.put("Raise", "'raise'");
		tokenNameToValue.put("Range", "'range'");
		tokenNameToValue.put("Start", "'start'");
		tokenNameToValue.put("State", "'state'");
		tokenNameToValue.put("Union", "'union'");
		tokenNameToValue.put("Using", "'using'");
		tokenNameToValue.put("While", "'while'");
		tokenNameToValue.put("FILE", "'#FILE#'");
		tokenNameToValue.put("LINE", "'#LINE#'");
		tokenNameToValue.put("Ignore", "'Ignore'");
		tokenNameToValue.put("Cancel", "'cancel'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Delete", "'delete'");
		tokenNameToValue.put("Digits", "'digits'");
		tokenNameToValue.put("Domain", "'domain'");
		tokenNameToValue.put("Not_in", "'not_in'");
		tokenNameToValue.put("Object", "'object'");
		tokenNameToValue.put("Others", "'others'");
		tokenNameToValue.put("Pragma", "'pragma'");
		tokenNameToValue.put("Public", "'public'");
		tokenNameToValue.put("Return", "'return'");
		tokenNameToValue.put("Unique", "'unique'");
		tokenNameToValue.put("Unlink", "'unlink'");
		tokenNameToValue.put("Builtin", "'builtin'");
		tokenNameToValue.put("Console", "'console'");
		tokenNameToValue.put("Declare", "'declare'");
		tokenNameToValue.put("Private", "'private'");
		tokenNameToValue.put("Project", "'project'");
		tokenNameToValue.put("Reverse", "'reverse'");
		tokenNameToValue.put("Service", "'service'");
		tokenNameToValue.put("Subtype", "'subtype'");
		tokenNameToValue.put("Assigner", "'assigner'");
		tokenNameToValue.put("Creation", "'creation'");
		tokenNameToValue.put("Deferred", "'deferred'");
		tokenNameToValue.put("Disunion", "'disunion'");
		tokenNameToValue.put("Find_all", "'find_all'");
		tokenNameToValue.put("Find_one", "'find_one'");
		tokenNameToValue.put("Function", "'function'");
		tokenNameToValue.put("Generate", "'generate'");
		tokenNameToValue.put("Instance", "'instance'");
		tokenNameToValue.put("Readonly", "'readonly'");
		tokenNameToValue.put("Schedule", "'schedule'");
		tokenNameToValue.put("Sequence", "'sequence'");
		tokenNameToValue.put("Terminal", "'terminal'");
		tokenNameToValue.put("Anonymous", "'anonymous'");
		tokenNameToValue.put("Exception", "'exception'");
		tokenNameToValue.put("Find_only", "'find_only'");
		tokenNameToValue.put("Preferred", "'preferred'");
		tokenNameToValue.put("Structure", "'structure'");
		tokenNameToValue.put("Dictionary", "'dictionary'");
		tokenNameToValue.put("Identifier", "'identifier'");
		tokenNameToValue.put("Ordered_by", "'ordered_by'");
		tokenNameToValue.put("Terminator", "'terminator'");
		tokenNameToValue.put("Transition", "'transition'");
		tokenNameToValue.put("Referential", "'referential'");
		tokenNameToValue.put("Non_Existant", "'Non_Existant'");
		tokenNameToValue.put("Non_Existent", "'Non_Existent'");
		tokenNameToValue.put("Intersection", "'intersection'");
		tokenNameToValue.put("Non_existant", "'non_existant'");
		tokenNameToValue.put("Non_existent", "'non_existent'");
		tokenNameToValue.put("Relationship", "'relationship'");
		tokenNameToValue.put("Cannot_Happen", "'Cannot_Happen'");
		tokenNameToValue.put("Current_State", "'Current_State'");
		tokenNameToValue.put("Cannot_happen", "'cannot_happen'");
		tokenNameToValue.put("Conditionally", "'conditionally'");
		tokenNameToValue.put("Unconditionally", "'unconditionally'");
		tokenNameToValue.put("Reverse_ordered_by", "'reverse_ordered_by'");
	}

	public void setGrammarAccess(MASLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleMaslModel
entryRuleMaslModel
:
{ before(grammarAccess.getMaslModelRule()); }
	 ruleMaslModel
{ after(grammarAccess.getMaslModelRule()); } 
	 EOF 
;

// Rule MaslModel
ruleMaslModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaslModelAccess().getAlternatives()); }
		(rule__MaslModel__Alternatives)
		{ after(grammarAccess.getMaslModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTopLevelElement
entryRuleAbstractTopLevelElement
:
{ before(grammarAccess.getAbstractTopLevelElementRule()); }
	 ruleAbstractTopLevelElement
{ after(grammarAccess.getAbstractTopLevelElementRule()); } 
	 EOF 
;

// Rule AbstractTopLevelElement
ruleAbstractTopLevelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getAlternatives()); }
		(rule__AbstractTopLevelElement__Alternatives)
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopedName
entryRuleScopedName
:
{ before(grammarAccess.getScopedNameRule()); }
	 ruleScopedName
{ after(grammarAccess.getScopedNameRule()); } 
	 EOF 
;

// Rule ScopedName
ruleScopedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopedNameAccess().getGroup()); }
		(rule__ScopedName__Group__0)
		{ after(grammarAccess.getScopedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PragmaList
rulePragmaList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaListAccess().getGroup()); }
		(rule__PragmaList__Group__0)*
		{ after(grammarAccess.getPragmaListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePragma
entryRulePragma
:
{ before(grammarAccess.getPragmaRule()); }
	 rulePragma
{ after(grammarAccess.getPragmaRule()); } 
	 EOF 
;

// Rule Pragma
rulePragma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaAccess().getGroup()); }
		(rule__Pragma__Group__0)
		{ after(grammarAccess.getPragmaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePragmaValue
entryRulePragmaValue
:
{ before(grammarAccess.getPragmaValueRule()); }
	 rulePragmaValue
{ after(grammarAccess.getPragmaValueRule()); } 
	 EOF 
;

// Rule PragmaValue
rulePragmaValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaValueAccess().getAlternatives()); }
		(rule__PragmaValue__Alternatives)
		{ after(grammarAccess.getPragmaValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectDefinition
entryRuleProjectDefinition
:
{ before(grammarAccess.getProjectDefinitionRule()); }
	 ruleProjectDefinition
{ after(grammarAccess.getProjectDefinitionRule()); } 
	 EOF 
;

// Rule ProjectDefinition
ruleProjectDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectDefinitionAccess().getGroup()); }
		(rule__ProjectDefinition__Group__0)
		{ after(grammarAccess.getProjectDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainDefinition
entryRuleDomainDefinition
:
{ before(grammarAccess.getDomainDefinitionRule()); }
	 ruleDomainDefinition
{ after(grammarAccess.getDomainDefinitionRule()); } 
	 EOF 
;

// Rule DomainDefinition
ruleDomainDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getGroup()); }
		(rule__DomainDefinition__Group__0)
		{ after(grammarAccess.getDomainDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinLibraryDefinition
entryRuleBuiltinLibraryDefinition
:
{ before(grammarAccess.getBuiltinLibraryDefinitionRule()); }
	 ruleBuiltinLibraryDefinition
{ after(grammarAccess.getBuiltinLibraryDefinitionRule()); } 
	 EOF 
;

// Rule BuiltinLibraryDefinition
ruleBuiltinLibraryDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getGroup()); }
		(rule__BuiltinLibraryDefinition__Group__0)
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinTypeDeclaration
entryRuleBuiltinTypeDeclaration
:
{ before(grammarAccess.getBuiltinTypeDeclarationRule()); }
	 ruleBuiltinTypeDeclaration
{ after(grammarAccess.getBuiltinTypeDeclarationRule()); } 
	 EOF 
;

// Rule BuiltinTypeDeclaration
ruleBuiltinTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getAlternatives()); }
		(rule__BuiltinTypeDeclaration__Alternatives)
		{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic
:
{ before(grammarAccess.getCharacteristicRule()); }
	 ruleCharacteristic
{ after(grammarAccess.getCharacteristicRule()); } 
	 EOF 
;

// Rule Characteristic
ruleCharacteristic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicAccess().getGroup()); }
		(rule__Characteristic__Group__0)
		{ after(grammarAccess.getCharacteristicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeParameter
entryRuleTypeParameter
:
{ before(grammarAccess.getTypeParameterRule()); }
	 ruleTypeParameter
{ after(grammarAccess.getTypeParameterRule()); } 
	 EOF 
;

// Rule TypeParameter
ruleTypeParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeParameterAccess().getGroup()); }
		(rule__TypeParameter__Group__0)
		{ after(grammarAccess.getTypeParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTypeReferenceWithRange
entryRuleAbstractTypeReferenceWithRange
:
{ before(grammarAccess.getAbstractTypeReferenceWithRangeRule()); }
	 ruleAbstractTypeReferenceWithRange
{ after(grammarAccess.getAbstractTypeReferenceWithRangeRule()); } 
	 EOF 
;

// Rule AbstractTypeReferenceWithRange
ruleAbstractTypeReferenceWithRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getAlternatives()); }
		(rule__AbstractTypeReferenceWithRange__Alternatives)
		{ after(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeTypeReference
entryRuleRangeTypeReference
:
{ before(grammarAccess.getRangeTypeReferenceRule()); }
	 ruleRangeTypeReference
{ after(grammarAccess.getRangeTypeReferenceRule()); } 
	 EOF 
;

// Rule RangeTypeReference
ruleRangeTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeTypeReferenceAccess().getGroup()); }
		(rule__RangeTypeReference__Group__0)
		{ after(grammarAccess.getRangeTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExceptionDeclaration
entryRuleExceptionDeclaration
:
{ before(grammarAccess.getExceptionDeclarationRule()); }
	 ruleExceptionDeclaration
{ after(grammarAccess.getExceptionDeclarationRule()); } 
	 EOF 
;

// Rule ExceptionDeclaration
ruleExceptionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionDeclarationAccess().getGroup()); }
		(rule__ExceptionDeclaration__Group__0)
		{ after(grammarAccess.getExceptionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeForwardDeclaration
entryRuleTypeForwardDeclaration
:
{ before(grammarAccess.getTypeForwardDeclarationRule()); }
	 ruleTypeForwardDeclaration
{ after(grammarAccess.getTypeForwardDeclarationRule()); } 
	 EOF 
;

// Rule TypeForwardDeclaration
ruleTypeForwardDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getGroup()); }
		(rule__TypeForwardDeclaration__Group__0)
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
		(rule__TypeDeclaration__Group__0)
		{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTypeDefinition
entryRuleAbstractTypeDefinition
:
{ before(grammarAccess.getAbstractTypeDefinitionRule()); }
	 ruleAbstractTypeDefinition
{ after(grammarAccess.getAbstractTypeDefinitionRule()); } 
	 EOF 
;

// Rule AbstractTypeDefinition
ruleAbstractTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getAlternatives()); }
		(rule__AbstractTypeDefinition__Alternatives)
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstrainedTypeDefinition
entryRuleConstrainedTypeDefinition
:
{ before(grammarAccess.getConstrainedTypeDefinitionRule()); }
	 ruleConstrainedTypeDefinition
{ after(grammarAccess.getConstrainedTypeDefinitionRule()); } 
	 EOF 
;

// Rule ConstrainedTypeDefinition
ruleConstrainedTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainedTypeDefinitionAccess().getGroup()); }
		(rule__ConstrainedTypeDefinition__Group__0)
		{ after(grammarAccess.getConstrainedTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTypeConstraint
entryRuleAbstractTypeConstraint
:
{ before(grammarAccess.getAbstractTypeConstraintRule()); }
	 ruleAbstractTypeConstraint
{ after(grammarAccess.getAbstractTypeConstraintRule()); } 
	 EOF 
;

// Rule AbstractTypeConstraint
ruleAbstractTypeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeConstraintAccess().getAlternatives()); }
		(rule__AbstractTypeConstraint__Alternatives)
		{ after(grammarAccess.getAbstractTypeConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeConstraint
entryRuleRangeConstraint
:
{ before(grammarAccess.getRangeConstraintRule()); }
	 ruleRangeConstraint
{ after(grammarAccess.getRangeConstraintRule()); } 
	 EOF 
;

// Rule RangeConstraint
ruleRangeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeConstraintAccess().getGroup()); }
		(rule__RangeConstraint__Group__0)
		{ after(grammarAccess.getRangeConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeltaConstraint
entryRuleDeltaConstraint
:
{ before(grammarAccess.getDeltaConstraintRule()); }
	 ruleDeltaConstraint
{ after(grammarAccess.getDeltaConstraintRule()); } 
	 EOF 
;

// Rule DeltaConstraint
ruleDeltaConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeltaConstraintAccess().getGroup()); }
		(rule__DeltaConstraint__Group__0)
		{ after(grammarAccess.getDeltaConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDigitsConstraint
entryRuleDigitsConstraint
:
{ before(grammarAccess.getDigitsConstraintRule()); }
	 ruleDigitsConstraint
{ after(grammarAccess.getDigitsConstraintRule()); } 
	 EOF 
;

// Rule DigitsConstraint
ruleDigitsConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDigitsConstraintAccess().getGroup()); }
		(rule__DigitsConstraint__Group__0)
		{ after(grammarAccess.getDigitsConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructureTypeDefinition
entryRuleStructureTypeDefinition
:
{ before(grammarAccess.getStructureTypeDefinitionRule()); }
	 ruleStructureTypeDefinition
{ after(grammarAccess.getStructureTypeDefinitionRule()); } 
	 EOF 
;

// Rule StructureTypeDefinition
ruleStructureTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructureTypeDefinitionAccess().getGroup()); }
		(rule__StructureTypeDefinition__Group__0)
		{ after(grammarAccess.getStructureTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructureComponentDefinition
entryRuleStructureComponentDefinition
:
{ before(grammarAccess.getStructureComponentDefinitionRule()); }
	 ruleStructureComponentDefinition
{ after(grammarAccess.getStructureComponentDefinitionRule()); } 
	 EOF 
;

// Rule StructureComponentDefinition
ruleStructureComponentDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructureComponentDefinitionAccess().getGroup()); }
		(rule__StructureComponentDefinition__Group__0)
		{ after(grammarAccess.getStructureComponentDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationTypeDefinition
entryRuleEnumerationTypeDefinition
:
{ before(grammarAccess.getEnumerationTypeDefinitionRule()); }
	 ruleEnumerationTypeDefinition
{ after(grammarAccess.getEnumerationTypeDefinitionRule()); } 
	 EOF 
;

// Rule EnumerationTypeDefinition
ruleEnumerationTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup()); }
		(rule__EnumerationTypeDefinition__Group__0)
		{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerator
entryRuleEnumerator
:
{ before(grammarAccess.getEnumeratorRule()); }
	 ruleEnumerator
{ after(grammarAccess.getEnumeratorRule()); } 
	 EOF 
;

// Rule Enumerator
ruleEnumerator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumeratorAccess().getGroup()); }
		(rule__Enumerator__Group__0)
		{ after(grammarAccess.getEnumeratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnconstrainedArrayDefinition
entryRuleUnconstrainedArrayDefinition
:
{ before(grammarAccess.getUnconstrainedArrayDefinitionRule()); }
	 ruleUnconstrainedArrayDefinition
{ after(grammarAccess.getUnconstrainedArrayDefinitionRule()); } 
	 EOF 
;

// Rule UnconstrainedArrayDefinition
ruleUnconstrainedArrayDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getGroup()); }
		(rule__UnconstrainedArrayDefinition__Group__0)
		{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTypeReference
entryRuleAbstractTypeReference
:
{ before(grammarAccess.getAbstractTypeReferenceRule()); }
	 ruleAbstractTypeReference
{ after(grammarAccess.getAbstractTypeReferenceRule()); } 
	 EOF 
;

// Rule AbstractTypeReference
ruleAbstractTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeReferenceAccess().getAlternatives()); }
		(rule__AbstractTypeReference__Alternatives)
		{ after(grammarAccess.getAbstractTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTypeReferenceWithCA
entryRuleAbstractTypeReferenceWithCA
:
{ before(grammarAccess.getAbstractTypeReferenceWithCARule()); }
	 ruleAbstractTypeReferenceWithCA
{ after(grammarAccess.getAbstractTypeReferenceWithCARule()); } 
	 EOF 
;

// Rule AbstractTypeReferenceWithCA
ruleAbstractTypeReferenceWithCA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithCAAccess().getAlternatives()); }
		(rule__AbstractTypeReferenceWithCA__Alternatives)
		{ after(grammarAccess.getAbstractTypeReferenceWithCAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceTypeReference
entryRuleInstanceTypeReference
:
{ before(grammarAccess.getInstanceTypeReferenceRule()); }
	 ruleInstanceTypeReference
{ after(grammarAccess.getInstanceTypeReferenceRule()); } 
	 EOF 
;

// Rule InstanceTypeReference
ruleInstanceTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceTypeReferenceAccess().getGroup()); }
		(rule__InstanceTypeReference__Group__0)
		{ after(grammarAccess.getInstanceTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedTypeReference
entryRuleNamedTypeReference
:
{ before(grammarAccess.getNamedTypeReferenceRule()); }
	 ruleNamedTypeReference
{ after(grammarAccess.getNamedTypeReferenceRule()); } 
	 EOF 
;

// Rule NamedTypeReference
ruleNamedTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedTypeReferenceAccess().getGroup()); }
		(rule__NamedTypeReference__Group__0)
		{ after(grammarAccess.getNamedTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstrainedArrayTypeReference
entryRuleConstrainedArrayTypeReference
:
{ before(grammarAccess.getConstrainedArrayTypeReferenceRule()); }
	 ruleConstrainedArrayTypeReference
{ after(grammarAccess.getConstrainedArrayTypeReferenceRule()); } 
	 EOF 
;

// Rule ConstrainedArrayTypeReference
ruleConstrainedArrayTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getGroup()); }
		(rule__ConstrainedArrayTypeReference__Group__0)
		{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractCollectionTypeReference
entryRuleAbstractCollectionTypeReference
:
{ before(grammarAccess.getAbstractCollectionTypeReferenceRule()); }
	 ruleAbstractCollectionTypeReference
{ after(grammarAccess.getAbstractCollectionTypeReferenceRule()); } 
	 EOF 
;

// Rule AbstractCollectionTypeReference
ruleAbstractCollectionTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getAlternatives()); }
		(rule__AbstractCollectionTypeReference__Alternatives)
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceTypeReference
entryRuleSequenceTypeReference
:
{ before(grammarAccess.getSequenceTypeReferenceRule()); }
	 ruleSequenceTypeReference
{ after(grammarAccess.getSequenceTypeReferenceRule()); } 
	 EOF 
;

// Rule SequenceTypeReference
ruleSequenceTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceTypeReferenceAccess().getGroup()); }
		(rule__SequenceTypeReference__Group__0)
		{ after(grammarAccess.getSequenceTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayTypeReference
entryRuleArrayTypeReference
:
{ before(grammarAccess.getArrayTypeReferenceRule()); }
	 ruleArrayTypeReference
{ after(grammarAccess.getArrayTypeReferenceRule()); } 
	 EOF 
;

// Rule ArrayTypeReference
ruleArrayTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getGroup()); }
		(rule__ArrayTypeReference__Group__0)
		{ after(grammarAccess.getArrayTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetTypeReference
entryRuleSetTypeReference
:
{ before(grammarAccess.getSetTypeReferenceRule()); }
	 ruleSetTypeReference
{ after(grammarAccess.getSetTypeReferenceRule()); } 
	 EOF 
;

// Rule SetTypeReference
ruleSetTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetTypeReferenceAccess().getGroup()); }
		(rule__SetTypeReference__Group__0)
		{ after(grammarAccess.getSetTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagTypeReference
entryRuleBagTypeReference
:
{ before(grammarAccess.getBagTypeReferenceRule()); }
	 ruleBagTypeReference
{ after(grammarAccess.getBagTypeReferenceRule()); } 
	 EOF 
;

// Rule BagTypeReference
ruleBagTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagTypeReferenceAccess().getGroup()); }
		(rule__BagTypeReference__Group__0)
		{ after(grammarAccess.getBagTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDictionaryTypeReference
entryRuleDictionaryTypeReference
:
{ before(grammarAccess.getDictionaryTypeReferenceRule()); }
	 ruleDictionaryTypeReference
{ after(grammarAccess.getDictionaryTypeReferenceRule()); } 
	 EOF 
;

// Rule DictionaryTypeReference
ruleDictionaryTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDictionaryTypeReferenceAccess().getGroup()); }
		(rule__DictionaryTypeReference__Group__0)
		{ after(grammarAccess.getDictionaryTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractDictKeyTypeRef
entryRuleAbstractDictKeyTypeRef
:
{ before(grammarAccess.getAbstractDictKeyTypeRefRule()); }
	 ruleAbstractDictKeyTypeRef
{ after(grammarAccess.getAbstractDictKeyTypeRefRule()); } 
	 EOF 
;

// Rule AbstractDictKeyTypeRef
ruleAbstractDictKeyTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractDictKeyTypeRefAccess().getAlternatives()); }
		(rule__AbstractDictKeyTypeRef__Alternatives)
		{ after(grammarAccess.getAbstractDictKeyTypeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminatorDefinition
entryRuleTerminatorDefinition
:
{ before(grammarAccess.getTerminatorDefinitionRule()); }
	 ruleTerminatorDefinition
{ after(grammarAccess.getTerminatorDefinitionRule()); } 
	 EOF 
;

// Rule TerminatorDefinition
ruleTerminatorDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorDefinitionAccess().getGroup()); }
		(rule__TerminatorDefinition__Group__0)
		{ after(grammarAccess.getTerminatorDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminatorServiceDeclaration
entryRuleTerminatorServiceDeclaration
:
{ before(grammarAccess.getTerminatorServiceDeclarationRule()); }
	 ruleTerminatorServiceDeclaration
{ after(grammarAccess.getTerminatorServiceDeclarationRule()); } 
	 EOF 
;

// Rule TerminatorServiceDeclaration
ruleTerminatorServiceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getGroup()); }
		(rule__TerminatorServiceDeclaration__Group__0)
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectDeclaration
entryRuleObjectDeclaration
:
{ before(grammarAccess.getObjectDeclarationRule()); }
	 ruleObjectDeclaration
{ after(grammarAccess.getObjectDeclarationRule()); } 
	 EOF 
;

// Rule ObjectDeclaration
ruleObjectDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getGroup()); }
		(rule__ObjectDeclaration__Group__0)
		{ after(grammarAccess.getObjectDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectDefinition
entryRuleObjectDefinition
:
{ before(grammarAccess.getObjectDefinitionRule()); }
	 ruleObjectDefinition
{ after(grammarAccess.getObjectDefinitionRule()); } 
	 EOF 
;

// Rule ObjectDefinition
ruleObjectDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getGroup()); }
		(rule__ObjectDefinition__Group__0)
		{ after(grammarAccess.getObjectDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
		(rule__AttributeDefinition__Group__0)
		{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeReferential
entryRuleAttributeReferential
:
{ before(grammarAccess.getAttributeReferentialRule()); }
	 ruleAttributeReferential
{ after(grammarAccess.getAttributeReferentialRule()); } 
	 EOF 
;

// Rule AttributeReferential
ruleAttributeReferential 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getGroup()); }
		(rule__AttributeReferential__Group__0)
		{ after(grammarAccess.getAttributeReferentialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectOrRoleName
entryRuleObjectOrRoleName
:
{ before(grammarAccess.getObjectOrRoleNameRule()); }
	 ruleObjectOrRoleName
{ after(grammarAccess.getObjectOrRoleNameRule()); } 
	 EOF 
;

// Rule ObjectOrRoleName
ruleObjectOrRoleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectOrRoleNameAccess().getGroup()); }
		(rule__ObjectOrRoleName__Group__0)
		{ after(grammarAccess.getObjectOrRoleNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectServiceDeclaration
entryRuleObjectServiceDeclaration
:
{ before(grammarAccess.getObjectServiceDeclarationRule()); }
	 ruleObjectServiceDeclaration
{ after(grammarAccess.getObjectServiceDeclarationRule()); } 
	 EOF 
;

// Rule ObjectServiceDeclaration
ruleObjectServiceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getGroup()); }
		(rule__ObjectServiceDeclaration__Group__0)
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierDefinition
entryRuleIdentifierDefinition
:
{ before(grammarAccess.getIdentifierDefinitionRule()); }
	 ruleIdentifierDefinition
{ after(grammarAccess.getIdentifierDefinitionRule()); } 
	 EOF 
;

// Rule IdentifierDefinition
ruleIdentifierDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierDefinitionAccess().getGroup()); }
		(rule__IdentifierDefinition__Group__0)
		{ after(grammarAccess.getIdentifierDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventDefinition
entryRuleEventDefinition
:
{ before(grammarAccess.getEventDefinitionRule()); }
	 ruleEventDefinition
{ after(grammarAccess.getEventDefinitionRule()); } 
	 EOF 
;

// Rule EventDefinition
ruleEventDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventDefinitionAccess().getGroup()); }
		(rule__EventDefinition__Group__0)
		{ after(grammarAccess.getEventDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateDeclaration
entryRuleStateDeclaration
:
{ before(grammarAccess.getStateDeclarationRule()); }
	 ruleStateDeclaration
{ after(grammarAccess.getStateDeclarationRule()); } 
	 EOF 
;

// Rule StateDeclaration
ruleStateDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateDeclarationAccess().getGroup()); }
		(rule__StateDeclaration__Group__0)
		{ after(grammarAccess.getStateDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateTypeSyntax
entryRuleStateTypeSyntax
:
{ before(grammarAccess.getStateTypeSyntaxRule()); }
	 ruleStateTypeSyntax
{ after(grammarAccess.getStateTypeSyntaxRule()); } 
	 EOF 
;

// Rule StateTypeSyntax
ruleStateTypeSyntax 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateTypeSyntaxAccess().getAlternatives()); }
		(rule__StateTypeSyntax__Alternatives)
		{ after(grammarAccess.getStateTypeSyntaxAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransitionTable
entryRuleTransitionTable
:
{ before(grammarAccess.getTransitionTableRule()); }
	 ruleTransitionTable
{ after(grammarAccess.getTransitionTableRule()); } 
	 EOF 
;

// Rule TransitionTable
ruleTransitionTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionTableAccess().getGroup()); }
		(rule__TransitionTable__Group__0)
		{ after(grammarAccess.getTransitionTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransitionRow
entryRuleTransitionRow
:
{ before(grammarAccess.getTransitionRowRule()); }
	 ruleTransitionRow
{ after(grammarAccess.getTransitionRowRule()); } 
	 EOF 
;

// Rule TransitionRow
ruleTransitionRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionRowAccess().getGroup()); }
		(rule__TransitionRow__Group__0)
		{ after(grammarAccess.getTransitionRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransitionOption
entryRuleTransitionOption
:
{ before(grammarAccess.getTransitionOptionRule()); }
	 ruleTransitionOption
{ after(grammarAccess.getTransitionOptionRule()); } 
	 EOF 
;

// Rule TransitionOption
ruleTransitionOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getGroup()); }
		(rule__TransitionOption__Group__0)
		{ after(grammarAccess.getTransitionOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainServiceDeclaration
entryRuleDomainServiceDeclaration
:
{ before(grammarAccess.getDomainServiceDeclarationRule()); }
	 ruleDomainServiceDeclaration
{ after(grammarAccess.getDomainServiceDeclarationRule()); } 
	 EOF 
;

// Rule DomainServiceDeclaration
ruleDomainServiceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getGroup()); }
		(rule__DomainServiceDeclaration__Group__0)
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipDefinition
entryRuleRelationshipDefinition
:
{ before(grammarAccess.getRelationshipDefinitionRule()); }
	 ruleRelationshipDefinition
{ after(grammarAccess.getRelationshipDefinitionRule()); } 
	 EOF 
;

// Rule RelationshipDefinition
ruleRelationshipDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipDefinitionAccess().getGroup()); }
		(rule__RelationshipDefinition__Group__0)
		{ after(grammarAccess.getRelationshipDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularRelationshipDefinition
entryRuleRegularRelationshipDefinition
:
{ before(grammarAccess.getRegularRelationshipDefinitionRule()); }
	 ruleRegularRelationshipDefinition
{ after(grammarAccess.getRegularRelationshipDefinitionRule()); } 
	 EOF 
;

// Rule RegularRelationshipDefinition
ruleRegularRelationshipDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getGroup()); }
		(rule__RegularRelationshipDefinition__Group__0)
		{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssocRelationshipDefinition
entryRuleAssocRelationshipDefinition
:
{ before(grammarAccess.getAssocRelationshipDefinitionRule()); }
	 ruleAssocRelationshipDefinition
{ after(grammarAccess.getAssocRelationshipDefinitionRule()); } 
	 EOF 
;

// Rule AssocRelationshipDefinition
ruleAssocRelationshipDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getGroup()); }
		(rule__AssocRelationshipDefinition__Group__0)
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipEnd
entryRuleRelationshipEnd
:
{ before(grammarAccess.getRelationshipEndRule()); }
	 ruleRelationshipEnd
{ after(grammarAccess.getRelationshipEndRule()); } 
	 EOF 
;

// Rule RelationshipEnd
ruleRelationshipEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getGroup()); }
		(rule__RelationshipEnd__Group__0)
		{ after(grammarAccess.getRelationshipEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubtypeRelationshipDefinition
entryRuleSubtypeRelationshipDefinition
:
{ before(grammarAccess.getSubtypeRelationshipDefinitionRule()); }
	 ruleSubtypeRelationshipDefinition
{ after(grammarAccess.getSubtypeRelationshipDefinitionRule()); } 
	 EOF 
;

// Rule SubtypeRelationshipDefinition
ruleSubtypeRelationshipDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup()); }
		(rule__SubtypeRelationshipDefinition__Group__0)
		{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipNavigation
entryRuleRelationshipNavigation
:
{ before(grammarAccess.getRelationshipNavigationRule()); }
	 ruleRelationshipNavigation
{ after(grammarAccess.getRelationshipNavigationRule()); } 
	 EOF 
;

// Rule RelationshipNavigation
ruleRelationshipNavigation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getGroup()); }
		(rule__RelationshipNavigation__Group__0)
		{ after(grammarAccess.getRelationshipNavigationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainServiceDefinition
entryRuleDomainServiceDefinition
:
{ before(grammarAccess.getDomainServiceDefinitionRule()); }
	 ruleDomainServiceDefinition
{ after(grammarAccess.getDomainServiceDefinitionRule()); } 
	 EOF 
;

// Rule DomainServiceDefinition
ruleDomainServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getGroup()); }
		(rule__DomainServiceDefinition__Group__0)
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectServiceDefinition
entryRuleObjectServiceDefinition
:
{ before(grammarAccess.getObjectServiceDefinitionRule()); }
	 ruleObjectServiceDefinition
{ after(grammarAccess.getObjectServiceDefinitionRule()); } 
	 EOF 
;

// Rule ObjectServiceDefinition
ruleObjectServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getGroup()); }
		(rule__ObjectServiceDefinition__Group__0)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminatorServiceDefinition
entryRuleTerminatorServiceDefinition
:
{ before(grammarAccess.getTerminatorServiceDefinitionRule()); }
	 ruleTerminatorServiceDefinition
{ after(grammarAccess.getTerminatorServiceDefinitionRule()); } 
	 EOF 
;

// Rule TerminatorServiceDefinition
ruleTerminatorServiceDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup()); }
		(rule__TerminatorServiceDefinition__Group__0)
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateDefinition
entryRuleStateDefinition
:
{ before(grammarAccess.getStateDefinitionRule()); }
	 ruleStateDefinition
{ after(grammarAccess.getStateDefinitionRule()); } 
	 EOF 
;

// Rule StateDefinition
ruleStateDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getGroup()); }
		(rule__StateDefinition__Group__0)
		{ after(grammarAccess.getStateDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignStatement
entryRuleAssignStatement
:
{ before(grammarAccess.getAssignStatementRule()); }
	 ruleAssignStatement
{ after(grammarAccess.getAssignStatementRule()); } 
	 EOF 
;

// Rule AssignStatement
ruleAssignStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignStatementAccess().getGroup()); }
		(rule__AssignStatement__Group__0)
		{ after(grammarAccess.getAssignStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExitStatement
entryRuleExitStatement
:
{ before(grammarAccess.getExitStatementRule()); }
	 ruleExitStatement
{ after(grammarAccess.getExitStatementRule()); } 
	 EOF 
;

// Rule ExitStatement
ruleExitStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitStatementAccess().getGroup()); }
		(rule__ExitStatement__Group__0)
		{ after(grammarAccess.getExitStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelayStatement
entryRuleDelayStatement
:
{ before(grammarAccess.getDelayStatementRule()); }
	 ruleDelayStatement
{ after(grammarAccess.getDelayStatementRule()); } 
	 EOF 
;

// Rule DelayStatement
ruleDelayStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelayStatementAccess().getGroup()); }
		(rule__DelayStatement__Group__0)
		{ after(grammarAccess.getDelayStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRaiseStatement
entryRuleRaiseStatement
:
{ before(grammarAccess.getRaiseStatementRule()); }
	 ruleRaiseStatement
{ after(grammarAccess.getRaiseStatementRule()); } 
	 EOF 
;

// Rule RaiseStatement
ruleRaiseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaiseStatementAccess().getGroup()); }
		(rule__RaiseStatement__Group__0)
		{ after(grammarAccess.getRaiseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruleDeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
		(rule__DeleteStatement__Group__0)
		{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEraseStatement
entryRuleEraseStatement
:
{ before(grammarAccess.getEraseStatementRule()); }
	 ruleEraseStatement
{ after(grammarAccess.getEraseStatementRule()); } 
	 EOF 
;

// Rule EraseStatement
ruleEraseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEraseStatementAccess().getGroup()); }
		(rule__EraseStatement__Group__0)
		{ after(grammarAccess.getEraseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScheduleStatement
entryRuleScheduleStatement
:
{ before(grammarAccess.getScheduleStatementRule()); }
	 ruleScheduleStatement
{ after(grammarAccess.getScheduleStatementRule()); } 
	 EOF 
;

// Rule ScheduleStatement
ruleScheduleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getGroup()); }
		(rule__ScheduleStatement__Group__0)
		{ after(grammarAccess.getScheduleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCancelTimerStatement
entryRuleCancelTimerStatement
:
{ before(grammarAccess.getCancelTimerStatementRule()); }
	 ruleCancelTimerStatement
{ after(grammarAccess.getCancelTimerStatementRule()); } 
	 EOF 
;

// Rule CancelTimerStatement
ruleCancelTimerStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCancelTimerStatementAccess().getGroup()); }
		(rule__CancelTimerStatement__Group__0)
		{ after(grammarAccess.getCancelTimerStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenerateStatement
entryRuleGenerateStatement
:
{ before(grammarAccess.getGenerateStatementRule()); }
	 ruleGenerateStatement
{ after(grammarAccess.getGenerateStatementRule()); } 
	 EOF 
;

// Rule GenerateStatement
ruleGenerateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getGroup()); }
		(rule__GenerateStatement__Group__0)
		{ after(grammarAccess.getGenerateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElsifBlock
entryRuleElsifBlock
:
{ before(grammarAccess.getElsifBlockRule()); }
	 ruleElsifBlock
{ after(grammarAccess.getElsifBlockRule()); } 
	 EOF 
;

// Rule ElsifBlock
ruleElsifBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElsifBlockAccess().getGroup()); }
		(rule__ElsifBlock__Group__0)
		{ after(grammarAccess.getElsifBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseBlock
entryRuleElseBlock
:
{ before(grammarAccess.getElseBlockRule()); }
	 ruleElseBlock
{ after(grammarAccess.getElseBlockRule()); } 
	 EOF 
;

// Rule ElseBlock
ruleElseBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseBlockAccess().getGroup()); }
		(rule__ElseBlock__Group__0)
		{ after(grammarAccess.getElseBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseStatement
entryRuleCaseStatement
:
{ before(grammarAccess.getCaseStatementRule()); }
	 ruleCaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
		(rule__CaseStatement__Group__0)
		{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseAlternative
entryRuleCaseAlternative
:
{ before(grammarAccess.getCaseAlternativeRule()); }
	 ruleCaseAlternative
{ after(grammarAccess.getCaseAlternativeRule()); } 
	 EOF 
;

// Rule CaseAlternative
ruleCaseAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getGroup()); }
		(rule__CaseAlternative__Group__0)
		{ after(grammarAccess.getCaseAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseOthers
entryRuleCaseOthers
:
{ before(grammarAccess.getCaseOthersRule()); }
	 ruleCaseOthers
{ after(grammarAccess.getCaseOthersRule()); } 
	 EOF 
;

// Rule CaseOthers
ruleCaseOthers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseOthersAccess().getGroup()); }
		(rule__CaseOthers__Group__0)
		{ after(grammarAccess.getCaseOthersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopVariable
entryRuleLoopVariable
:
{ before(grammarAccess.getLoopVariableRule()); }
	 ruleLoopVariable
{ after(grammarAccess.getLoopVariableRule()); } 
	 EOF 
;

// Rule LoopVariable
ruleLoopVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopVariableAccess().getNameAssignment()); }
		(rule__LoopVariable__NameAssignment)
		{ after(grammarAccess.getLoopVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlockStatement
entryRuleCodeBlockStatement
:
{ before(grammarAccess.getCodeBlockStatementRule()); }
	 ruleCodeBlockStatement
{ after(grammarAccess.getCodeBlockStatementRule()); } 
	 EOF 
;

// Rule CodeBlockStatement
ruleCodeBlockStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockStatementAccess().getGroup()); }
		(rule__CodeBlockStatement__Group__0)
		{ after(grammarAccess.getCodeBlockStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 ruleCodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup()); }
		(rule__CodeBlock__Group__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExceptionHandler
entryRuleExceptionHandler
:
{ before(grammarAccess.getExceptionHandlerRule()); }
	 ruleExceptionHandler
{ after(grammarAccess.getExceptionHandlerRule()); } 
	 EOF 
;

// Rule ExceptionHandler
ruleExceptionHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionHandlerAccess().getGroup()); }
		(rule__ExceptionHandler__Group__0)
		{ after(grammarAccess.getExceptionHandlerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultExceptionHandler
entryRuleDefaultExceptionHandler
:
{ before(grammarAccess.getDefaultExceptionHandlerRule()); }
	 ruleDefaultExceptionHandler
{ after(grammarAccess.getDefaultExceptionHandlerRule()); } 
	 EOF 
;

// Rule DefaultExceptionHandler
ruleDefaultExceptionHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultExceptionHandlerAccess().getGroup()); }
		(rule__DefaultExceptionHandler__Group__0)
		{ after(grammarAccess.getDefaultExceptionHandlerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindCondition
entryRuleFindCondition
:
{ before(grammarAccess.getFindConditionRule()); }
	 ruleFindCondition
{ after(grammarAccess.getFindConditionRule()); } 
	 EOF 
;

// Rule FindCondition
ruleFindCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindConditionAccess().getFindLogicalOrParserRuleCall()); }
		ruleFindLogicalOr
		{ after(grammarAccess.getFindConditionAccess().getFindLogicalOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindLogicalOr
entryRuleFindLogicalOr
:
{ before(grammarAccess.getFindLogicalOrRule()); }
	 ruleFindLogicalOr
{ after(grammarAccess.getFindLogicalOrRule()); } 
	 EOF 
;

// Rule FindLogicalOr
ruleFindLogicalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalOrAccess().getGroup()); }
		(rule__FindLogicalOr__Group__0)
		{ after(grammarAccess.getFindLogicalOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindLogicalXor
entryRuleFindLogicalXor
:
{ before(grammarAccess.getFindLogicalXorRule()); }
	 ruleFindLogicalXor
{ after(grammarAccess.getFindLogicalXorRule()); } 
	 EOF 
;

// Rule FindLogicalXor
ruleFindLogicalXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalXorAccess().getGroup()); }
		(rule__FindLogicalXor__Group__0)
		{ after(grammarAccess.getFindLogicalXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindLogicalAnd
entryRuleFindLogicalAnd
:
{ before(grammarAccess.getFindLogicalAndRule()); }
	 ruleFindLogicalAnd
{ after(grammarAccess.getFindLogicalAndRule()); } 
	 EOF 
;

// Rule FindLogicalAnd
ruleFindLogicalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindLogicalAndAccess().getGroup()); }
		(rule__FindLogicalAnd__Group__0)
		{ after(grammarAccess.getFindLogicalAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindPrimary
entryRuleFindPrimary
:
{ before(grammarAccess.getFindPrimaryRule()); }
	 ruleFindPrimary
{ after(grammarAccess.getFindPrimaryRule()); } 
	 EOF 
;

// Rule FindPrimary
ruleFindPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindPrimaryAccess().getAlternatives()); }
		(rule__FindPrimary__Alternatives)
		{ after(grammarAccess.getFindPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindUnary
entryRuleFindUnary
:
{ before(grammarAccess.getFindUnaryRule()); }
	 ruleFindUnary
{ after(grammarAccess.getFindUnaryRule()); } 
	 EOF 
;

// Rule FindUnary
ruleFindUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindUnaryAccess().getAlternatives()); }
		(rule__FindUnary__Alternatives)
		{ after(grammarAccess.getFindUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindEquality
entryRuleFindEquality
:
{ before(grammarAccess.getFindEqualityRule()); }
	 ruleFindEquality
{ after(grammarAccess.getFindEqualityRule()); } 
	 EOF 
;

// Rule FindEquality
ruleFindEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindEqualityAccess().getGroup()); }
		(rule__FindEquality__Group__0)
		{ after(grammarAccess.getFindEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindRelationExp
entryRuleFindRelationExp
:
{ before(grammarAccess.getFindRelationExpRule()); }
	 ruleFindRelationExp
{ after(grammarAccess.getFindRelationExpRule()); } 
	 EOF 
;

// Rule FindRelationExp
ruleFindRelationExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindRelationExpAccess().getGroup()); }
		(rule__FindRelationExp__Group__0)
		{ after(grammarAccess.getFindRelationExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindName
entryRuleFindName
:
{ before(grammarAccess.getFindNameRule()); }
	 ruleFindName
{ after(grammarAccess.getFindNameRule()); } 
	 EOF 
;

// Rule FindName
ruleFindName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindNameAccess().getGroup()); }
		(rule__FindName__Group__0)
		{ after(grammarAccess.getFindNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindReceiverAttribute
entryRuleFindReceiverAttribute
:
{ before(grammarAccess.getFindReceiverAttributeRule()); }
	 ruleFindReceiverAttribute
{ after(grammarAccess.getFindReceiverAttributeRule()); } 
	 EOF 
;

// Rule FindReceiverAttribute
ruleFindReceiverAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindReceiverAttributeAccess().getFeatureAssignment()); }
		(rule__FindReceiverAttribute__FeatureAssignment)
		{ after(grammarAccess.getFindReceiverAttributeAccess().getFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstExpression
entryRuleConstExpression
:
{ before(grammarAccess.getConstExpressionRule()); }
	 ruleConstExpression
{ after(grammarAccess.getConstExpressionRule()); } 
	 EOF 
;

// Rule ConstExpression
ruleConstExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstExpressionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getConstExpressionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getStreamExpressionParserRuleCall()); }
		ruleStreamExpression
		{ after(grammarAccess.getExpressionAccess().getStreamExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamExpression
entryRuleStreamExpression
:
{ before(grammarAccess.getStreamExpressionRule()); }
	 ruleStreamExpression
{ after(grammarAccess.getStreamExpressionRule()); } 
	 EOF 
;

// Rule StreamExpression
ruleStreamExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamExpressionAccess().getGroup()); }
		(rule__StreamExpression__Group__0)
		{ after(grammarAccess.getStreamExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamOperator
entryRuleStreamOperator
:
{ before(grammarAccess.getStreamOperatorRule()); }
	 ruleStreamOperator
{ after(grammarAccess.getStreamOperatorRule()); } 
	 EOF 
;

// Rule StreamOperator
ruleStreamOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamOperatorAccess().getAlternatives()); }
		(rule__StreamOperator__Alternatives)
		{ after(grammarAccess.getStreamOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeExpression
entryRuleRangeExpression
:
{ before(grammarAccess.getRangeExpressionRule()); }
	 ruleRangeExpression
{ after(grammarAccess.getRangeExpressionRule()); } 
	 EOF 
;

// Rule RangeExpression
ruleRangeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getGroup()); }
		(rule__RangeExpression__Group__0)
		{ after(grammarAccess.getRangeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOr
entryRuleLogicalOr
:
{ before(grammarAccess.getLogicalOrRule()); }
	 ruleLogicalOr
{ after(grammarAccess.getLogicalOrRule()); } 
	 EOF 
;

// Rule LogicalOr
ruleLogicalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrAccess().getGroup()); }
		(rule__LogicalOr__Group__0)
		{ after(grammarAccess.getLogicalOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalXor
entryRuleLogicalXor
:
{ before(grammarAccess.getLogicalXorRule()); }
	 ruleLogicalXor
{ after(grammarAccess.getLogicalXorRule()); } 
	 EOF 
;

// Rule LogicalXor
ruleLogicalXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalXorAccess().getGroup()); }
		(rule__LogicalXor__Group__0)
		{ after(grammarAccess.getLogicalXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAnd
entryRuleLogicalAnd
:
{ before(grammarAccess.getLogicalAndRule()); }
	 ruleLogicalAnd
{ after(grammarAccess.getLogicalAndRule()); } 
	 EOF 
;

// Rule LogicalAnd
ruleLogicalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndAccess().getGroup()); }
		(rule__LogicalAnd__Group__0)
		{ after(grammarAccess.getLogicalAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExp
entryRuleRelationalExp
:
{ before(grammarAccess.getRelationalExpRule()); }
	 ruleRelationalExp
{ after(grammarAccess.getRelationalExpRule()); } 
	 EOF 
;

// Rule RelationalExp
ruleRelationalExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpAccess().getGroup()); }
		(rule__RelationalExp__Group__0)
		{ after(grammarAccess.getRelationalExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExp
entryRuleAdditiveExp
:
{ before(grammarAccess.getAdditiveExpRule()); }
	 ruleAdditiveExp
{ after(grammarAccess.getAdditiveExpRule()); } 
	 EOF 
;

// Rule AdditiveExp
ruleAdditiveExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getGroup()); }
		(rule__AdditiveExp__Group__0)
		{ after(grammarAccess.getAdditiveExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExp
entryRuleMultExp
:
{ before(grammarAccess.getMultExpRule()); }
	 ruleMultExp
{ after(grammarAccess.getMultExpRule()); } 
	 EOF 
;

// Rule MultExp
ruleMultExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExpAccess().getGroup()); }
		(rule__MultExp__Group__0)
		{ after(grammarAccess.getMultExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExp
entryRuleUnaryExp
:
{ before(grammarAccess.getUnaryExpRule()); }
	 ruleUnaryExp
{ after(grammarAccess.getUnaryExpRule()); } 
	 EOF 
;

// Rule UnaryExp
ruleUnaryExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpAccess().getAlternatives()); }
		(rule__UnaryExp__Alternatives)
		{ after(grammarAccess.getUnaryExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkExpression
entryRuleLinkExpression
:
{ before(grammarAccess.getLinkExpressionRule()); }
	 ruleLinkExpression
{ after(grammarAccess.getLinkExpressionRule()); } 
	 EOF 
;

// Rule LinkExpression
ruleLinkExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
		(rule__LinkExpression__Alternatives)
		{ after(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNavigateExpression
entryRuleNavigateExpression
:
{ before(grammarAccess.getNavigateExpressionRule()); }
	 ruleNavigateExpression
{ after(grammarAccess.getNavigateExpressionRule()); } 
	 EOF 
;

// Rule NavigateExpression
ruleNavigateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup()); }
		(rule__NavigateExpression__Group__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendedExpression
entryRuleExtendedExpression
:
{ before(grammarAccess.getExtendedExpressionRule()); }
	 ruleExtendedExpression
{ after(grammarAccess.getExtendedExpressionRule()); } 
	 EOF 
;

// Rule ExtendedExpression
ruleExtendedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getAlternatives()); }
		(rule__ExtendedExpression__Alternatives)
		{ after(grammarAccess.getExtendedExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortOrder
entryRuleSortOrder
:
{ before(grammarAccess.getSortOrderRule()); }
	 ruleSortOrder
{ after(grammarAccess.getSortOrderRule()); } 
	 EOF 
;

// Rule SortOrder
ruleSortOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortOrderAccess().getGroup()); }
		(rule__SortOrder__Group__0)
		{ after(grammarAccess.getSortOrderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortOrderComponent
entryRuleSortOrderComponent
:
{ before(grammarAccess.getSortOrderComponentRule()); }
	 ruleSortOrderComponent
{ after(grammarAccess.getSortOrderComponentRule()); } 
	 EOF 
;

// Rule SortOrderComponent
ruleSortOrderComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortOrderComponentAccess().getGroup()); }
		(rule__SortOrderComponent__Group__0)
		{ after(grammarAccess.getSortOrderComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortOrderFeature
entryRuleSortOrderFeature
:
{ before(grammarAccess.getSortOrderFeatureRule()); }
	 ruleSortOrderFeature
{ after(grammarAccess.getSortOrderFeatureRule()); } 
	 EOF 
;

// Rule SortOrderFeature
ruleSortOrderFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortOrderFeatureAccess().getGroup()); }
		(rule__SortOrderFeature__Group__0)
		{ after(grammarAccess.getSortOrderFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateExpression
entryRuleCreateExpression
:
{ before(grammarAccess.getCreateExpressionRule()); }
	 ruleCreateExpression
{ after(grammarAccess.getCreateExpressionRule()); } 
	 EOF 
;

// Rule CreateExpression
ruleCreateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getGroup()); }
		(rule__CreateExpression__Group__0)
		{ after(grammarAccess.getCreateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateArgument
entryRuleCreateArgument
:
{ before(grammarAccess.getCreateArgumentRule()); }
	 ruleCreateArgument
{ after(grammarAccess.getCreateArgumentRule()); } 
	 EOF 
;

// Rule CreateArgument
ruleCreateArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getAlternatives()); }
		(rule__CreateArgument__Alternatives)
		{ after(grammarAccess.getCreateArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindExpression
entryRuleFindExpression
:
{ before(grammarAccess.getFindExpressionRule()); }
	 ruleFindExpression
{ after(grammarAccess.getFindExpressionRule()); } 
	 EOF 
;

// Rule FindExpression
ruleFindExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindExpressionAccess().getGroup()); }
		(rule__FindExpression__Group__0)
		{ after(grammarAccess.getFindExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
		(rule__PostfixExpression__Group__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicID
entryRuleCharacteristicID
:
{ before(grammarAccess.getCharacteristicIDRule()); }
	 ruleCharacteristicID
{ after(grammarAccess.getCharacteristicIDRule()); } 
	 EOF 
;

// Rule CharacteristicID
ruleCharacteristicID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicIDAccess().getAlternatives()); }
		(rule__CharacteristicID__Alternatives)
		{ after(grammarAccess.getCharacteristicIDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixNoActionCallExpression
entryRulePostfixNoActionCallExpression
:
{ before(grammarAccess.getPostfixNoActionCallExpressionRule()); }
	 rulePostfixNoActionCallExpression
{ after(grammarAccess.getPostfixNoActionCallExpressionRule()); } 
	 EOF 
;

// Rule PostfixNoActionCallExpression
rulePostfixNoActionCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup()); }
		(rule__PostfixNoActionCallExpression__Group__0)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryNoActionCallExpression
entryRulePrimaryNoActionCallExpression
:
{ before(grammarAccess.getPrimaryNoActionCallExpressionRule()); }
	 rulePrimaryNoActionCallExpression
{ after(grammarAccess.getPrimaryNoActionCallExpressionRule()); } 
	 EOF 
;

// Rule PrimaryNoActionCallExpression
rulePrimaryNoActionCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryNoActionCallExpressionAccess().getAlternatives()); }
		(rule__PrimaryNoActionCallExpression__Alternatives)
		{ after(grammarAccess.getPrimaryNoActionCallExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeNameExpression
entryRuleTypeNameExpression
:
{ before(grammarAccess.getTypeNameExpressionRule()); }
	 ruleTypeNameExpression
{ after(grammarAccess.getTypeNameExpressionRule()); } 
	 EOF 
;

// Rule TypeNameExpression
ruleTypeNameExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getAlternatives()); }
		(rule__TypeNameExpression__Alternatives)
		{ after(grammarAccess.getTypeNameExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleFeatureCall
entryRuleSimpleFeatureCall
:
{ before(grammarAccess.getSimpleFeatureCallRule()); }
	 ruleSimpleFeatureCall
{ after(grammarAccess.getSimpleFeatureCallRule()); } 
	 EOF 
;

// Rule SimpleFeatureCall
ruleSimpleFeatureCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleFeatureCallAccess().getFeatureAssignment()); }
		(rule__SimpleFeatureCall__FeatureAssignment)
		{ after(grammarAccess.getSimpleFeatureCallAccess().getFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesisedExpression
entryRuleParenthesisedExpression
:
{ before(grammarAccess.getParenthesisedExpressionRule()); }
	 ruleParenthesisedExpression
{ after(grammarAccess.getParenthesisedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesisedExpression
ruleParenthesisedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup()); }
		(rule__ParenthesisedExpression__Group__0)
		{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValueAssignment()); }
		(rule__RealLiteral__ValueAssignment)
		{ after(grammarAccess.getRealLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
		(rule__IntegerLiteral__ValueAssignment)
		{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral
:
{ before(grammarAccess.getCharacterLiteralRule()); }
	 ruleCharacterLiteral
{ after(grammarAccess.getCharacterLiteralRule()); } 
	 EOF 
;

// Rule CharacterLiteral
ruleCharacterLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacterLiteralAccess().getValueAssignment()); }
		(rule__CharacterLiteral__ValueAssignment)
		{ after(grammarAccess.getCharacterLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDurationLiteral
entryRuleDurationLiteral
:
{ before(grammarAccess.getDurationLiteralRule()); }
	 ruleDurationLiteral
{ after(grammarAccess.getDurationLiteralRule()); } 
	 EOF 
;

// Rule DurationLiteral
ruleDurationLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationLiteralAccess().getValueAssignment()); }
		(rule__DurationLiteral__ValueAssignment)
		{ after(grammarAccess.getDurationLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimestampLiteral
entryRuleTimestampLiteral
:
{ before(grammarAccess.getTimestampLiteralRule()); }
	 ruleTimestampLiteral
{ after(grammarAccess.getTimestampLiteralRule()); } 
	 EOF 
;

// Rule TimestampLiteral
ruleTimestampLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimestampLiteralAccess().getValueAssignment()); }
		(rule__TimestampLiteral__ValueAssignment)
		{ after(grammarAccess.getTimestampLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
		(rule__BooleanLiteral__Alternatives)
		{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullLiteral
entryRuleNullLiteral
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
		(rule__NullLiteral__Group__0)
		{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlushLiteral
entryRuleFlushLiteral
:
{ before(grammarAccess.getFlushLiteralRule()); }
	 ruleFlushLiteral
{ after(grammarAccess.getFlushLiteralRule()); } 
	 EOF 
;

// Rule FlushLiteral
ruleFlushLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlushLiteralAccess().getGroup()); }
		(rule__FlushLiteral__Group__0)
		{ after(grammarAccess.getFlushLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisLiteral
entryRuleThisLiteral
:
{ before(grammarAccess.getThisLiteralRule()); }
	 ruleThisLiteral
{ after(grammarAccess.getThisLiteralRule()); } 
	 EOF 
;

// Rule ThisLiteral
ruleThisLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisLiteralAccess().getGroup()); }
		(rule__ThisLiteral__Group__0)
		{ after(grammarAccess.getThisLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConsoleLiteral
entryRuleConsoleLiteral
:
{ before(grammarAccess.getConsoleLiteralRule()); }
	 ruleConsoleLiteral
{ after(grammarAccess.getConsoleLiteralRule()); } 
	 EOF 
;

// Rule ConsoleLiteral
ruleConsoleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConsoleLiteralAccess().getGroup()); }
		(rule__ConsoleLiteral__Group__0)
		{ after(grammarAccess.getConsoleLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndlLiteral
entryRuleEndlLiteral
:
{ before(grammarAccess.getEndlLiteralRule()); }
	 ruleEndlLiteral
{ after(grammarAccess.getEndlLiteralRule()); } 
	 EOF 
;

// Rule EndlLiteral
ruleEndlLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndlLiteralAccess().getGroup()); }
		(rule__EndlLiteral__Group__0)
		{ after(grammarAccess.getEndlLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLineNoLiteral
entryRuleLineNoLiteral
:
{ before(grammarAccess.getLineNoLiteralRule()); }
	 ruleLineNoLiteral
{ after(grammarAccess.getLineNoLiteralRule()); } 
	 EOF 
;

// Rule LineNoLiteral
ruleLineNoLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineNoLiteralAccess().getGroup()); }
		(rule__LineNoLiteral__Group__0)
		{ after(grammarAccess.getLineNoLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileNameLiteral
entryRuleFileNameLiteral
:
{ before(grammarAccess.getFileNameLiteralRule()); }
	 ruleFileNameLiteral
{ after(grammarAccess.getFileNameLiteralRule()); } 
	 EOF 
;

// Rule FileNameLiteral
ruleFileNameLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileNameLiteralAccess().getGroup()); }
		(rule__FileNameLiteral__Group__0)
		{ after(grammarAccess.getFileNameLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Visibility
ruleVisibility
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
		(rule__Visibility__Alternatives)
		{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EventType
ruleEventType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTypeAccess().getAlternatives()); }
		(rule__EventType__Alternatives)
		{ after(grammarAccess.getEventTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TransTableType
ruleTransTableType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransTableTypeAccess().getAssignerEnumLiteralDeclaration()); }
		(Assigner)
		{ after(grammarAccess.getTransTableTypeAccess().getAssignerEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ParameterMode
ruleParameterMode
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterModeAccess().getAlternatives()); }
		(rule__ParameterMode__Alternatives)
		{ after(grammarAccess.getParameterModeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Conditionality
ruleConditionality
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalityAccess().getAlternatives()); }
		(rule__Conditionality__Alternatives)
		{ after(grammarAccess.getConditionalityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Multiplicity
ruleMultiplicity
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getAlternatives()); }
		(rule__Multiplicity__Alternatives)
		{ after(grammarAccess.getMultiplicityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LinkType
ruleLinkType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkTypeAccess().getAlternatives()); }
		(rule__LinkType__Alternatives)
		{ after(grammarAccess.getLinkTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ScheduleType
ruleScheduleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleTypeAccess().getAlternatives()); }
		(rule__ScheduleType__Alternatives)
		{ after(grammarAccess.getScheduleTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FindType
ruleFindType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindTypeAccess().getAlternatives()); }
		(rule__FindType__Alternatives)
		{ after(grammarAccess.getFindTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaslModel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaslModelAccess().getBuiltinLibraryDefinitionParserRuleCall_0()); }
		ruleBuiltinLibraryDefinition
		{ after(grammarAccess.getMaslModelAccess().getBuiltinLibraryDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMaslModelAccess().getGroup_1()); }
		(rule__MaslModel__Group_1__0)
		{ after(grammarAccess.getMaslModelAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTopLevelElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getProjectDefinitionParserRuleCall_0()); }
		ruleProjectDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getProjectDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getDomainDefinitionParserRuleCall_1()); }
		ruleDomainDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getDomainDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getDomainServiceDefinitionParserRuleCall_2()); }
		ruleDomainServiceDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getDomainServiceDefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getObjectServiceDefinitionParserRuleCall_3()); }
		ruleObjectServiceDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getObjectServiceDefinitionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getStateDefinitionParserRuleCall_4()); }
		ruleStateDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getStateDefinitionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTopLevelElementAccess().getTerminatorServiceDefinitionParserRuleCall_5()); }
		ruleTerminatorServiceDefinition
		{ after(grammarAccess.getAbstractTopLevelElementAccess().getTerminatorServiceDefinitionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaValueAccess().getNameAssignment_0()); }
		(rule__PragmaValue__NameAssignment_0)
		{ after(grammarAccess.getPragmaValueAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPragmaValueAccess().getValueAssignment_1()); }
		(rule__PragmaValue__ValueAssignment_1)
		{ after(grammarAccess.getPragmaValueAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getObjectsAssignment_3_0()); }
		(rule__DomainDefinition__ObjectsAssignment_3_0)
		{ after(grammarAccess.getDomainDefinitionAccess().getObjectsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getServicesAssignment_3_1()); }
		(rule__DomainDefinition__ServicesAssignment_3_1)
		{ after(grammarAccess.getDomainDefinitionAccess().getServicesAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTerminatorsAssignment_3_2()); }
		(rule__DomainDefinition__TerminatorsAssignment_3_2)
		{ after(grammarAccess.getDomainDefinitionAccess().getTerminatorsAssignment_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getRelationshipsAssignment_3_3()); }
		(rule__DomainDefinition__RelationshipsAssignment_3_3)
		{ after(grammarAccess.getDomainDefinitionAccess().getRelationshipsAssignment_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getObjectDefsAssignment_3_4()); }
		(rule__DomainDefinition__ObjectDefsAssignment_3_4)
		{ after(grammarAccess.getDomainDefinitionAccess().getObjectDefsAssignment_3_4()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTypeForwardsAssignment_3_5()); }
		(rule__DomainDefinition__TypeForwardsAssignment_3_5)
		{ after(grammarAccess.getDomainDefinitionAccess().getTypeForwardsAssignment_3_5()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTypesAssignment_3_6()); }
		(rule__DomainDefinition__TypesAssignment_3_6)
		{ after(grammarAccess.getDomainDefinitionAccess().getTypesAssignment_3_6()); }
	)
	|
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getExceptionsAssignment_3_7()); }
		(rule__DomainDefinition__ExceptionsAssignment_3_7)
		{ after(grammarAccess.getDomainDefinitionAccess().getExceptionsAssignment_3_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getTypesAssignment_3_0()); }
		(rule__BuiltinLibraryDefinition__TypesAssignment_3_0)
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getTypesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getExceptionsAssignment_3_1()); }
		(rule__BuiltinLibraryDefinition__ExceptionsAssignment_3_1)
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getExceptionsAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getCharacteristicsAssignment_3_2()); }
		(rule__BuiltinLibraryDefinition__CharacteristicsAssignment_3_2)
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getCharacteristicsAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getTypeDeclarationParserRuleCall_0()); }
		ruleTypeDeclaration
		{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getTypeDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getGroup_1()); }
		(rule__BuiltinTypeDeclaration__Group_1__0)
		{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getGroup_1_0()); }
		(rule__Characteristic__Group_1_0__0)
		{ after(grammarAccess.getCharacteristicAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicAccess().getReceiverTypeAssignment_1_1()); }
		(rule__Characteristic__ReceiverTypeAssignment_1_1)
		{ after(grammarAccess.getCharacteristicAccess().getReceiverTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeReferenceWithRange__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getAbstractTypeReferenceParserRuleCall_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getAbstractTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getRangeTypeReferenceParserRuleCall_1()); }
		ruleRangeTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceWithRangeAccess().getRangeTypeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getTypeKeyword_1_0()); }
		Type
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getTypeKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeAssignment_1_1()); }
		(rule__TypeForwardDeclaration__SubtypeAssignment_1_1)
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_1_0()); }
		Type
		{ after(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getSubtypeAssignment_1_1()); }
		(rule__TypeDeclaration__SubtypeAssignment_1_1)
		{ after(grammarAccess.getTypeDeclarationAccess().getSubtypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getStructureTypeDefinitionParserRuleCall_0()); }
		ruleStructureTypeDefinition
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getStructureTypeDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getEnumerationTypeDefinitionParserRuleCall_1()); }
		ruleEnumerationTypeDefinition
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getEnumerationTypeDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getConstrainedTypeDefinitionParserRuleCall_2()); }
		ruleConstrainedTypeDefinition
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getConstrainedTypeDefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getAbstractTypeReferenceWithCAParserRuleCall_3()); }
		ruleAbstractTypeReferenceWithCA
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getAbstractTypeReferenceWithCAParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeDefinitionAccess().getUnconstrainedArrayDefinitionParserRuleCall_4()); }
		ruleUnconstrainedArrayDefinition
		{ after(grammarAccess.getAbstractTypeDefinitionAccess().getUnconstrainedArrayDefinitionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeConstraintAccess().getRangeConstraintParserRuleCall_0()); }
		ruleRangeConstraint
		{ after(grammarAccess.getAbstractTypeConstraintAccess().getRangeConstraintParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeConstraintAccess().getDeltaConstraintParserRuleCall_1()); }
		ruleDeltaConstraint
		{ after(grammarAccess.getAbstractTypeConstraintAccess().getDeltaConstraintParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeConstraintAccess().getDigitsConstraintParserRuleCall_2()); }
		ruleDigitsConstraint
		{ after(grammarAccess.getAbstractTypeConstraintAccess().getDigitsConstraintParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_1_0_0()); }
		EqualsSign
		{ after(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumeratorAccess().getColonEqualsSignKeyword_1_0_1()); }
		ColonEqualsSign
		{ after(grammarAccess.getEnumeratorAccess().getColonEqualsSignKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeReferenceAccess().getNamedTypeReferenceParserRuleCall_0()); }
		ruleNamedTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceAccess().getNamedTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeReferenceAccess().getInstanceTypeReferenceParserRuleCall_1()); }
		ruleInstanceTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceAccess().getInstanceTypeReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeReferenceAccess().getAbstractCollectionTypeReferenceParserRuleCall_2()); }
		ruleAbstractCollectionTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceAccess().getAbstractCollectionTypeReferenceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeReferenceWithCA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithCAAccess().getAbstractTypeReferenceParserRuleCall_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceWithCAAccess().getAbstractTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeReferenceWithCAAccess().getConstrainedArrayTypeReferenceParserRuleCall_1()); }
		ruleConstrainedArrayTypeReference
		{ after(grammarAccess.getAbstractTypeReferenceWithCAAccess().getConstrainedArrayTypeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractCollectionTypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getSequenceTypeReferenceParserRuleCall_0()); }
		ruleSequenceTypeReference
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getSequenceTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getArrayTypeReferenceParserRuleCall_1()); }
		ruleArrayTypeReference
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getArrayTypeReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getSetTypeReferenceParserRuleCall_2()); }
		ruleSetTypeReference
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getSetTypeReferenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getBagTypeReferenceParserRuleCall_3()); }
		ruleBagTypeReference
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getBagTypeReferenceParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractCollectionTypeReferenceAccess().getDictionaryTypeReferenceParserRuleCall_4()); }
		ruleDictionaryTypeReference
		{ after(grammarAccess.getAbstractCollectionTypeReferenceAccess().getDictionaryTypeReferenceParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getIndexTypeAssignment_3_0()); }
		(rule__ArrayTypeReference__IndexTypeAssignment_3_0)
		{ after(grammarAccess.getArrayTypeReferenceAccess().getIndexTypeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getExpressionAssignment_3_1()); }
		(rule__ArrayTypeReference__ExpressionAssignment_3_1)
		{ after(grammarAccess.getArrayTypeReferenceAccess().getExpressionAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDictKeyTypeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDictKeyTypeRefAccess().getNamedTypeReferenceParserRuleCall_0()); }
		ruleNamedTypeReference
		{ after(grammarAccess.getAbstractDictKeyTypeRefAccess().getNamedTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractDictKeyTypeRefAccess().getInstanceTypeReferenceParserRuleCall_1()); }
		ruleInstanceTypeReference
		{ after(grammarAccess.getAbstractDictKeyTypeRefAccess().getInstanceTypeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getServiceKeyword_1_0()); }
		Service
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getServiceKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getFunctionKeyword_1_1()); }
		Function
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getFunctionKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getAttributesAssignment_3_0()); }
		(rule__ObjectDefinition__AttributesAssignment_3_0)
		{ after(grammarAccess.getObjectDefinitionAccess().getAttributesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getIdentifiersAssignment_3_1()); }
		(rule__ObjectDefinition__IdentifiersAssignment_3_1)
		{ after(grammarAccess.getObjectDefinitionAccess().getIdentifiersAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getServicesAssignment_3_2()); }
		(rule__ObjectDefinition__ServicesAssignment_3_2)
		{ after(grammarAccess.getObjectDefinitionAccess().getServicesAssignment_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getEventsAssignment_3_3()); }
		(rule__ObjectDefinition__EventsAssignment_3_3)
		{ after(grammarAccess.getObjectDefinitionAccess().getEventsAssignment_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getStatesAssignment_3_4()); }
		(rule__ObjectDefinition__StatesAssignment_3_4)
		{ after(grammarAccess.getObjectDefinitionAccess().getStatesAssignment_3_4()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getTransitionsAssignment_3_5()); }
		(rule__ObjectDefinition__TransitionsAssignment_3_5)
		{ after(grammarAccess.getObjectDefinitionAccess().getTransitionsAssignment_3_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getGroup_3_0()); }
		(rule__AttributeReferential__Group_3_0__0)
		{ after(grammarAccess.getAttributeReferentialAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getGroup_3_1()); }
		(rule__AttributeReferential__Group_3_1__0)
		{ after(grammarAccess.getAttributeReferentialAccess().getGroup_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_2()); }
		(rule__AttributeReferential__AttributeAssignment_3_2)
		{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getServiceKeyword_3_0()); }
		Service
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getServiceKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getFunctionKeyword_3_1()); }
		Function
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getFunctionKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTypeSyntax__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateTypeSyntaxAccess().getGroup_0()); }
		(rule__StateTypeSyntax__Group_0__0)
		{ after(grammarAccess.getStateTypeSyntaxAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateTypeSyntaxAccess().getCreationKeyword_1()); }
		Creation
		{ after(grammarAccess.getStateTypeSyntaxAccess().getCreationKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStateTypeSyntaxAccess().getTerminalKeyword_2()); }
		Terminal
		{ after(grammarAccess.getStateTypeSyntaxAccess().getTerminalKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getStartAssignment_0_0()); }
		(rule__TransitionRow__StartAssignment_0_0)
		{ after(grammarAccess.getTransitionRowAccess().getStartAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantAssignment_0_1()); }
		(rule__TransitionRow__NonExistantAssignment_0_1)
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__NonExistantAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantNon_ExistentKeyword_0_1_0_0()); }
		Non_Existent
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantNon_ExistentKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantNon_ExistantKeyword_0_1_0_1()); }
		Non_Existant
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantNon_ExistantKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantNon_existentKeyword_0_1_0_2()); }
		Non_existent
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantNon_existentKeyword_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantNon_existantKeyword_0_1_0_3()); }
		Non_existant
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantNon_existantKeyword_0_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getEndStateAssignment_3_0()); }
		(rule__TransitionOption__EndStateAssignment_3_0)
		{ after(grammarAccess.getTransitionOptionAccess().getEndStateAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionOptionAccess().getIgnoreAssignment_3_1()); }
		(rule__TransitionOption__IgnoreAssignment_3_1)
		{ after(grammarAccess.getTransitionOptionAccess().getIgnoreAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionOptionAccess().getCannotHappenAssignment_3_2()); }
		(rule__TransitionOption__CannotHappenAssignment_3_2)
		{ after(grammarAccess.getTransitionOptionAccess().getCannotHappenAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__CannotHappenAlternatives_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getCannotHappenCannot_HappenKeyword_3_2_0_0()); }
		Cannot_Happen
		{ after(grammarAccess.getTransitionOptionAccess().getCannotHappenCannot_HappenKeyword_3_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionOptionAccess().getCannotHappenCannot_happenKeyword_3_2_0_1()); }
		Cannot_happen
		{ after(grammarAccess.getTransitionOptionAccess().getCannotHappenCannot_happenKeyword_3_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getServiceKeyword_1_0()); }
		Service
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getServiceKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getFunctionKeyword_1_1()); }
		Function
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getFunctionKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipDefinitionAccess().getRegularRelationshipDefinitionParserRuleCall_1_0()); }
		ruleRegularRelationshipDefinition
		{ after(grammarAccess.getRelationshipDefinitionAccess().getRegularRelationshipDefinitionParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipDefinitionAccess().getAssocRelationshipDefinitionParserRuleCall_1_1()); }
		ruleAssocRelationshipDefinition
		{ after(grammarAccess.getRelationshipDefinitionAccess().getAssocRelationshipDefinitionParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipDefinitionAccess().getSubtypeRelationshipDefinitionParserRuleCall_1_2()); }
		ruleSubtypeRelationshipDefinition
		{ after(grammarAccess.getRelationshipDefinitionAccess().getSubtypeRelationshipDefinitionParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleAssignment_1_1_0()); }
		(rule__RelationshipNavigation__ObjectOrRoleAssignment_1_1_0)
		{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleAssignment_1_1_1()); }
		(rule__RelationshipNavigation__ObjectOrRoleAssignment_1_1_1)
		{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getServiceKeyword_1_0()); }
		Service
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getServiceKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getFunctionKeyword_1_1()); }
		Function
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getFunctionKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getServiceKeyword_9_0()); }
		Service
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getServiceKeyword_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getFunctionKeyword_9_1()); }
		Function
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getFunctionKeyword_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getServiceKeyword_3_0()); }
		Service
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getServiceKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getFunctionKeyword_3_1()); }
		Function
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getFunctionKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Alternatives_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getServiceKeyword_13_0()); }
		Service
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getServiceKeyword_13_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getFunctionKeyword_13_1()); }
		Function
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getFunctionKeyword_13_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceKeyword_1_0()); }
		Service
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getFunctionKeyword_1_1()); }
		Function
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getFunctionKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Alternatives_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceKeyword_11_0()); }
		Service
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getServiceKeyword_11_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getFunctionKeyword_11_1()); }
		Function
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getFunctionKeyword_11_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCodeBlockStatementParserRuleCall_0_0()); }
		ruleCodeBlockStatement
		{ after(grammarAccess.getStatementAccess().getCodeBlockStatementParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_0_1()); }
		ruleAssignStatement
		{ after(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExitStatementParserRuleCall_0_2()); }
		ruleExitStatement
		{ after(grammarAccess.getStatementAccess().getExitStatementParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_0_3()); }
		ruleReturnStatement
		{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDelayStatementParserRuleCall_0_4()); }
		ruleDelayStatement
		{ after(grammarAccess.getStatementAccess().getDelayStatementParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRaiseStatementParserRuleCall_0_5()); }
		ruleRaiseStatement
		{ after(grammarAccess.getStatementAccess().getRaiseStatementParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_0_6()); }
		ruleDeleteStatement
		{ after(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEraseStatementParserRuleCall_0_7()); }
		ruleEraseStatement
		{ after(grammarAccess.getStatementAccess().getEraseStatementParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getScheduleStatementParserRuleCall_0_8()); }
		ruleScheduleStatement
		{ after(grammarAccess.getStatementAccess().getScheduleStatementParserRuleCall_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCancelTimerStatementParserRuleCall_0_9()); }
		ruleCancelTimerStatement
		{ after(grammarAccess.getStatementAccess().getCancelTimerStatementParserRuleCall_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGenerateStatementParserRuleCall_0_10()); }
		ruleGenerateStatement
		{ after(grammarAccess.getStatementAccess().getGenerateStatementParserRuleCall_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0_11()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCaseStatementParserRuleCall_0_12()); }
		ruleCaseStatement
		{ after(grammarAccess.getStatementAccess().getCaseStatementParserRuleCall_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_0_13()); }
		ruleForStatement
		{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_0_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_0_14()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_0_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPrimary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPrimaryAccess().getFindEqualityParserRuleCall_0()); }
		ruleFindEquality
		{ after(grammarAccess.getFindPrimaryAccess().getFindEqualityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindPrimaryAccess().getFindUnaryParserRuleCall_1()); }
		ruleFindUnary
		{ after(grammarAccess.getFindPrimaryAccess().getFindUnaryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindUnaryAccess().getGroup_0()); }
		(rule__FindUnary__Group_0__0)
		{ after(grammarAccess.getFindUnaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindUnaryAccess().getGroup_1()); }
		(rule__FindUnary__Group_1__0)
		{ after(grammarAccess.getFindUnaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindEqualityAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
		EqualsSign
		{ after(grammarAccess.getFindEqualityAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindEqualityAccess().getOperatorSolidusEqualsSignKeyword_1_1_0_1()); }
		SolidusEqualsSign
		{ after(grammarAccess.getFindEqualityAccess().getOperatorSolidusEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindRelationExpAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
		LessThanSign
		{ after(grammarAccess.getFindRelationExpAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindRelationExpAccess().getOperatorGreaterThanSignKeyword_1_1_0_1()); }
		GreaterThanSign
		{ after(grammarAccess.getFindRelationExpAccess().getOperatorGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFindRelationExpAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_2()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getFindRelationExpAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFindRelationExpAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getFindRelationExpAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getGroup_1_0()); }
		(rule__FindName__Group_1_0__0)
		{ after(grammarAccess.getFindNameAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindNameAccess().getGroup_1_1()); }
		(rule__FindName__Group_1_1__0)
		{ after(grammarAccess.getFindNameAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }
		LessThanSignLessThanSign
		{ after(grammarAccess.getStreamOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
		GreaterThanSignGreaterThanSign
		{ after(grammarAccess.getStreamOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getLessThanSignLessThanSignLessThanSignKeyword_2()); }
		LessThanSignLessThanSignLessThanSign
		{ after(grammarAccess.getStreamOperatorAccess().getLessThanSignLessThanSignLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getStreamOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_3()); }
		GreaterThanSignGreaterThanSignGreaterThanSign
		{ after(grammarAccess.getStreamOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
		EqualsSign
		{ after(grammarAccess.getEqualityAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOperatorSolidusEqualsSignKeyword_1_1_0_1()); }
		SolidusEqualsSign
		{ after(grammarAccess.getEqualityAccess().getOperatorSolidusEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
		LessThanSign
		{ after(grammarAccess.getRelationalExpAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getOperatorGreaterThanSignKeyword_1_1_0_1()); }
		GreaterThanSign
		{ after(grammarAccess.getRelationalExpAccess().getOperatorGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_2()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getRelationalExpAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getRelationalExpAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
		PlusSign
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorAmpersandKeyword_1_1_0_2()); }
		Ampersand
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorAmpersandKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorUnionKeyword_1_1_0_3()); }
		Union
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorUnionKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorNot_inKeyword_1_1_0_4()); }
		Not_in
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorNot_inKeyword_1_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
		Asterisk
		{ after(grammarAccess.getMultExpAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorSolidusKeyword_1_1_0_1()); }
		Solidus
		{ after(grammarAccess.getMultExpAccess().getOperatorSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorModKeyword_1_1_0_2()); }
		Mod
		{ after(grammarAccess.getMultExpAccess().getOperatorModKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0_3()); }
		AsteriskAsterisk
		{ after(grammarAccess.getMultExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorRemKeyword_1_1_0_4()); }
		Rem
		{ after(grammarAccess.getMultExpAccess().getOperatorRemKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorIntersectionKeyword_1_1_0_5()); }
		Intersection
		{ after(grammarAccess.getMultExpAccess().getOperatorIntersectionKeyword_1_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorDisunionKeyword_1_1_0_6()); }
		Disunion
		{ after(grammarAccess.getMultExpAccess().getOperatorDisunionKeyword_1_1_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpAccess().getGroup_0()); }
		(rule__UnaryExp__Group_0__0)
		{ after(grammarAccess.getUnaryExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpAccess().getLinkExpressionParserRuleCall_1()); }
		ruleLinkExpression
		{ after(grammarAccess.getUnaryExpAccess().getLinkExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_0()); }
		HyphenMinus
		{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_1()); }
		PlusSign
		{ after(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotKeyword_2()); }
		Not
		{ after(grammarAccess.getUnaryOperatorAccess().getNotKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAbsKeyword_3()); }
		Abs
		{ after(grammarAccess.getUnaryOperatorAccess().getAbsKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getNavigateExpressionParserRuleCall_0()); }
		ruleNavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getNavigateExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
		(rule__LinkExpression__Group_1__0)
		{ after(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_0()); }
		(rule__NavigateExpression__Group_1_1_0__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_1()); }
		(rule__NavigateExpression__Group_1_1_1__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_2()); }
		(rule__NavigateExpression__Group_1_1_2__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_3()); }
		(rule__NavigateExpression__Group_1_1_3__0)
		{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
		rulePostfixExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getCreateExpressionParserRuleCall_1()); }
		ruleCreateExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getCreateExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getFindExpressionParserRuleCall_2()); }
		ruleFindExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getFindExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getGroup_0()); }
		(rule__CreateArgument__Group_0__0)
		{ after(grammarAccess.getCreateArgumentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateArgumentAccess().getGroup_1()); }
		(rule__CreateArgument__Group_1__0)
		{ after(grammarAccess.getCreateArgumentAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_0()); }
		(rule__PostfixExpression__Group_1_0__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_1()); }
		(rule__PostfixExpression__Group_1_1__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_2()); }
		(rule__PostfixExpression__Group_1_2__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_3()); }
		(rule__PostfixExpression__Group_1_3__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4()); }
		(rule__PostfixExpression__Group_1_4__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicIDAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicIDAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicIDAccess().getRangeKeyword_1()); }
		Range
		{ after(grammarAccess.getCharacteristicIDAccess().getRangeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicIDAccess().getDeltaKeyword_2()); }
		Delta
		{ after(grammarAccess.getCharacteristicIDAccess().getDeltaKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_0()); }
		(rule__PostfixNoActionCallExpression__Group_1_0__0)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_1()); }
		(rule__PostfixNoActionCallExpression__Group_1_1__0)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_2()); }
		(rule__PostfixNoActionCallExpression__Group_1_2__0)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoActionCallExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoActionCallExpressionAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryNoActionCallExpressionAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoActionCallExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
		ruleParenthesisedExpression
		{ after(grammarAccess.getPrimaryNoActionCallExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoActionCallExpressionAccess().getSimpleFeatureCallParserRuleCall_2()); }
		ruleSimpleFeatureCall
		{ after(grammarAccess.getPrimaryNoActionCallExpressionAccess().getSimpleFeatureCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoActionCallExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
		ruleTypeNameExpression
		{ after(grammarAccess.getPrimaryNoActionCallExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
		ruleParenthesisedExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesisedExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getSimpleFeatureCallParserRuleCall_2()); }
		ruleSimpleFeatureCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getSimpleFeatureCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
		ruleTypeNameExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getInstanceTypeReferenceParserRuleCall_0()); }
		ruleInstanceTypeReference
		{ after(grammarAccess.getTypeNameExpressionAccess().getInstanceTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameExpressionAccess().getAbstractCollectionTypeReferenceParserRuleCall_1()); }
		ruleAbstractCollectionTypeReference
		{ after(grammarAccess.getTypeNameExpressionAccess().getAbstractCollectionTypeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
		ruleRealLiteral
		{ after(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_2()); }
		ruleCharacterLiteral
		{ after(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDurationLiteralParserRuleCall_4()); }
		ruleDurationLiteral
		{ after(grammarAccess.getLiteralAccess().getDurationLiteralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTimestampLiteralParserRuleCall_5()); }
		ruleTimestampLiteral
		{ after(grammarAccess.getLiteralAccess().getTimestampLiteralParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_6()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_7()); }
		ruleNullLiteral
		{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFlushLiteralParserRuleCall_8()); }
		ruleFlushLiteral
		{ after(grammarAccess.getLiteralAccess().getFlushLiteralParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getThisLiteralParserRuleCall_9()); }
		ruleThisLiteral
		{ after(grammarAccess.getLiteralAccess().getThisLiteralParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getConsoleLiteralParserRuleCall_10()); }
		ruleConsoleLiteral
		{ after(grammarAccess.getLiteralAccess().getConsoleLiteralParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getEndlLiteralParserRuleCall_11()); }
		ruleEndlLiteral
		{ after(grammarAccess.getLiteralAccess().getEndlLiteralParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getLineNoLiteralParserRuleCall_12()); }
		ruleLineNoLiteral
		{ after(grammarAccess.getLiteralAccess().getLineNoLiteralParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFileNameLiteralParserRuleCall_13()); }
		ruleFileNameLiteral
		{ after(grammarAccess.getLiteralAccess().getFileNameLiteralParserRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_0()); }
		(rule__BooleanLiteral__ValueAssignment_0)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup_1()); }
		(rule__BooleanLiteral__Group_1__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
		(Public)
		{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
		(Private)
		{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTypeAccess().getAssignerEnumLiteralDeclaration_0()); }
		(Assigner)
		{ after(grammarAccess.getEventTypeAccess().getAssignerEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventTypeAccess().getCreationEnumLiteralDeclaration_1()); }
		(Creation)
		{ after(grammarAccess.getEventTypeAccess().getCreationEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterModeAccess().getInEnumLiteralDeclaration_0()); }
		(In)
		{ after(grammarAccess.getParameterModeAccess().getInEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterModeAccess().getOutEnumLiteralDeclaration_1()); }
		(Out)
		{ after(grammarAccess.getParameterModeAccess().getOutEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditionality__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalityAccess().getUnconditionallyEnumLiteralDeclaration_0()); }
		(Unconditionally)
		{ after(grammarAccess.getConditionalityAccess().getUnconditionallyEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalityAccess().getConditionallyEnumLiteralDeclaration_1()); }
		(Conditionally)
		{ after(grammarAccess.getConditionalityAccess().getConditionallyEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getOneEnumLiteralDeclaration_0()); }
		(One)
		{ after(grammarAccess.getMultiplicityAccess().getOneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityAccess().getManyEnumLiteralDeclaration_1()); }
		(Many)
		{ after(grammarAccess.getMultiplicityAccess().getManyEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkTypeAccess().getLinkEnumLiteralDeclaration_0()); }
		(Link)
		{ after(grammarAccess.getLinkTypeAccess().getLinkEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkTypeAccess().getUnlinkEnumLiteralDeclaration_1()); }
		(Unlink)
		{ after(grammarAccess.getLinkTypeAccess().getUnlinkEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleTypeAccess().getAtEnumLiteralDeclaration_0()); }
		(At)
		{ after(grammarAccess.getScheduleTypeAccess().getAtEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getScheduleTypeAccess().getDelayEnumLiteralDeclaration_1()); }
		(Delay)
		{ after(grammarAccess.getScheduleTypeAccess().getDelayEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindTypeAccess().getFindEnumLiteralDeclaration_0()); }
		(Find)
		{ after(grammarAccess.getFindTypeAccess().getFindEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFindTypeAccess().getFindEnumLiteralDeclaration_1()); }
		(Find_all)
		{ after(grammarAccess.getFindTypeAccess().getFindEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFindTypeAccess().getFind_oneEnumLiteralDeclaration_2()); }
		(Find_one)
		{ after(grammarAccess.getFindTypeAccess().getFind_oneEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getFindTypeAccess().getFind_onlyEnumLiteralDeclaration_3()); }
		(Find_only)
		{ after(grammarAccess.getFindTypeAccess().getFind_onlyEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaslModel__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaslModel__Group_1__0__Impl
	rule__MaslModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaslModel__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaslModelAccess().getMaslModelAction_1_0()); }
	()
	{ after(grammarAccess.getMaslModelAccess().getMaslModelAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaslModel__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaslModel__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaslModel__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaslModelAccess().getElementsAssignment_1_1()); }
	(rule__MaslModel__ElementsAssignment_1_1)*
	{ after(grammarAccess.getMaslModelAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedName__Group__0__Impl
	rule__ScopedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedNameAccess().getGroup_0()); }
	(rule__ScopedName__Group_0__0)?
	{ after(grammarAccess.getScopedNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedName__Group_0__0__Impl
	rule__ScopedName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
	{ after(grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedNameAccess().getColonColonKeyword_0_1()); }
	ColonColon
	{ after(grammarAccess.getScopedNameAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaList__Group__0__Impl
	rule__PragmaList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaListAccess().getPragmasAssignment_0()); }
	(rule__PragmaList__PragmasAssignment_0)
	{ after(grammarAccess.getPragmaListAccess().getPragmasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PragmaList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaListAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getPragmaListAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__0__Impl
	rule__Pragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getPragmaKeyword_0()); }
	Pragma
	{ after(grammarAccess.getPragmaAccess().getPragmaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__1__Impl
	rule__Pragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getNameAssignment_1()); }
	(rule__Pragma__NameAssignment_1)
	{ after(grammarAccess.getPragmaAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__2__Impl
	rule__Pragma__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getPragmaAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__3__Impl
	rule__Pragma__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getGroup_3()); }
	(rule__Pragma__Group_3__0)?
	{ after(grammarAccess.getPragmaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getPragmaAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_3__0__Impl
	rule__Pragma__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getValuesAssignment_3_0()); }
	(rule__Pragma__ValuesAssignment_3_0)
	{ after(grammarAccess.getPragmaAccess().getValuesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getGroup_3_1()); }
	(rule__Pragma__Group_3_1__0)*
	{ after(grammarAccess.getPragmaAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_3_1__0__Impl
	rule__Pragma__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getCommaKeyword_3_1_0()); }
	Comma
	{ after(grammarAccess.getPragmaAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getValuesAssignment_3_1_1()); }
	(rule__Pragma__ValuesAssignment_3_1_1)
	{ after(grammarAccess.getPragmaAccess().getValuesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
	RightParenthesis
	{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_1_0()); }
	(rule__ParameterList__ParametersAssignment_1_0)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1_1()); }
	(rule__ParameterList__Group_1_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__0__Impl
	rule__ParameterList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
	Comma
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1_1()); }
	(rule__ParameterList__ParametersAssignment_1_1_1)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getModeAssignment_2()); }
	(rule__Parameter__ModeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getModeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
	(rule__Parameter__TypeAssignment_3)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__0__Impl
	rule__ProjectDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getProjectKeyword_0()); }
	Project
	{ after(grammarAccess.getProjectDefinitionAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__1__Impl
	rule__ProjectDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getNameAssignment_1()); }
	(rule__ProjectDefinition__NameAssignment_1)
	{ after(grammarAccess.getProjectDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__2__Impl
	rule__ProjectDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getProjectDefinitionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__3__Impl
	rule__ProjectDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getDomainsAssignment_3()); }
	(rule__ProjectDefinition__DomainsAssignment_3)*
	{ after(grammarAccess.getProjectDefinitionAccess().getDomainsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__4__Impl
	rule__ProjectDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getProjectDefinitionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__5__Impl
	rule__ProjectDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getProjectKeyword_5()); }
	(Project)?
	{ after(grammarAccess.getProjectDefinitionAccess().getProjectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__6__Impl
	rule__ProjectDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getSemicolonKeyword_6()); }
	(Semicolon)?
	{ after(grammarAccess.getProjectDefinitionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectDefinitionAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getProjectDefinitionAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__0__Impl
	rule__DomainDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0()); }
	Domain
	{ after(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__1__Impl
	rule__DomainDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getNameAssignment_1()); }
	(rule__DomainDefinition__NameAssignment_1)
	{ after(grammarAccess.getDomainDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__2__Impl
	rule__DomainDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getDomainDefinitionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__3__Impl
	rule__DomainDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getAlternatives_3()); }
	(rule__DomainDefinition__Alternatives_3)*
	{ after(grammarAccess.getDomainDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__4__Impl
	rule__DomainDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getDomainDefinitionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__5__Impl
	rule__DomainDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_5()); }
	(Domain)?
	{ after(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__6__Impl
	rule__DomainDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getSemicolonKeyword_6()); }
	(Semicolon)?
	{ after(grammarAccess.getDomainDefinitionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getDomainDefinitionAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinLibraryDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__0__Impl
	rule__BuiltinLibraryDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinLibraryDefinitionAction_0()); }
	()
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinLibraryDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__1__Impl
	rule__BuiltinLibraryDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinKeyword_1()); }
	Builtin
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__2__Impl
	rule__BuiltinLibraryDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__3__Impl
	rule__BuiltinLibraryDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getAlternatives_3()); }
	(rule__BuiltinLibraryDefinition__Alternatives_3)*
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__4__Impl
	rule__BuiltinLibraryDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__5__Impl
	rule__BuiltinLibraryDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinKeyword_5()); }
	(Builtin)?
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getBuiltinKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinLibraryDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinTypeDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinTypeDeclaration__Group_1__0__Impl
	rule__BuiltinTypeDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getBuiltinTypeDeclarationAction_1_0()); }
	()
	{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getBuiltinTypeDeclarationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinTypeDeclaration__Group_1__1__Impl
	rule__BuiltinTypeDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAssignment_1_1()); }
	(rule__BuiltinTypeDeclaration__AnonymousAssignment_1_1)?
	{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinTypeDeclaration__Group_1__2__Impl
	rule__BuiltinTypeDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getBuiltinKeyword_1_2()); }
	Builtin
	{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getBuiltinKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinTypeDeclaration__Group_1__3__Impl
	rule__BuiltinTypeDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getNameAssignment_1_3()); }
	(rule__BuiltinTypeDeclaration__NameAssignment_1_3)
	{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getNameAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinTypeDeclaration__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getSemicolonKeyword_1_4()); }
	Semicolon
	{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getSemicolonKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__0__Impl
	rule__Characteristic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getGroup_0()); }
	(rule__Characteristic__Group_0__0)?
	{ after(grammarAccess.getCharacteristicAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__1__Impl
	rule__Characteristic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getAlternatives_1()); }
	(rule__Characteristic__Alternatives_1)
	{ after(grammarAccess.getCharacteristicAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__2__Impl
	rule__Characteristic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getApostropheKeyword_2()); }
	Apostrophe
	{ after(grammarAccess.getCharacteristicAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__3__Impl
	rule__Characteristic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getNameAssignment_3()); }
	(rule__Characteristic__NameAssignment_3)
	{ after(grammarAccess.getCharacteristicAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__4__Impl
	rule__Characteristic__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getParameterListParserRuleCall_4()); }
	(ruleParameterList)?
	{ after(grammarAccess.getCharacteristicAccess().getParameterListParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__5__Impl
	rule__Characteristic__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getGroup_5()); }
	(rule__Characteristic__Group_5__0)?
	{ after(grammarAccess.getCharacteristicAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getCharacteristicAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0__0__Impl
	rule__Characteristic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getLessThanSignKeyword_0_0()); }
	LessThanSign
	{ after(grammarAccess.getCharacteristicAccess().getLessThanSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0__1__Impl
	rule__Characteristic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getTypeParamsAssignment_0_1()); }
	(rule__Characteristic__TypeParamsAssignment_0_1)
	{ after(grammarAccess.getCharacteristicAccess().getTypeParamsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0__2__Impl
	rule__Characteristic__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getGroup_0_2()); }
	(rule__Characteristic__Group_0_2__0)*
	{ after(grammarAccess.getCharacteristicAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getGreaterThanSignKeyword_0_3()); }
	GreaterThanSign
	{ after(grammarAccess.getCharacteristicAccess().getGreaterThanSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0_2__0__Impl
	rule__Characteristic__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getCommaKeyword_0_2_0()); }
	Comma
	{ after(grammarAccess.getCharacteristicAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getTypeParamsAssignment_0_2_1()); }
	(rule__Characteristic__TypeParamsAssignment_0_2_1)
	{ after(grammarAccess.getCharacteristicAccess().getTypeParamsAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_1_0__0__Impl
	rule__Characteristic__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getForValueAssignment_1_0_0()); }
	(rule__Characteristic__ForValueAssignment_1_0_0)
	{ after(grammarAccess.getCharacteristicAccess().getForValueAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_1_0__1__Impl
	rule__Characteristic__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getReceiverTypeAssignment_1_0_1()); }
	(rule__Characteristic__ReceiverTypeAssignment_1_0_1)
	{ after(grammarAccess.getCharacteristicAccess().getReceiverTypeAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getRightParenthesisKeyword_1_0_2()); }
	RightParenthesis
	{ after(grammarAccess.getCharacteristicAccess().getRightParenthesisKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_5__0__Impl
	rule__Characteristic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getReturnKeyword_5_0()); }
	Return
	{ after(grammarAccess.getCharacteristicAccess().getReturnKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getReturnTypeAssignment_5_1()); }
	(rule__Characteristic__ReturnTypeAssignment_5_1)
	{ after(grammarAccess.getCharacteristicAccess().getReturnTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeParameter__Group__0__Impl
	rule__TypeParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeParameterAccess().getEnumAssignment_0()); }
	(rule__TypeParameter__EnumAssignment_0)?
	{ after(grammarAccess.getTypeParameterAccess().getEnumAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeParameterAccess().getNameAssignment_1()); }
	(rule__TypeParameter__NameAssignment_1)
	{ after(grammarAccess.getTypeParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeTypeReference__Group__0__Impl
	rule__RangeTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__RangeTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeTypeReference__Group__1__Impl
	rule__RangeTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeTypeReferenceAccess().getRangeKeyword_1()); }
	Range
	{ after(grammarAccess.getRangeTypeReferenceAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeTypeReference__Group__2__Impl
	rule__RangeTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeTypeReferenceAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getRangeTypeReferenceAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeTypeReferenceAccess().getElementTypeAssignment_3()); }
	(rule__RangeTypeReference__ElementTypeAssignment_3)
	{ after(grammarAccess.getRangeTypeReferenceAccess().getElementTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDeclaration__Group__0__Impl
	rule__ExceptionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__ExceptionDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getExceptionDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDeclaration__Group__1__Impl
	rule__ExceptionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclarationAccess().getExceptionKeyword_1()); }
	Exception
	{ after(grammarAccess.getExceptionDeclarationAccess().getExceptionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDeclaration__Group__2__Impl
	rule__ExceptionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclarationAccess().getNameAssignment_2()); }
	(rule__ExceptionDeclaration__NameAssignment_2)
	{ after(grammarAccess.getExceptionDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDeclaration__Group__3__Impl
	rule__ExceptionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclarationAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getExceptionDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclarationAccess().getPragmaListParserRuleCall_4()); }
	rulePragmaList
	{ after(grammarAccess.getExceptionDeclarationAccess().getPragmaListParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeForwardDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeForwardDeclaration__Group__0__Impl
	rule__TypeForwardDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeForwardDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__TypeForwardDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getTypeForwardDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeForwardDeclaration__Group__1__Impl
	rule__TypeForwardDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeForwardDeclarationAccess().getAlternatives_1()); }
	(rule__TypeForwardDeclaration__Alternatives_1)
	{ after(grammarAccess.getTypeForwardDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeForwardDeclaration__Group__2__Impl
	rule__TypeForwardDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeForwardDeclarationAccess().getNameAssignment_2()); }
	(rule__TypeForwardDeclaration__NameAssignment_2)
	{ after(grammarAccess.getTypeForwardDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeForwardDeclaration__Group__3__Impl
	rule__TypeForwardDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeForwardDeclarationAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getTypeForwardDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeForwardDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeForwardDeclarationAccess().getPragmaListParserRuleCall_4()); }
	rulePragmaList
	{ after(grammarAccess.getTypeForwardDeclarationAccess().getPragmaListParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__TypeDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getTypeDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_1()); }
	(rule__TypeDeclaration__Alternatives_1)
	{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__2__Impl
	rule__TypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getNameAssignment_2()); }
	(rule__TypeDeclaration__NameAssignment_2)
	{ after(grammarAccess.getTypeDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__3__Impl
	rule__TypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getIsKeyword_3()); }
	Is
	{ after(grammarAccess.getTypeDeclarationAccess().getIsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__4__Impl
	rule__TypeDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getDefinitionAssignment_4()); }
	(rule__TypeDeclaration__DefinitionAssignment_4)
	{ after(grammarAccess.getTypeDeclarationAccess().getDefinitionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__5__Impl
	rule__TypeDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__6__Impl
	rule__TypeDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_6()); }
	(Semicolon)?
	{ after(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getTypeDeclarationAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainedTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedTypeDefinition__Group__0__Impl
	rule__ConstrainedTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedTypeDefinitionAccess().getTypeAssignment_0()); }
	(rule__ConstrainedTypeDefinition__TypeAssignment_0)
	{ after(grammarAccess.getConstrainedTypeDefinitionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedTypeDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedTypeDefinitionAccess().getConstraintAssignment_1()); }
	(rule__ConstrainedTypeDefinition__ConstraintAssignment_1)
	{ after(grammarAccess.getConstrainedTypeDefinitionAccess().getConstraintAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstraint__Group__0__Impl
	rule__RangeConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstraintAccess().getRangeKeyword_0()); }
	Range
	{ after(grammarAccess.getRangeConstraintAccess().getRangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstraintAccess().getRangeAssignment_1()); }
	(rule__RangeConstraint__RangeAssignment_1)
	{ after(grammarAccess.getRangeConstraintAccess().getRangeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeltaConstraint__Group__0__Impl
	rule__DeltaConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeltaConstraintAccess().getDeltaKeyword_0()); }
	Delta
	{ after(grammarAccess.getDeltaConstraintAccess().getDeltaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeltaConstraint__Group__1__Impl
	rule__DeltaConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeltaConstraintAccess().getDeltaAssignment_1()); }
	(rule__DeltaConstraint__DeltaAssignment_1)
	{ after(grammarAccess.getDeltaConstraintAccess().getDeltaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeltaConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeltaConstraintAccess().getConstraintAssignment_2()); }
	(rule__DeltaConstraint__ConstraintAssignment_2)
	{ after(grammarAccess.getDeltaConstraintAccess().getConstraintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DigitsConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitsConstraint__Group__0__Impl
	rule__DigitsConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitsConstraintAccess().getDigitsKeyword_0()); }
	Digits
	{ after(grammarAccess.getDigitsConstraintAccess().getDigitsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitsConstraint__Group__1__Impl
	rule__DigitsConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitsConstraintAccess().getDigitsAssignment_1()); }
	(rule__DigitsConstraint__DigitsAssignment_1)
	{ after(grammarAccess.getDigitsConstraintAccess().getDigitsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitsConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitsConstraintAccess().getConstraintAssignment_2()); }
	(rule__DigitsConstraint__ConstraintAssignment_2)
	{ after(grammarAccess.getDigitsConstraintAccess().getConstraintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructureTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureTypeDefinition__Group__0__Impl
	rule__StructureTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureTypeDefinitionAccess().getStructureTypeDefinitionAction_0()); }
	()
	{ after(grammarAccess.getStructureTypeDefinitionAccess().getStructureTypeDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureTypeDefinition__Group__1__Impl
	rule__StructureTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureTypeDefinitionAccess().getStructureKeyword_1()); }
	Structure
	{ after(grammarAccess.getStructureTypeDefinitionAccess().getStructureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureTypeDefinition__Group__2__Impl
	rule__StructureTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureTypeDefinitionAccess().getComponentsAssignment_2()); }
	(rule__StructureTypeDefinition__ComponentsAssignment_2)*
	{ after(grammarAccess.getStructureTypeDefinitionAccess().getComponentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureTypeDefinition__Group__3__Impl
	rule__StructureTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureTypeDefinitionAccess().getEndKeyword_3()); }
	End
	{ after(grammarAccess.getStructureTypeDefinitionAccess().getEndKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureTypeDefinitionAccess().getStructureKeyword_4()); }
	(Structure)?
	{ after(grammarAccess.getStructureTypeDefinitionAccess().getStructureKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructureComponentDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__0__Impl
	rule__StructureComponentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getNameAssignment_0()); }
	(rule__StructureComponentDefinition__NameAssignment_0)
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__1__Impl
	rule__StructureComponentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__2__Impl
	rule__StructureComponentDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getTypeAssignment_2()); }
	(rule__StructureComponentDefinition__TypeAssignment_2)
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__3__Impl
	rule__StructureComponentDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getGroup_3()); }
	(rule__StructureComponentDefinition__Group_3__0)?
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__4__Impl
	rule__StructureComponentDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getPragmaListParserRuleCall_5()); }
	rulePragmaList
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getPragmaListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructureComponentDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group_3__0__Impl
	rule__StructureComponentDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getColonEqualsSignKeyword_3_0()); }
	ColonEqualsSign
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getColonEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructureComponentDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureComponentDefinitionAccess().getDefaultValueAssignment_3_1()); }
	(rule__StructureComponentDefinition__DefaultValueAssignment_3_1)
	{ after(grammarAccess.getStructureComponentDefinitionAccess().getDefaultValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group__0__Impl
	rule__EnumerationTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumerationTypeDefinitionAction_0()); }
	()
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumerationTypeDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group__1__Impl
	rule__EnumerationTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumKeyword_1()); }
	Enum
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group__2__Impl
	rule__EnumerationTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group__3__Impl
	rule__EnumerationTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup_3()); }
	(rule__EnumerationTypeDefinition__Group_3__0)?
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationTypeDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group_3__0__Impl
	rule__EnumerationTypeDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsAssignment_3_0()); }
	(rule__EnumerationTypeDefinition__EnumeratorsAssignment_3_0)
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup_3_1()); }
	(rule__EnumerationTypeDefinition__Group_3_1__0)*
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationTypeDefinition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group_3_1__0__Impl
	rule__EnumerationTypeDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getCommaKeyword_3_1_0()); }
	Comma
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationTypeDefinition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsAssignment_3_1_1()); }
	(rule__EnumerationTypeDefinition__EnumeratorsAssignment_3_1_1)
	{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group__0__Impl
	rule__Enumerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getNameAssignment_0()); }
	(rule__Enumerator__NameAssignment_0)
	{ after(grammarAccess.getEnumeratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getGroup_1()); }
	(rule__Enumerator__Group_1__0)?
	{ after(grammarAccess.getEnumeratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_1__0__Impl
	rule__Enumerator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getAlternatives_1_0()); }
	(rule__Enumerator__Alternatives_1_0)
	{ after(grammarAccess.getEnumeratorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getExpressionAssignment_1_1()); }
	(rule__Enumerator__ExpressionAssignment_1_1)
	{ after(grammarAccess.getEnumeratorAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnconstrainedArrayDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__0__Impl
	rule__UnconstrainedArrayDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getArrayKeyword_0()); }
	Array
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__1__Impl
	rule__UnconstrainedArrayDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__2__Impl
	rule__UnconstrainedArrayDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getIndexTypeAssignment_2()); }
	(rule__UnconstrainedArrayDefinition__IndexTypeAssignment_2)
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getIndexTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__3__Impl
	rule__UnconstrainedArrayDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getRangeKeyword_3()); }
	Range
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getRangeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__4__Impl
	rule__UnconstrainedArrayDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getLessThanSignGreaterThanSignKeyword_4()); }
	LessThanSignGreaterThanSign
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getLessThanSignGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__5__Impl
	rule__UnconstrainedArrayDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__6__Impl
	rule__UnconstrainedArrayDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getOfKeyword_6()); }
	Of
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getOfKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconstrainedArrayDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getElementTypeAssignment_7()); }
	(rule__UnconstrainedArrayDefinition__ElementTypeAssignment_7)
	{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getElementTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeReference__Group__0__Impl
	rule__InstanceTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__InstanceTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeReference__Group__1__Impl
	rule__InstanceTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeReferenceAccess().getInstanceKeyword_1()); }
	Instance
	{ after(grammarAccess.getInstanceTypeReferenceAccess().getInstanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeReference__Group__2__Impl
	rule__InstanceTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeReferenceAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getInstanceTypeReferenceAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceTypeReferenceAccess().getInstanceAssignment_3()); }
	(rule__InstanceTypeReference__InstanceAssignment_3)
	{ after(grammarAccess.getInstanceTypeReferenceAccess().getInstanceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeReference__Group__0__Impl
	rule__NamedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__NamedTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTypeReferenceAccess().getTypeAssignment_1()); }
	(rule__NamedTypeReference__TypeAssignment_1)
	{ after(grammarAccess.getNamedTypeReferenceAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainedArrayTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeReference__Group__0__Impl
	rule__ConstrainedArrayTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedAssignment_0()); }
	(rule__ConstrainedArrayTypeReference__UnconstrainedAssignment_0)
	{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeReference__Group__1__Impl
	rule__ConstrainedArrayTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeReference__Group__2__Impl
	rule__ConstrainedArrayTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getConstraintAssignment_2()); }
	(rule__ConstrainedArrayTypeReference__ConstraintAssignment_2)
	{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getConstraintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedArrayTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group__0__Impl
	rule__SequenceTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__SequenceTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group__1__Impl
	rule__SequenceTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getSequenceKeyword_1()); }
	Sequence
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getSequenceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group__2__Impl
	rule__SequenceTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getGroup_2()); }
	(rule__SequenceTypeReference__Group_2__0)?
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group__3__Impl
	rule__SequenceTypeReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getOfKeyword_3()); }
	Of
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getElementTypeAssignment_4()); }
	(rule__SequenceTypeReference__ElementTypeAssignment_4)
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getElementTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTypeReference__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group_2__0__Impl
	rule__SequenceTypeReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getLeftParenthesisKeyword_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group_2__1__Impl
	rule__SequenceTypeReference__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getExpressionAssignment_2_1()); }
	(rule__SequenceTypeReference__ExpressionAssignment_2_1)
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTypeReference__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeReferenceAccess().getRightParenthesisKeyword_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getSequenceTypeReferenceAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__0__Impl
	rule__ArrayTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__ArrayTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__1__Impl
	rule__ArrayTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getArrayKeyword_1()); }
	Array
	{ after(grammarAccess.getArrayTypeReferenceAccess().getArrayKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__2__Impl
	rule__ArrayTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getArrayTypeReferenceAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__3__Impl
	rule__ArrayTypeReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getAlternatives_3()); }
	(rule__ArrayTypeReference__Alternatives_3)
	{ after(grammarAccess.getArrayTypeReferenceAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__4__Impl
	rule__ArrayTypeReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getArrayTypeReferenceAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__5__Impl
	rule__ArrayTypeReference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getOfKeyword_5()); }
	Of
	{ after(grammarAccess.getArrayTypeReferenceAccess().getOfKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayTypeReference__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeReferenceAccess().getElementTypeAssignment_6()); }
	(rule__ArrayTypeReference__ElementTypeAssignment_6)
	{ after(grammarAccess.getArrayTypeReferenceAccess().getElementTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTypeReference__Group__0__Impl
	rule__SetTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__SetTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getSetTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTypeReference__Group__1__Impl
	rule__SetTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeReferenceAccess().getSetKeyword_1()); }
	Set
	{ after(grammarAccess.getSetTypeReferenceAccess().getSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTypeReference__Group__2__Impl
	rule__SetTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeReferenceAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getSetTypeReferenceAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeReferenceAccess().getElementTypeAssignment_3()); }
	(rule__SetTypeReference__ElementTypeAssignment_3)
	{ after(grammarAccess.getSetTypeReferenceAccess().getElementTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTypeReference__Group__0__Impl
	rule__BagTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeReferenceAccess().getAnonymousAssignment_0()); }
	(rule__BagTypeReference__AnonymousAssignment_0)?
	{ after(grammarAccess.getBagTypeReferenceAccess().getAnonymousAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTypeReference__Group__1__Impl
	rule__BagTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeReferenceAccess().getBagKeyword_1()); }
	Bag
	{ after(grammarAccess.getBagTypeReferenceAccess().getBagKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTypeReference__Group__2__Impl
	rule__BagTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeReferenceAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getBagTypeReferenceAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeReferenceAccess().getElementTypeAssignment_3()); }
	(rule__BagTypeReference__ElementTypeAssignment_3)
	{ after(grammarAccess.getBagTypeReferenceAccess().getElementTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DictionaryTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group__0__Impl
	rule__DictionaryTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getDictionaryTypeReferenceAction_0()); }
	()
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getDictionaryTypeReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group__1__Impl
	rule__DictionaryTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAssignment_1()); }
	(rule__DictionaryTypeReference__AnonymousAssignment_1)?
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group__2__Impl
	rule__DictionaryTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getDictionaryKeyword_2()); }
	Dictionary
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getDictionaryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getGroup_3()); }
	(rule__DictionaryTypeReference__Group_3__0)?
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DictionaryTypeReference__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group_3__0__Impl
	rule__DictionaryTypeReference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getKeyTypeAssignment_3_0()); }
	(rule__DictionaryTypeReference__KeyTypeAssignment_3_0)?
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getKeyTypeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group_3__1__Impl
	rule__DictionaryTypeReference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getOfKeyword_3_1()); }
	Of
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getOfKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DictionaryTypeReference__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDictionaryTypeReferenceAccess().getElementTypeAssignment_3_2()); }
	(rule__DictionaryTypeReference__ElementTypeAssignment_3_2)
	{ after(grammarAccess.getDictionaryTypeReferenceAccess().getElementTypeAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__0__Impl
	rule__TerminatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getTerminatorKeyword_0()); }
	Terminator
	{ after(grammarAccess.getTerminatorDefinitionAccess().getTerminatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__1__Impl
	rule__TerminatorDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getNameAssignment_1()); }
	(rule__TerminatorDefinition__NameAssignment_1)
	{ after(grammarAccess.getTerminatorDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__2__Impl
	rule__TerminatorDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getTerminatorDefinitionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__3__Impl
	rule__TerminatorDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getServicesAssignment_3()); }
	(rule__TerminatorDefinition__ServicesAssignment_3)*
	{ after(grammarAccess.getTerminatorDefinitionAccess().getServicesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__4__Impl
	rule__TerminatorDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getTerminatorDefinitionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__5__Impl
	rule__TerminatorDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getTerminatorKeyword_5()); }
	(Terminator)?
	{ after(grammarAccess.getTerminatorDefinitionAccess().getTerminatorKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__6__Impl
	rule__TerminatorDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getTerminatorDefinitionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorDefinitionAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getTerminatorDefinitionAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorServiceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__0__Impl
	rule__TerminatorServiceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__TerminatorServiceDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__1__Impl
	rule__TerminatorServiceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getAlternatives_1()); }
	(rule__TerminatorServiceDeclaration__Alternatives_1)
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__2__Impl
	rule__TerminatorServiceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getNameAssignment_2()); }
	(rule__TerminatorServiceDeclaration__NameAssignment_2)
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__3__Impl
	rule__TerminatorServiceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getParameterListParserRuleCall_3()); }
	ruleParameterList
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getParameterListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__4__Impl
	rule__TerminatorServiceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getGroup_4()); }
	(rule__TerminatorServiceDeclaration__Group_4__0)?
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__5__Impl
	rule__TerminatorServiceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getPragmaListParserRuleCall_6()); }
	rulePragmaList
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getPragmaListParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorServiceDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group_4__0__Impl
	rule__TerminatorServiceDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnKeyword_4_0()); }
	Return
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnTypeAssignment_4_1()); }
	(rule__TerminatorServiceDeclaration__ReturnTypeAssignment_4_1)
	{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__0__Impl
	rule__ObjectDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getObjectKeyword_0()); }
	Object
	{ after(grammarAccess.getObjectDeclarationAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__1__Impl
	rule__ObjectDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getNameAssignment_1()); }
	(rule__ObjectDeclaration__NameAssignment_1)
	{ after(grammarAccess.getObjectDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__2__Impl
	rule__ObjectDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getObjectDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getPragmaListParserRuleCall_3()); }
	rulePragmaList
	{ after(grammarAccess.getObjectDeclarationAccess().getPragmaListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__0__Impl
	rule__ObjectDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getObjectKeyword_0()); }
	Object
	{ after(grammarAccess.getObjectDefinitionAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__1__Impl
	rule__ObjectDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getNameAssignment_1()); }
	(rule__ObjectDefinition__NameAssignment_1)
	{ after(grammarAccess.getObjectDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__2__Impl
	rule__ObjectDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getObjectDefinitionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__3__Impl
	rule__ObjectDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getAlternatives_3()); }
	(rule__ObjectDefinition__Alternatives_3)*
	{ after(grammarAccess.getObjectDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__4__Impl
	rule__ObjectDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getObjectDefinitionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__5__Impl
	rule__ObjectDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getObjectKeyword_5()); }
	(Object)?
	{ after(grammarAccess.getObjectDefinitionAccess().getObjectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__6__Impl
	rule__ObjectDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getObjectDefinitionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDefinitionAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getObjectDefinitionAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
	(rule__AttributeDefinition__NameAssignment_0)
	{ after(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getAttributeDefinitionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__2__Impl
	rule__AttributeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getPreferredAssignment_2()); }
	(rule__AttributeDefinition__PreferredAssignment_2)?
	{ after(grammarAccess.getAttributeDefinitionAccess().getPreferredAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__3__Impl
	rule__AttributeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getUniqueAssignment_3()); }
	(rule__AttributeDefinition__UniqueAssignment_3)?
	{ after(grammarAccess.getAttributeDefinitionAccess().getUniqueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__4__Impl
	rule__AttributeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
	(rule__AttributeDefinition__Group_4__0)?
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__5__Impl
	rule__AttributeDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getTypeAssignment_5()); }
	(rule__AttributeDefinition__TypeAssignment_5)
	{ after(grammarAccess.getAttributeDefinitionAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__6__Impl
	rule__AttributeDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_6()); }
	(rule__AttributeDefinition__Group_6__0)?
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__7__Impl
	rule__AttributeDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_7()); }
	Semicolon
	{ after(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getPragmaListParserRuleCall_8()); }
	rulePragmaList
	{ after(grammarAccess.getAttributeDefinitionAccess().getPragmaListParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__0__Impl
	rule__AttributeDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getReferentialKeyword_4_0()); }
	Referential
	{ after(grammarAccess.getAttributeDefinitionAccess().getReferentialKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__1__Impl
	rule__AttributeDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_4_1()); }
	LeftParenthesis
	{ after(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__2__Impl
	rule__AttributeDefinition__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_4_2()); }
	(rule__AttributeDefinition__Group_4_2__0)?
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_4_3()); }
	RightParenthesis
	{ after(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4_2__0__Impl
	rule__AttributeDefinition__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getReferentialsAssignment_4_2_0()); }
	(rule__AttributeDefinition__ReferentialsAssignment_4_2_0)
	{ after(grammarAccess.getAttributeDefinitionAccess().getReferentialsAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_4_2_1()); }
	(rule__AttributeDefinition__Group_4_2_1__0)*
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_4_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4_2_1__0__Impl
	rule__AttributeDefinition__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_2_1_0()); }
	Comma
	{ after(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getReferentialsAssignment_4_2_1_1()); }
	(rule__AttributeDefinition__ReferentialsAssignment_4_2_1_1)
	{ after(grammarAccess.getAttributeDefinitionAccess().getReferentialsAssignment_4_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_6__0__Impl
	rule__AttributeDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getColonEqualsSignKeyword_6_0()); }
	ColonEqualsSign
	{ after(grammarAccess.getAttributeDefinitionAccess().getColonEqualsSignKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getDefaultValueAssignment_6_1()); }
	(rule__AttributeDefinition__DefaultValueAssignment_6_1)
	{ after(grammarAccess.getAttributeDefinitionAccess().getDefaultValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReferential__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group__0__Impl
	rule__AttributeReferential__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getAttributeReferentialAction_0()); }
	()
	{ after(grammarAccess.getAttributeReferentialAccess().getAttributeReferentialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group__1__Impl
	rule__AttributeReferential__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getRelationshipAssignment_1()); }
	(rule__AttributeReferential__RelationshipAssignment_1)
	{ after(grammarAccess.getAttributeReferentialAccess().getRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group__2__Impl
	rule__AttributeReferential__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_2()); }
	FullStop
	{ after(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getAlternatives_3()); }
	(rule__AttributeReferential__Alternatives_3)
	{ after(grammarAccess.getAttributeReferentialAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReferential__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_0__0__Impl
	rule__AttributeReferential__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleAssignment_3_0_0()); }
	(rule__AttributeReferential__ObjectOrRoleAssignment_3_0_0)
	{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_0__1__Impl
	rule__AttributeReferential__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_3_0_1()); }
	FullStop
	{ after(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_0_2()); }
	(rule__AttributeReferential__AttributeAssignment_3_0_2)
	{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReferential__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_1__0__Impl
	rule__AttributeReferential__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleAssignment_3_1_0()); }
	(rule__AttributeReferential__ObjectOrRoleAssignment_3_1_0)
	{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_1__1__Impl
	rule__AttributeReferential__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_3_1_1()); }
	FullStop
	{ after(grammarAccess.getAttributeReferentialAccess().getFullStopKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeReferential__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_1_2()); }
	(rule__AttributeReferential__AttributeAssignment_3_1_2)
	{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAssignment_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectOrRoleName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectOrRoleName__Group__0__Impl
	rule__ObjectOrRoleName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectOrRoleName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectOrRoleNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getObjectOrRoleNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectOrRoleName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectOrRoleName__Group__1__Impl
	rule__ObjectOrRoleName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectOrRoleName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectOrRoleNameAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getObjectOrRoleNameAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectOrRoleName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectOrRoleName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectOrRoleName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectOrRoleNameAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getObjectOrRoleNameAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__0__Impl
	rule__ObjectServiceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__ObjectServiceDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__1__Impl
	rule__ObjectServiceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getInstanceAssignment_1()); }
	(rule__ObjectServiceDeclaration__InstanceAssignment_1)?
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getInstanceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__2__Impl
	rule__ObjectServiceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getGroup_2()); }
	(rule__ObjectServiceDeclaration__Group_2__0)?
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__3__Impl
	rule__ObjectServiceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getAlternatives_3()); }
	(rule__ObjectServiceDeclaration__Alternatives_3)
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__4__Impl
	rule__ObjectServiceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getNameAssignment_4()); }
	(rule__ObjectServiceDeclaration__NameAssignment_4)
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__5__Impl
	rule__ObjectServiceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getParameterListParserRuleCall_5()); }
	ruleParameterList
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getParameterListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__6__Impl
	rule__ObjectServiceDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getGroup_6()); }
	(rule__ObjectServiceDeclaration__Group_6__0)?
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__7__Impl
	rule__ObjectServiceDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getSemicolonKeyword_7()); }
	Semicolon
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getPragmaListParserRuleCall_8()); }
	rulePragmaList
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getPragmaListParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_2__0__Impl
	rule__ObjectServiceDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getDeferredKeyword_2_0()); }
	Deferred
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getDeferredKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_2__1__Impl
	rule__ObjectServiceDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getLeftParenthesisKeyword_2_1()); }
	LeftParenthesis
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_2__2__Impl
	rule__ObjectServiceDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipAssignment_2_2()); }
	(rule__ObjectServiceDeclaration__RelationshipAssignment_2_2)
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getRightParenthesisKeyword_2_3()); }
	RightParenthesis
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDeclaration__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_6__0__Impl
	rule__ObjectServiceDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getReturnKeyword_6_0()); }
	Return
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getReturnKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDeclarationAccess().getReturnTypeAssignment_6_1()); }
	(rule__ObjectServiceDeclaration__ReturnTypeAssignment_6_1)
	{ after(grammarAccess.getObjectServiceDeclarationAccess().getReturnTypeAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__0__Impl
	rule__IdentifierDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getIdentifierKeyword_0()); }
	Identifier
	{ after(grammarAccess.getIdentifierDefinitionAccess().getIdentifierKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__1__Impl
	rule__IdentifierDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getIsKeyword_1()); }
	Is
	{ after(grammarAccess.getIdentifierDefinitionAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__2__Impl
	rule__IdentifierDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getIdentifierDefinitionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__3__Impl
	rule__IdentifierDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getGroup_3()); }
	(rule__IdentifierDefinition__Group_3__0)?
	{ after(grammarAccess.getIdentifierDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__4__Impl
	rule__IdentifierDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getIdentifierDefinitionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__5__Impl
	rule__IdentifierDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getIdentifierDefinitionAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getPragmaListParserRuleCall_6()); }
	rulePragmaList
	{ after(grammarAccess.getIdentifierDefinitionAccess().getPragmaListParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group_3__0__Impl
	rule__IdentifierDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAssignment_3_0()); }
	(rule__IdentifierDefinition__AttributesAssignment_3_0)
	{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getGroup_3_1()); }
	(rule__IdentifierDefinition__Group_3_1__0)*
	{ after(grammarAccess.getIdentifierDefinitionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDefinition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group_3_1__0__Impl
	rule__IdentifierDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getCommaKeyword_3_1_0()); }
	Comma
	{ after(grammarAccess.getIdentifierDefinitionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierDefinition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAssignment_3_1_1()); }
	(rule__IdentifierDefinition__AttributesAssignment_3_1_1)
	{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__0__Impl
	rule__EventDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getTypeAssignment_0()); }
	(rule__EventDefinition__TypeAssignment_0)?
	{ after(grammarAccess.getEventDefinitionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__1__Impl
	rule__EventDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getEventKeyword_1()); }
	Event
	{ after(grammarAccess.getEventDefinitionAccess().getEventKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__2__Impl
	rule__EventDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getNameAssignment_2()); }
	(rule__EventDefinition__NameAssignment_2)
	{ after(grammarAccess.getEventDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__3__Impl
	rule__EventDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getParameterListParserRuleCall_3()); }
	ruleParameterList
	{ after(grammarAccess.getEventDefinitionAccess().getParameterListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__4__Impl
	rule__EventDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getEventDefinitionAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDefinitionAccess().getPragmaListParserRuleCall_5()); }
	rulePragmaList
	{ after(grammarAccess.getEventDefinitionAccess().getPragmaListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__0__Impl
	rule__StateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getTypeAssignment_0()); }
	(rule__StateDeclaration__TypeAssignment_0)?
	{ after(grammarAccess.getStateDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__1__Impl
	rule__StateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getStateKeyword_1()); }
	State
	{ after(grammarAccess.getStateDeclarationAccess().getStateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__2__Impl
	rule__StateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getNameAssignment_2()); }
	(rule__StateDeclaration__NameAssignment_2)
	{ after(grammarAccess.getStateDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__3__Impl
	rule__StateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getParameterListParserRuleCall_3()); }
	ruleParameterList
	{ after(grammarAccess.getStateDeclarationAccess().getParameterListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__4__Impl
	rule__StateDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDeclarationAccess().getPragmaListParserRuleCall_5()); }
	rulePragmaList
	{ after(grammarAccess.getStateDeclarationAccess().getPragmaListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateTypeSyntax__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateTypeSyntax__Group_0__0__Impl
	rule__StateTypeSyntax__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTypeSyntax__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTypeSyntaxAccess().getAssignerKeyword_0_0()); }
	Assigner
	{ after(grammarAccess.getStateTypeSyntaxAccess().getAssignerKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTypeSyntax__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateTypeSyntax__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTypeSyntax__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTypeSyntaxAccess().getStartKeyword_0_1()); }
	(Start)?
	{ after(grammarAccess.getStateTypeSyntaxAccess().getStartKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionTable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__0__Impl
	rule__TransitionTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getTypeAssignment_0()); }
	(rule__TransitionTable__TypeAssignment_0)?
	{ after(grammarAccess.getTransitionTableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__1__Impl
	rule__TransitionTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getTransitionKeyword_1()); }
	Transition
	{ after(grammarAccess.getTransitionTableAccess().getTransitionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__2__Impl
	rule__TransitionTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getTransitionTableAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__3__Impl
	rule__TransitionTable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTransitionTableAccess().getRowsAssignment_3()); }
		(rule__TransitionTable__RowsAssignment_3)
		{ after(grammarAccess.getTransitionTableAccess().getRowsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getTransitionTableAccess().getRowsAssignment_3()); }
		(rule__TransitionTable__RowsAssignment_3)*
		{ after(grammarAccess.getTransitionTableAccess().getRowsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__4__Impl
	rule__TransitionTable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getTransitionTableAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__5__Impl
	rule__TransitionTable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getTransitionKeyword_5()); }
	(Transition)?
	{ after(grammarAccess.getTransitionTableAccess().getTransitionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__6__Impl
	rule__TransitionTable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getTransitionTableAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionTable__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionTableAccess().getPragmaListParserRuleCall_7()); }
	rulePragmaList
	{ after(grammarAccess.getTransitionTableAccess().getPragmaListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionRow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__0__Impl
	rule__TransitionRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getAlternatives_0()); }
	(rule__TransitionRow__Alternatives_0)
	{ after(grammarAccess.getTransitionRowAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__1__Impl
	rule__TransitionRow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getTransitionRowAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__2__Impl
	rule__TransitionRow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getGroup_2()); }
	(rule__TransitionRow__Group_2__0)?
	{ after(grammarAccess.getTransitionRowAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__3__Impl
	rule__TransitionRow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getTransitionRowAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__4__Impl
	rule__TransitionRow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getTransitionRowAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getPragmaListParserRuleCall_5()); }
	rulePragmaList
	{ after(grammarAccess.getTransitionRowAccess().getPragmaListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionRow__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group_2__0__Impl
	rule__TransitionRow__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getOptionsAssignment_2_0()); }
	(rule__TransitionRow__OptionsAssignment_2_0)
	{ after(grammarAccess.getTransitionRowAccess().getOptionsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getGroup_2_1()); }
	(rule__TransitionRow__Group_2_1__0)*
	{ after(grammarAccess.getTransitionRowAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionRow__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group_2_1__0__Impl
	rule__TransitionRow__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getTransitionRowAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionRow__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionRowAccess().getOptionsAssignment_2_1_1()); }
	(rule__TransitionRow__OptionsAssignment_2_1_1)
	{ after(grammarAccess.getTransitionRowAccess().getOptionsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group__0__Impl
	rule__TransitionOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getGroup_0()); }
	(rule__TransitionOption__Group_0__0)?
	{ after(grammarAccess.getTransitionOptionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group__1__Impl
	rule__TransitionOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getEventAssignment_1()); }
	(rule__TransitionOption__EventAssignment_1)
	{ after(grammarAccess.getTransitionOptionAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group__2__Impl
	rule__TransitionOption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getTransitionOptionAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getAlternatives_3()); }
	(rule__TransitionOption__Alternatives_3)
	{ after(grammarAccess.getTransitionOptionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionOption__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group_0__0__Impl
	rule__TransitionOption__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getEventObjectAssignment_0_0()); }
	(rule__TransitionOption__EventObjectAssignment_0_0)
	{ after(grammarAccess.getTransitionOptionAccess().getEventObjectAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionOption__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionOptionAccess().getFullStopKeyword_0_1()); }
	FullStop
	{ after(grammarAccess.getTransitionOptionAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainServiceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__0__Impl
	rule__DomainServiceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getVisibilityAssignment_0()); }
	(rule__DomainServiceDeclaration__VisibilityAssignment_0)?
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__1__Impl
	rule__DomainServiceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getAlternatives_1()); }
	(rule__DomainServiceDeclaration__Alternatives_1)
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__2__Impl
	rule__DomainServiceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getNameAssignment_2()); }
	(rule__DomainServiceDeclaration__NameAssignment_2)
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__3__Impl
	rule__DomainServiceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getParameterListParserRuleCall_3()); }
	ruleParameterList
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getParameterListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__4__Impl
	rule__DomainServiceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getGroup_4()); }
	(rule__DomainServiceDeclaration__Group_4__0)?
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__5__Impl
	rule__DomainServiceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getPragmaListParserRuleCall_6()); }
	rulePragmaList
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getPragmaListParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainServiceDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group_4__0__Impl
	rule__DomainServiceDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getReturnKeyword_4_0()); }
	Return
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getReturnKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDeclarationAccess().getReturnTypeAssignment_4_1()); }
	(rule__DomainServiceDeclaration__ReturnTypeAssignment_4_1)
	{ after(grammarAccess.getDomainServiceDeclarationAccess().getReturnTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipDefinition__Group__0__Impl
	rule__RelationshipDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipDefinitionAccess().getRelationshipKeyword_0()); }
	Relationship
	{ after(grammarAccess.getRelationshipDefinitionAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipDefinition__Group__1__Impl
	rule__RelationshipDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipDefinitionAccess().getAlternatives_1()); }
	(rule__RelationshipDefinition__Alternatives_1)
	{ after(grammarAccess.getRelationshipDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipDefinition__Group__2__Impl
	rule__RelationshipDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipDefinitionAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getRelationshipDefinitionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipDefinitionAccess().getPragmaListParserRuleCall_3()); }
	rulePragmaList
	{ after(grammarAccess.getRelationshipDefinitionAccess().getPragmaListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularRelationshipDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRelationshipDefinition__Group__0__Impl
	rule__RegularRelationshipDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getNameAssignment_0()); }
	(rule__RegularRelationshipDefinition__NameAssignment_0)
	{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRelationshipDefinition__Group__1__Impl
	rule__RegularRelationshipDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getIsKeyword_1()); }
	Is
	{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRelationshipDefinition__Group__2__Impl
	rule__RegularRelationshipDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getForwardsAssignment_2()); }
	(rule__RegularRelationshipDefinition__ForwardsAssignment_2)
	{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getForwardsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRelationshipDefinition__Group__3__Impl
	rule__RegularRelationshipDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getCommaKeyword_3()); }
	Comma
	{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRelationshipDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getBackwardsAssignment_4()); }
	(rule__RegularRelationshipDefinition__BackwardsAssignment_4)
	{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getBackwardsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssocRelationshipDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__0__Impl
	rule__AssocRelationshipDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getNameAssignment_0()); }
	(rule__AssocRelationshipDefinition__NameAssignment_0)
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__1__Impl
	rule__AssocRelationshipDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getIsKeyword_1()); }
	Is
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__2__Impl
	rule__AssocRelationshipDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getForwardsAssignment_2()); }
	(rule__AssocRelationshipDefinition__ForwardsAssignment_2)
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getForwardsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__3__Impl
	rule__AssocRelationshipDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getCommaKeyword_3()); }
	Comma
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__4__Impl
	rule__AssocRelationshipDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getBackwardsAssignment_4()); }
	(rule__AssocRelationshipDefinition__BackwardsAssignment_4)
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getBackwardsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__5__Impl
	rule__AssocRelationshipDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getUsingKeyword_5()); }
	Using
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getUsingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__6__Impl
	rule__AssocRelationshipDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getOneAssignment_6()); }
	(rule__AssocRelationshipDefinition__OneAssignment_6)?
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getOneAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssocRelationshipDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectAssignment_7()); }
	(rule__AssocRelationshipDefinition__ObjectAssignment_7)
	{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipEnd__Group__0__Impl
	rule__RelationshipEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipEndAccess().getFromAssignment_0()); }
	(rule__RelationshipEnd__FromAssignment_0)
	{ after(grammarAccess.getRelationshipEndAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipEnd__Group__1__Impl
	rule__RelationshipEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipEndAccess().getConditionalityAssignment_1()); }
	(rule__RelationshipEnd__ConditionalityAssignment_1)
	{ after(grammarAccess.getRelationshipEndAccess().getConditionalityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipEnd__Group__2__Impl
	rule__RelationshipEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipEndAccess().getNameAssignment_2()); }
	(rule__RelationshipEnd__NameAssignment_2)
	{ after(grammarAccess.getRelationshipEndAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipEnd__Group__3__Impl
	rule__RelationshipEnd__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipEndAccess().getMultiplicityAssignment_3()); }
	(rule__RelationshipEnd__MultiplicityAssignment_3)
	{ after(grammarAccess.getRelationshipEndAccess().getMultiplicityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipEnd__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipEndAccess().getToAssignment_4()); }
	(rule__RelationshipEnd__ToAssignment_4)
	{ after(grammarAccess.getRelationshipEndAccess().getToAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubtypeRelationshipDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__0__Impl
	rule__SubtypeRelationshipDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getNameAssignment_0()); }
	(rule__SubtypeRelationshipDefinition__NameAssignment_0)
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__1__Impl
	rule__SubtypeRelationshipDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getIsKeyword_1()); }
	Is
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__2__Impl
	rule__SubtypeRelationshipDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeAssignment_2()); }
	(rule__SubtypeRelationshipDefinition__SupertypeAssignment_2)
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__3__Impl
	rule__SubtypeRelationshipDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getIs_aKeyword_3()); }
	Is_a
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getIs_aKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__4__Impl
	rule__SubtypeRelationshipDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getLeftParenthesisKeyword_4()); }
	LeftParenthesis
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__5__Impl
	rule__SubtypeRelationshipDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup_5()); }
	(rule__SubtypeRelationshipDefinition__Group_5__0)?
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getRightParenthesisKeyword_6()); }
	RightParenthesis
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubtypeRelationshipDefinition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group_5__0__Impl
	rule__SubtypeRelationshipDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesAssignment_5_0()); }
	(rule__SubtypeRelationshipDefinition__SubtypesAssignment_5_0)
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup_5_1()); }
	(rule__SubtypeRelationshipDefinition__Group_5_1__0)*
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubtypeRelationshipDefinition__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group_5_1__0__Impl
	rule__SubtypeRelationshipDefinition__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getCommaKeyword_5_1_0()); }
	Comma
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtypeRelationshipDefinition__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesAssignment_5_1_1()); }
	(rule__SubtypeRelationshipDefinition__SubtypesAssignment_5_1_1)
	{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipNavigation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipNavigation__Group__0__Impl
	rule__RelationshipNavigation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipNavigationAccess().getRelationshipAssignment_0()); }
	(rule__RelationshipNavigation__RelationshipAssignment_0)
	{ after(grammarAccess.getRelationshipNavigationAccess().getRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipNavigation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipNavigationAccess().getGroup_1()); }
	(rule__RelationshipNavigation__Group_1__0)?
	{ after(grammarAccess.getRelationshipNavigationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipNavigation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipNavigation__Group_1__0__Impl
	rule__RelationshipNavigation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipNavigationAccess().getFullStopKeyword_1_0()); }
	FullStop
	{ after(grammarAccess.getRelationshipNavigationAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipNavigation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipNavigationAccess().getAlternatives_1_1()); }
	(rule__RelationshipNavigation__Alternatives_1_1)
	{ after(grammarAccess.getRelationshipNavigationAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__0__Impl
	rule__DomainServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__DomainServiceDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__1__Impl
	rule__DomainServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getAlternatives_1()); }
	(rule__DomainServiceDefinition__Alternatives_1)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__2__Impl
	rule__DomainServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getDomainAssignment_2()); }
	(rule__DomainServiceDefinition__DomainAssignment_2)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__3__Impl
	rule__DomainServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getColonColonKeyword_3()); }
	ColonColon
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getColonColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__4__Impl
	rule__DomainServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getNameAssignment_4()); }
	(rule__DomainServiceDefinition__NameAssignment_4)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__5__Impl
	rule__DomainServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getParameterListParserRuleCall_5()); }
	ruleParameterList
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getParameterListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__6__Impl
	rule__DomainServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getGroup_6()); }
	(rule__DomainServiceDefinition__Group_6__0)?
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__7__Impl
	rule__DomainServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getIsKeyword_7()); }
	Is
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getIsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__8__Impl
	rule__DomainServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getBodyAssignment_8()); }
	(rule__DomainServiceDefinition__BodyAssignment_8)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__9__Impl
	rule__DomainServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getAlternatives_9()); }
	(rule__DomainServiceDefinition__Alternatives_9)?
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__10__Impl
	rule__DomainServiceDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getSemicolonKeyword_10()); }
	(Semicolon)?
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getPragmaListParserRuleCall_11()); }
	rulePragmaList
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getPragmaListParserRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainServiceDefinition__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group_6__0__Impl
	rule__DomainServiceDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getReturnKeyword_6_0()); }
	Return
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getReturnKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainServiceDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainServiceDefinitionAccess().getReturnTypeAssignment_6_1()); }
	(rule__DomainServiceDefinition__ReturnTypeAssignment_6_1)
	{ after(grammarAccess.getDomainServiceDefinitionAccess().getReturnTypeAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__0__Impl
	rule__ObjectServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__ObjectServiceDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__1__Impl
	rule__ObjectServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getInstanceAssignment_1()); }
	(rule__ObjectServiceDefinition__InstanceAssignment_1)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getInstanceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__2__Impl
	rule__ObjectServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getGroup_2()); }
	(rule__ObjectServiceDefinition__Group_2__0)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__3__Impl
	rule__ObjectServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getAlternatives_3()); }
	(rule__ObjectServiceDefinition__Alternatives_3)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__4__Impl
	rule__ObjectServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getDomainAssignment_4()); }
	(rule__ObjectServiceDefinition__DomainAssignment_4)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getDomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__5__Impl
	rule__ObjectServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getColonColonKeyword_5()); }
	ColonColon
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getColonColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__6__Impl
	rule__ObjectServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getObjectAssignment_6()); }
	(rule__ObjectServiceDefinition__ObjectAssignment_6)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getObjectAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__7__Impl
	rule__ObjectServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getFullStopKeyword_7()); }
	FullStop
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getFullStopKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__8__Impl
	rule__ObjectServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getNameAssignment_8()); }
	(rule__ObjectServiceDefinition__NameAssignment_8)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getNameAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__9__Impl
	rule__ObjectServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getParameterListParserRuleCall_9()); }
	ruleParameterList
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getParameterListParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__10__Impl
	rule__ObjectServiceDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getGroup_10()); }
	(rule__ObjectServiceDefinition__Group_10__0)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__11__Impl
	rule__ObjectServiceDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getIsKeyword_11()); }
	Is
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getIsKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__12__Impl
	rule__ObjectServiceDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getBodyAssignment_12()); }
	(rule__ObjectServiceDefinition__BodyAssignment_12)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getBodyAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__13__Impl
	rule__ObjectServiceDefinition__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getAlternatives_13()); }
	(rule__ObjectServiceDefinition__Alternatives_13)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getAlternatives_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__14__Impl
	rule__ObjectServiceDefinition__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getSemicolonKeyword_14()); }
	(Semicolon)?
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getSemicolonKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getPragmaListParserRuleCall_15()); }
	rulePragmaList
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getPragmaListParserRuleCall_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group_2__0__Impl
	rule__ObjectServiceDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getDeferredKeyword_2_0()); }
	Deferred
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getDeferredKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipAssignment_2_1()); }
	(rule__ObjectServiceDefinition__RelationshipAssignment_2_1)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectServiceDefinition__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group_10__0__Impl
	rule__ObjectServiceDefinition__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getReturnKeyword_10_0()); }
	Return
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getReturnKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectServiceDefinition__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectServiceDefinitionAccess().getReturnTypeAssignment_10_1()); }
	(rule__ObjectServiceDefinition__ReturnTypeAssignment_10_1)
	{ after(grammarAccess.getObjectServiceDefinitionAccess().getReturnTypeAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorServiceDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__0__Impl
	rule__TerminatorServiceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__TerminatorServiceDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__1__Impl
	rule__TerminatorServiceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getAlternatives_1()); }
	(rule__TerminatorServiceDefinition__Alternatives_1)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__2__Impl
	rule__TerminatorServiceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainAssignment_2()); }
	(rule__TerminatorServiceDefinition__DomainAssignment_2)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__3__Impl
	rule__TerminatorServiceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getColonColonKeyword_3()); }
	ColonColon
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getColonColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__4__Impl
	rule__TerminatorServiceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorAssignment_4()); }
	(rule__TerminatorServiceDefinition__TerminatorAssignment_4)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__5__Impl
	rule__TerminatorServiceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTildeGreaterThanSignKeyword_5()); }
	TildeGreaterThanSign
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTildeGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__6__Impl
	rule__TerminatorServiceDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getNameAssignment_6()); }
	(rule__TerminatorServiceDefinition__NameAssignment_6)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__7__Impl
	rule__TerminatorServiceDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getParameterListParserRuleCall_7()); }
	ruleParameterList
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getParameterListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__8__Impl
	rule__TerminatorServiceDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup_8()); }
	(rule__TerminatorServiceDefinition__Group_8__0)?
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__9__Impl
	rule__TerminatorServiceDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getIsKeyword_9()); }
	Is
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getIsKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__10__Impl
	rule__TerminatorServiceDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getBodyAssignment_10()); }
	(rule__TerminatorServiceDefinition__BodyAssignment_10)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getBodyAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__11__Impl
	rule__TerminatorServiceDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getAlternatives_11()); }
	(rule__TerminatorServiceDefinition__Alternatives_11)?
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getAlternatives_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__12__Impl
	rule__TerminatorServiceDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getSemicolonKeyword_12()); }
	(Semicolon)?
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getSemicolonKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getPragmaListParserRuleCall_13()); }
	rulePragmaList
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getPragmaListParserRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatorServiceDefinition__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group_8__0__Impl
	rule__TerminatorServiceDefinition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnKeyword_8_0()); }
	Return
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminatorServiceDefinition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnTypeAssignment_8_1()); }
	(rule__TerminatorServiceDefinition__ReturnTypeAssignment_8_1)
	{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnTypeAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__0__Impl
	rule__StateDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getTypeAssignment_0()); }
	(rule__StateDefinition__TypeAssignment_0)?
	{ after(grammarAccess.getStateDefinitionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__1__Impl
	rule__StateDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getStateKeyword_1()); }
	State
	{ after(grammarAccess.getStateDefinitionAccess().getStateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__2__Impl
	rule__StateDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getDomainAssignment_2()); }
	(rule__StateDefinition__DomainAssignment_2)
	{ after(grammarAccess.getStateDefinitionAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__3__Impl
	rule__StateDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getColonColonKeyword_3()); }
	ColonColon
	{ after(grammarAccess.getStateDefinitionAccess().getColonColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__4__Impl
	rule__StateDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getObjectAssignment_4()); }
	(rule__StateDefinition__ObjectAssignment_4)
	{ after(grammarAccess.getStateDefinitionAccess().getObjectAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__5__Impl
	rule__StateDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getFullStopKeyword_5()); }
	FullStop
	{ after(grammarAccess.getStateDefinitionAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__6__Impl
	rule__StateDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getNameAssignment_6()); }
	(rule__StateDefinition__NameAssignment_6)
	{ after(grammarAccess.getStateDefinitionAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__7__Impl
	rule__StateDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getParameterListParserRuleCall_7()); }
	ruleParameterList
	{ after(grammarAccess.getStateDefinitionAccess().getParameterListParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__8__Impl
	rule__StateDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getIsKeyword_8()); }
	Is
	{ after(grammarAccess.getStateDefinitionAccess().getIsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__9__Impl
	rule__StateDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getBodyAssignment_9()); }
	(rule__StateDefinition__BodyAssignment_9)
	{ after(grammarAccess.getStateDefinitionAccess().getBodyAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__10__Impl
	rule__StateDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getStateKeyword_10()); }
	(State)?
	{ after(grammarAccess.getStateDefinitionAccess().getStateKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__11__Impl
	rule__StateDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getSemicolonKeyword_11()); }
	(Semicolon)?
	{ after(grammarAccess.getStateDefinitionAccess().getSemicolonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDefinition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefinitionAccess().getPragmaListParserRuleCall_12()); }
	rulePragmaList
	{ after(grammarAccess.getStateDefinitionAccess().getPragmaListParserRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)?
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getPragmaListParserRuleCall_2()); }
	rulePragmaList
	{ after(grammarAccess.getStatementAccess().getPragmaListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__0__Impl
	rule__AssignStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
	{ after(grammarAccess.getAssignStatementAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getGroup_1()); }
	(rule__AssignStatement__Group_1__0)?
	{ after(grammarAccess.getAssignStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group_1__0__Impl
	rule__AssignStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getAssignStatementLhsAction_1_0()); }
	()
	{ after(grammarAccess.getAssignStatementAccess().getAssignStatementLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group_1__1__Impl
	rule__AssignStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getColonEqualsSignKeyword_1_1()); }
	ColonEqualsSign
	{ after(grammarAccess.getAssignStatementAccess().getColonEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getRhsAssignment_1_2()); }
	(rule__AssignStatement__RhsAssignment_1_2)
	{ after(grammarAccess.getAssignStatementAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__0__Impl
	rule__ExitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
	()
	{ after(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__1__Impl
	rule__ExitStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getExitKeyword_1()); }
	Exit
	{ after(grammarAccess.getExitStatementAccess().getExitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getGroup_2()); }
	(rule__ExitStatement__Group_2__0)?
	{ after(grammarAccess.getExitStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group_2__0__Impl
	rule__ExitStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getWhenKeyword_2_0()); }
	When
	{ after(grammarAccess.getExitStatementAccess().getWhenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getConditionAssignment_2_1()); }
	(rule__ExitStatement__ConditionAssignment_2_1)
	{ after(grammarAccess.getExitStatementAccess().getConditionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
	Return
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getValueAssignment_1()); }
	(rule__ReturnStatement__ValueAssignment_1)
	{ after(grammarAccess.getReturnStatementAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelayStatement__Group__0__Impl
	rule__DelayStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayStatementAccess().getDelayKeyword_0()); }
	Delay
	{ after(grammarAccess.getDelayStatementAccess().getDelayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelayStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayStatementAccess().getValueAssignment_1()); }
	(rule__DelayStatement__ValueAssignment_1)
	{ after(grammarAccess.getDelayStatementAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group__0__Impl
	rule__RaiseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getRaiseKeyword_0()); }
	Raise
	{ after(grammarAccess.getRaiseStatementAccess().getRaiseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group__1__Impl
	rule__RaiseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getExceptionAssignment_1()); }
	(rule__RaiseStatement__ExceptionAssignment_1)
	{ after(grammarAccess.getRaiseStatementAccess().getExceptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getGroup_2()); }
	(rule__RaiseStatement__Group_2__0)?
	{ after(grammarAccess.getRaiseStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group_2__0__Impl
	rule__RaiseStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getLeftParenthesisKeyword_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getRaiseStatementAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group_2__1__Impl
	rule__RaiseStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getArgumentAssignment_2_1()); }
	(rule__RaiseStatement__ArgumentAssignment_2_1)?
	{ after(grammarAccess.getRaiseStatementAccess().getArgumentAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseStatementAccess().getRightParenthesisKeyword_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getRaiseStatementAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
	Delete
	{ after(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getValueAssignment_1()); }
	(rule__DeleteStatement__ValueAssignment_1)
	{ after(grammarAccess.getDeleteStatementAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EraseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EraseStatement__Group__0__Impl
	rule__EraseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEraseStatementAccess().getEraseKeyword_0()); }
	Erase
	{ after(grammarAccess.getEraseStatementAccess().getEraseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EraseStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEraseStatementAccess().getValueAssignment_1()); }
	(rule__EraseStatement__ValueAssignment_1)
	{ after(grammarAccess.getEraseStatementAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__0__Impl
	rule__ScheduleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getScheduleKeyword_0()); }
	Schedule
	{ after(grammarAccess.getScheduleStatementAccess().getScheduleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__1__Impl
	rule__ScheduleStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getTimerIdAssignment_1()); }
	(rule__ScheduleStatement__TimerIdAssignment_1)
	{ after(grammarAccess.getScheduleStatementAccess().getTimerIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__2__Impl
	rule__ScheduleStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getGenerateStatementAssignment_2()); }
	(rule__ScheduleStatement__GenerateStatementAssignment_2)
	{ after(grammarAccess.getScheduleStatementAccess().getGenerateStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__3__Impl
	rule__ScheduleStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getTypeAssignment_3()); }
	(rule__ScheduleStatement__TypeAssignment_3)
	{ after(grammarAccess.getScheduleStatementAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__4__Impl
	rule__ScheduleStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getTimeAssignment_4()); }
	(rule__ScheduleStatement__TimeAssignment_4)
	{ after(grammarAccess.getScheduleStatementAccess().getTimeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getGroup_5()); }
	(rule__ScheduleStatement__Group_5__0)?
	{ after(grammarAccess.getScheduleStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group_5__0__Impl
	rule__ScheduleStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getDeltaKeyword_5_0()); }
	Delta
	{ after(grammarAccess.getScheduleStatementAccess().getDeltaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleStatementAccess().getPeriodAssignment_5_1()); }
	(rule__ScheduleStatement__PeriodAssignment_5_1)
	{ after(grammarAccess.getScheduleStatementAccess().getPeriodAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CancelTimerStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CancelTimerStatement__Group__0__Impl
	rule__CancelTimerStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelTimerStatementAccess().getCancelKeyword_0()); }
	Cancel
	{ after(grammarAccess.getCancelTimerStatementAccess().getCancelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CancelTimerStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelTimerStatementAccess().getTimerIdAssignment_1()); }
	(rule__CancelTimerStatement__TimerIdAssignment_1)
	{ after(grammarAccess.getCancelTimerStatementAccess().getTimerIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__0__Impl
	rule__GenerateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGenerateKeyword_0()); }
	Generate
	{ after(grammarAccess.getGenerateStatementAccess().getGenerateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__1__Impl
	rule__GenerateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGroup_1()); }
	(rule__GenerateStatement__Group_1__0)?
	{ after(grammarAccess.getGenerateStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__2__Impl
	rule__GenerateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getEventAssignment_2()); }
	(rule__GenerateStatement__EventAssignment_2)
	{ after(grammarAccess.getGenerateStatementAccess().getEventAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__3__Impl
	rule__GenerateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getLeftParenthesisKeyword_3()); }
	LeftParenthesis
	{ after(grammarAccess.getGenerateStatementAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__4__Impl
	rule__GenerateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGroup_4()); }
	(rule__GenerateStatement__Group_4__0)?
	{ after(grammarAccess.getGenerateStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__5__Impl
	rule__GenerateStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getGenerateStatementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGroup_6()); }
	(rule__GenerateStatement__Group_6__0)?
	{ after(grammarAccess.getGenerateStatementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_1__0__Impl
	rule__GenerateStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getObjectAssignment_1_0()); }
	(rule__GenerateStatement__ObjectAssignment_1_0)
	{ after(grammarAccess.getGenerateStatementAccess().getObjectAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getFullStopKeyword_1_1()); }
	FullStop
	{ after(grammarAccess.getGenerateStatementAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_4__0__Impl
	rule__GenerateStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getArgumentsAssignment_4_0()); }
	(rule__GenerateStatement__ArgumentsAssignment_4_0)
	{ after(grammarAccess.getGenerateStatementAccess().getArgumentsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getGroup_4_1()); }
	(rule__GenerateStatement__Group_4_1__0)*
	{ after(grammarAccess.getGenerateStatementAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_4_1__0__Impl
	rule__GenerateStatement__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getCommaKeyword_4_1_0()); }
	Comma
	{ after(grammarAccess.getGenerateStatementAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getArgumentsAssignment_4_1_1()); }
	(rule__GenerateStatement__ArgumentsAssignment_4_1_1)
	{ after(grammarAccess.getGenerateStatementAccess().getArgumentsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenerateStatement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_6__0__Impl
	rule__GenerateStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getToKeyword_6_0()); }
	To
	{ after(grammarAccess.getGenerateStatementAccess().getToKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenerateStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenerateStatementAccess().getToAssignment_6_1()); }
	(rule__GenerateStatement__ToAssignment_6_1)
	{ after(grammarAccess.getGenerateStatementAccess().getToAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
	(rule__IfStatement__ConditionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
	Then
	{ after(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getStatementsAssignment_3()); }
	(rule__IfStatement__StatementsAssignment_3)*
	{ after(grammarAccess.getIfStatementAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfsAssignment_4()); }
	(rule__IfStatement__ElseIfsAssignment_4)*
	{ after(grammarAccess.getIfStatementAccess().getElseIfsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseAssignment_5()); }
	(rule__IfStatement__ElseAssignment_5)?
	{ after(grammarAccess.getIfStatementAccess().getElseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
	rule__IfStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
	End
	{ after(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_7()); }
	(If)?
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsifBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__0__Impl
	rule__ElsifBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getElsifKeyword_0()); }
	Elsif
	{ after(grammarAccess.getElsifBlockAccess().getElsifKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__1__Impl
	rule__ElsifBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getConditionAssignment_1()); }
	(rule__ElsifBlock__ConditionAssignment_1)
	{ after(grammarAccess.getElsifBlockAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__2__Impl
	rule__ElsifBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getThenKeyword_2()); }
	Then
	{ after(grammarAccess.getElsifBlockAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElsifBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElsifBlockAccess().getStatementsAssignment_3()); }
	(rule__ElsifBlock__StatementsAssignment_3)*
	{ after(grammarAccess.getElsifBlockAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseBlock__Group__0__Impl
	rule__ElseBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseBlockAccess().getElseBlockAction_0()); }
	()
	{ after(grammarAccess.getElseBlockAccess().getElseBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseBlock__Group__1__Impl
	rule__ElseBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseBlockAccess().getElseKeyword_1()); }
	Else
	{ after(grammarAccess.getElseBlockAccess().getElseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseBlockAccess().getStatementsAssignment_2()); }
	(rule__ElseBlock__StatementsAssignment_2)*
	{ after(grammarAccess.getElseBlockAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	While
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_1()); }
	(rule__WhileStatement__ConditionAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLoopKeyword_2()); }
	Loop
	{ after(grammarAccess.getWhileStatementAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getStatementsAssignment_3()); }
	(rule__WhileStatement__StatementsAssignment_3)*
	{ after(grammarAccess.getWhileStatementAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getEndKeyword_4()); }
	End
	{ after(grammarAccess.getWhileStatementAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLoopKeyword_5()); }
	(Loop)?
	{ after(grammarAccess.getWhileStatementAccess().getLoopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }
	Case
	{ after(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getValueAssignment_1()); }
	(rule__CaseStatement__ValueAssignment_1)
	{ after(grammarAccess.getCaseStatementAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__2__Impl
	rule__CaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getCaseStatementAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__3__Impl
	rule__CaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getAlternativesAssignment_3()); }
	(rule__CaseStatement__AlternativesAssignment_3)*
	{ after(grammarAccess.getCaseStatementAccess().getAlternativesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__4__Impl
	rule__CaseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getDefaultAssignment_4()); }
	(rule__CaseStatement__DefaultAssignment_4)?
	{ after(grammarAccess.getCaseStatementAccess().getDefaultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__5__Impl
	rule__CaseStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getEndKeyword_5()); }
	End
	{ after(grammarAccess.getCaseStatementAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCaseKeyword_6()); }
	(Case)?
	{ after(grammarAccess.getCaseStatementAccess().getCaseKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__0__Impl
	rule__CaseAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getWhenKeyword_0()); }
	When
	{ after(grammarAccess.getCaseAlternativeAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__1__Impl
	rule__CaseAlternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getChoicesAssignment_1()); }
	(rule__CaseAlternative__ChoicesAssignment_1)
	{ after(grammarAccess.getCaseAlternativeAccess().getChoicesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__2__Impl
	rule__CaseAlternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getGroup_2()); }
	(rule__CaseAlternative__Group_2__0)*
	{ after(grammarAccess.getCaseAlternativeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__3__Impl
	rule__CaseAlternative__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getCaseAlternativeAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getStatementsAssignment_4()); }
	(rule__CaseAlternative__StatementsAssignment_4)*
	{ after(grammarAccess.getCaseAlternativeAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseAlternative__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group_2__0__Impl
	rule__CaseAlternative__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getVerticalLineKeyword_2_0()); }
	VerticalLine
	{ after(grammarAccess.getCaseAlternativeAccess().getVerticalLineKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseAlternative__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAlternativeAccess().getChoicesAssignment_2_1()); }
	(rule__CaseAlternative__ChoicesAssignment_2_1)
	{ after(grammarAccess.getCaseAlternativeAccess().getChoicesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseOthers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__0__Impl
	rule__CaseOthers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getCaseOthersAction_0()); }
	()
	{ after(grammarAccess.getCaseOthersAccess().getCaseOthersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__1__Impl
	rule__CaseOthers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getWhenKeyword_1()); }
	When
	{ after(grammarAccess.getCaseOthersAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__2__Impl
	rule__CaseOthers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getOthersKeyword_2()); }
	Others
	{ after(grammarAccess.getCaseOthersAccess().getOthersKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__3__Impl
	rule__CaseOthers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getCaseOthersAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseOthers__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseOthersAccess().getStatementsAssignment_4()); }
	(rule__CaseOthers__StatementsAssignment_4)*
	{ after(grammarAccess.getCaseOthersAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }
	For
	{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getVariableAssignment_1()); }
	(rule__ForStatement__VariableAssignment_1)
	{ after(grammarAccess.getForStatementAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getInKeyword_2()); }
	In
	{ after(grammarAccess.getForStatementAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getReverseAssignment_3()); }
	(rule__ForStatement__ReverseAssignment_3)?
	{ after(grammarAccess.getForStatementAccess().getReverseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getExpressionAssignment_4()); }
	(rule__ForStatement__ExpressionAssignment_4)
	{ after(grammarAccess.getForStatementAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopKeyword_5()); }
	Loop
	{ after(grammarAccess.getForStatementAccess().getLoopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getStatementsAssignment_6()); }
	(rule__ForStatement__StatementsAssignment_6)*
	{ after(grammarAccess.getForStatementAccess().getStatementsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getEndKeyword_7()); }
	End
	{ after(grammarAccess.getForStatementAccess().getEndKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopKeyword_8()); }
	(Loop)?
	{ after(grammarAccess.getForStatementAccess().getLoopKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlockStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__0__Impl
	rule__CodeBlockStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getDeclareKeyword_0()); }
	(Declare)?
	{ after(grammarAccess.getCodeBlockStatementAccess().getDeclareKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlockStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlockStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockStatementAccess().getCodeBlockParserRuleCall_1()); }
	ruleCodeBlock
	{ after(grammarAccess.getCodeBlockStatementAccess().getCodeBlockParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__0__Impl
	rule__CodeBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0()); }
	()
	{ after(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__1__Impl
	rule__CodeBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getVariablesAssignment_1()); }
	(rule__CodeBlock__VariablesAssignment_1)*
	{ after(grammarAccess.getCodeBlockAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__2__Impl
	rule__CodeBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getBeginKeyword_2()); }
	Begin
	{ after(grammarAccess.getCodeBlockAccess().getBeginKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__3__Impl
	rule__CodeBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getStatementsAssignment_3()); }
	(rule__CodeBlock__StatementsAssignment_3)*
	{ after(grammarAccess.getCodeBlockAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__4__Impl
	rule__CodeBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getGroup_4()); }
	(rule__CodeBlock__Group_4__0)?
	{ after(grammarAccess.getCodeBlockAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getEndKeyword_5()); }
	End
	{ after(grammarAccess.getCodeBlockAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_4__0__Impl
	rule__CodeBlock__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getExceptionKeyword_4_0()); }
	Exception
	{ after(grammarAccess.getCodeBlockAccess().getExceptionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_4__1__Impl
	rule__CodeBlock__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getExceptionHandlerAssignment_4_1()); }
	(rule__CodeBlock__ExceptionHandlerAssignment_4_1)*
	{ after(grammarAccess.getCodeBlockAccess().getExceptionHandlerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getDefaultHandlerAssignment_4_2()); }
	(rule__CodeBlock__DefaultHandlerAssignment_4_2)?
	{ after(grammarAccess.getCodeBlockAccess().getDefaultHandlerAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
	(rule__VariableDeclaration__NameAssignment_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getReadOnlyAssignment_2()); }
	(rule__VariableDeclaration__ReadOnlyAssignment_2)?
	{ after(grammarAccess.getVariableDeclarationAccess().getReadOnlyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_3()); }
	(rule__VariableDeclaration__TypeAssignment_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
	rule__VariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
	(rule__VariableDeclaration__Group_4__0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__5__Impl
	rule__VariableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getPragmaListParserRuleCall_6()); }
	rulePragmaList
	{ after(grammarAccess.getVariableDeclarationAccess().getPragmaListParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__0__Impl
	rule__VariableDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getColonEqualsSignKeyword_4_0()); }
	ColonEqualsSign
	{ after(grammarAccess.getVariableDeclarationAccess().getColonEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_4_1()); }
	(rule__VariableDeclaration__ExpressionAssignment_4_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionHandler__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__0__Impl
	rule__ExceptionHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getWhenKeyword_0()); }
	When
	{ after(grammarAccess.getExceptionHandlerAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__1__Impl
	rule__ExceptionHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getExceptionAssignment_1()); }
	(rule__ExceptionHandler__ExceptionAssignment_1)
	{ after(grammarAccess.getExceptionHandlerAccess().getExceptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__2__Impl
	rule__ExceptionHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getExceptionHandlerAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionHandler__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionHandlerAccess().getStatementsAssignment_3()); }
	(rule__ExceptionHandler__StatementsAssignment_3)*
	{ after(grammarAccess.getExceptionHandlerAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultExceptionHandler__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultExceptionHandler__Group__0__Impl
	rule__DefaultExceptionHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultExceptionHandlerAccess().getDefaultExceptionHandlerAction_0()); }
	()
	{ after(grammarAccess.getDefaultExceptionHandlerAccess().getDefaultExceptionHandlerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultExceptionHandler__Group__1__Impl
	rule__DefaultExceptionHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultExceptionHandlerAccess().getWhenKeyword_1()); }
	When
	{ after(grammarAccess.getDefaultExceptionHandlerAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultExceptionHandler__Group__2__Impl
	rule__DefaultExceptionHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultExceptionHandlerAccess().getOthersKeyword_2()); }
	Others
	{ after(grammarAccess.getDefaultExceptionHandlerAccess().getOthersKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultExceptionHandler__Group__3__Impl
	rule__DefaultExceptionHandler__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultExceptionHandlerAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getDefaultExceptionHandlerAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultExceptionHandler__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultExceptionHandlerAccess().getStatementsAssignment_4()); }
	(rule__DefaultExceptionHandler__StatementsAssignment_4)*
	{ after(grammarAccess.getDefaultExceptionHandlerAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group__0__Impl
	rule__FindLogicalOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getFindLogicalXorParserRuleCall_0()); }
	ruleFindLogicalXor
	{ after(grammarAccess.getFindLogicalOrAccess().getFindLogicalXorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getGroup_1()); }
	(rule__FindLogicalOr__Group_1__0)*
	{ after(grammarAccess.getFindLogicalOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group_1__0__Impl
	rule__FindLogicalOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getLogicalOrLhsAction_1_0()); }
	()
	{ after(grammarAccess.getFindLogicalOrAccess().getLogicalOrLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group_1__1__Impl
	rule__FindLogicalOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getOrKeyword_1_1()); }
	Or
	{ after(grammarAccess.getFindLogicalOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalOrAccess().getRhsAssignment_1_2()); }
	(rule__FindLogicalOr__RhsAssignment_1_2)
	{ after(grammarAccess.getFindLogicalOrAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalXor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group__0__Impl
	rule__FindLogicalXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getFindLogicalAndParserRuleCall_0()); }
	ruleFindLogicalAnd
	{ after(grammarAccess.getFindLogicalXorAccess().getFindLogicalAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getGroup_1()); }
	(rule__FindLogicalXor__Group_1__0)*
	{ after(grammarAccess.getFindLogicalXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalXor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group_1__0__Impl
	rule__FindLogicalXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getLogicalXorLhsAction_1_0()); }
	()
	{ after(grammarAccess.getFindLogicalXorAccess().getLogicalXorLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group_1__1__Impl
	rule__FindLogicalXor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getXorKeyword_1_1()); }
	Xor
	{ after(grammarAccess.getFindLogicalXorAccess().getXorKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalXor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalXorAccess().getRhsAssignment_1_2()); }
	(rule__FindLogicalXor__RhsAssignment_1_2)
	{ after(grammarAccess.getFindLogicalXorAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group__0__Impl
	rule__FindLogicalAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getFindPrimaryParserRuleCall_0()); }
	ruleFindPrimary
	{ after(grammarAccess.getFindLogicalAndAccess().getFindPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getGroup_1()); }
	(rule__FindLogicalAnd__Group_1__0)*
	{ after(grammarAccess.getFindLogicalAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindLogicalAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group_1__0__Impl
	rule__FindLogicalAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getLogicalAndLhsAction_1_0()); }
	()
	{ after(grammarAccess.getFindLogicalAndAccess().getLogicalAndLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group_1__1__Impl
	rule__FindLogicalAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getAndKeyword_1_1()); }
	And
	{ after(grammarAccess.getFindLogicalAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindLogicalAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindLogicalAndAccess().getRhsAssignment_1_2()); }
	(rule__FindLogicalAnd__RhsAssignment_1_2)
	{ after(grammarAccess.getFindLogicalAndAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindUnary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_0__0__Impl
	rule__FindUnary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getNotKeyword_0_0()); }
	Not
	{ after(grammarAccess.getFindUnaryAccess().getNotKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getFindUnaryParserRuleCall_0_1()); }
	ruleFindUnary
	{ after(grammarAccess.getFindUnaryAccess().getFindUnaryParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindUnary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__0__Impl
	rule__FindUnary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getLeftParenthesisKeyword_1_0()); }
	LeftParenthesis
	{ after(grammarAccess.getFindUnaryAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__1__Impl
	rule__FindUnary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getFindConditionParserRuleCall_1_1()); }
	ruleFindCondition
	{ after(grammarAccess.getFindUnaryAccess().getFindConditionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindUnary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindUnary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindUnaryAccess().getRightParenthesisKeyword_1_2()); }
	RightParenthesis
	{ after(grammarAccess.getFindUnaryAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindEquality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindEquality__Group__0__Impl
	rule__FindEquality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindEqualityAccess().getFindRelationExpParserRuleCall_0()); }
	ruleFindRelationExp
	{ after(grammarAccess.getFindEqualityAccess().getFindRelationExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindEquality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindEqualityAccess().getGroup_1()); }
	(rule__FindEquality__Group_1__0)?
	{ after(grammarAccess.getFindEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindEquality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindEquality__Group_1__0__Impl
	rule__FindEquality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindEqualityAccess().getEqualityLhsAction_1_0()); }
	()
	{ after(grammarAccess.getFindEqualityAccess().getEqualityLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindEquality__Group_1__1__Impl
	rule__FindEquality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindEqualityAccess().getOperatorAssignment_1_1()); }
	(rule__FindEquality__OperatorAssignment_1_1)
	{ after(grammarAccess.getFindEqualityAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindEquality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindEqualityAccess().getRhsAssignment_1_2()); }
	(rule__FindEquality__RhsAssignment_1_2)
	{ after(grammarAccess.getFindEqualityAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindRelationExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindRelationExp__Group__0__Impl
	rule__FindRelationExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindRelationExpAccess().getFindNameParserRuleCall_0()); }
	ruleFindName
	{ after(grammarAccess.getFindRelationExpAccess().getFindNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindRelationExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindRelationExpAccess().getGroup_1()); }
	(rule__FindRelationExp__Group_1__0)?
	{ after(grammarAccess.getFindRelationExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindRelationExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindRelationExp__Group_1__0__Impl
	rule__FindRelationExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindRelationExpAccess().getRelationalExpLhsAction_1_0()); }
	()
	{ after(grammarAccess.getFindRelationExpAccess().getRelationalExpLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindRelationExp__Group_1__1__Impl
	rule__FindRelationExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindRelationExpAccess().getOperatorAssignment_1_1()); }
	(rule__FindRelationExp__OperatorAssignment_1_1)
	{ after(grammarAccess.getFindRelationExpAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindRelationExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindRelationExpAccess().getRhsAssignment_1_2()); }
	(rule__FindRelationExp__RhsAssignment_1_2)
	{ after(grammarAccess.getFindRelationExpAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group__0__Impl
	rule__FindName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getFindReceiverAttributeParserRuleCall_0()); }
	ruleFindReceiverAttribute
	{ after(grammarAccess.getFindNameAccess().getFindReceiverAttributeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getAlternatives_1()); }
	(rule__FindName__Alternatives_1)*
	{ after(grammarAccess.getFindNameAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_0__0__Impl
	rule__FindName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getSimpleFeatureCallReceiverAction_1_0_0()); }
	()
	{ after(grammarAccess.getFindNameAccess().getSimpleFeatureCallReceiverAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_0__1__Impl
	rule__FindName__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getFullStopKeyword_1_0_1()); }
	FullStop
	{ after(grammarAccess.getFindNameAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getFeatureAssignment_1_0_2()); }
	(rule__FindName__FeatureAssignment_1_0_2)
	{ after(grammarAccess.getFindNameAccess().getFeatureAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindName__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__0__Impl
	rule__FindName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getIndexedExpressionReceiverAction_1_1_0()); }
	()
	{ after(grammarAccess.getFindNameAccess().getIndexedExpressionReceiverAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__1__Impl
	rule__FindName__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getLeftSquareBracketKeyword_1_1_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getFindNameAccess().getLeftSquareBracketKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__2__Impl
	rule__FindName__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getBracketsAssignment_1_1_2()); }
	(rule__FindName__BracketsAssignment_1_1_2)
	{ after(grammarAccess.getFindNameAccess().getBracketsAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindName__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindNameAccess().getRightSquareBracketKeyword_1_1_3()); }
	RightSquareBracket
	{ after(grammarAccess.getFindNameAccess().getRightSquareBracketKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamExpression__Group__0__Impl
	rule__StreamExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamExpressionAccess().getRangeExpressionParserRuleCall_0()); }
	ruleRangeExpression
	{ after(grammarAccess.getStreamExpressionAccess().getRangeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamExpressionAccess().getGroup_1()); }
	(rule__StreamExpression__Group_1__0)*
	{ after(grammarAccess.getStreamExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamExpression__Group_1__0__Impl
	rule__StreamExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamExpressionAccess().getStreamExpressionLhsAction_1_0()); }
	()
	{ after(grammarAccess.getStreamExpressionAccess().getStreamExpressionLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamExpression__Group_1__1__Impl
	rule__StreamExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__StreamExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getStreamExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamExpressionAccess().getRhsAssignment_1_2()); }
	(rule__StreamExpression__RhsAssignment_1_2)
	{ after(grammarAccess.getStreamExpressionAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__0__Impl
	rule__RangeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getLogicalOrParserRuleCall_0()); }
	ruleLogicalOr
	{ after(grammarAccess.getRangeExpressionAccess().getLogicalOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
	(rule__RangeExpression__Group_1__0)?
	{ after(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__0__Impl
	rule__RangeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRangeExpressionFromAction_1_0()); }
	()
	{ after(grammarAccess.getRangeExpressionAccess().getRangeExpressionFromAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__1__Impl
	rule__RangeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RangeExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRangeExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getToAssignment_1_2()); }
	(rule__RangeExpression__ToAssignment_1_2)
	{ after(grammarAccess.getRangeExpressionAccess().getToAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group__0__Impl
	rule__LogicalOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getLogicalXorParserRuleCall_0()); }
	ruleLogicalXor
	{ after(grammarAccess.getLogicalOrAccess().getLogicalXorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getGroup_1()); }
	(rule__LogicalOr__Group_1__0)*
	{ after(grammarAccess.getLogicalOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group_1__0__Impl
	rule__LogicalOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getLogicalOrLhsAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalOrAccess().getLogicalOrLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group_1__1__Impl
	rule__LogicalOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalOr__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalOrAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrAccess().getRhsAssignment_1_2()); }
	(rule__LogicalOr__RhsAssignment_1_2)
	{ after(grammarAccess.getLogicalOrAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalXor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group__0__Impl
	rule__LogicalXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getLogicalAndParserRuleCall_0()); }
	ruleLogicalAnd
	{ after(grammarAccess.getLogicalXorAccess().getLogicalAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getGroup_1()); }
	(rule__LogicalXor__Group_1__0)*
	{ after(grammarAccess.getLogicalXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalXor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group_1__0__Impl
	rule__LogicalXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getLogicalXorLhsAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalXorAccess().getLogicalXorLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group_1__1__Impl
	rule__LogicalXor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalXor__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalXorAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalXor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalXorAccess().getRhsAssignment_1_2()); }
	(rule__LogicalXor__RhsAssignment_1_2)
	{ after(grammarAccess.getLogicalXorAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group__0__Impl
	rule__LogicalAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getLogicalAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getGroup_1()); }
	(rule__LogicalAnd__Group_1__0)*
	{ after(grammarAccess.getLogicalAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group_1__0__Impl
	rule__LogicalAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getLogicalAndLhsAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalAndAccess().getLogicalAndLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group_1__1__Impl
	rule__LogicalAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalAnd__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalAndAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndAccess().getRhsAssignment_1_2()); }
	(rule__LogicalAnd__RhsAssignment_1_2)
	{ after(grammarAccess.getLogicalAndAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRelationalExpParserRuleCall_0()); }
	ruleRelationalExp
	{ after(grammarAccess.getEqualityAccess().getRelationalExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOperatorAssignment_1_1()); }
	(rule__Equality__OperatorAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRhsAssignment_1_2()); }
	(rule__Equality__RhsAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group__0__Impl
	rule__RelationalExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getAdditiveExpParserRuleCall_0()); }
	ruleAdditiveExp
	{ after(grammarAccess.getRelationalExpAccess().getAdditiveExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getGroup_1()); }
	(rule__RelationalExp__Group_1__0)*
	{ after(grammarAccess.getRelationalExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group_1__0__Impl
	rule__RelationalExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getRelationalExpLhsAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpAccess().getRelationalExpLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group_1__1__Impl
	rule__RelationalExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getOperatorAssignment_1_1()); }
	(rule__RelationalExp__OperatorAssignment_1_1)
	{ after(grammarAccess.getRelationalExpAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpAccess().getRhsAssignment_1_2()); }
	(rule__RelationalExp__RhsAssignment_1_2)
	{ after(grammarAccess.getRelationalExpAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group__0__Impl
	rule__AdditiveExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getMultExpParserRuleCall_0()); }
	ruleMultExp
	{ after(grammarAccess.getAdditiveExpAccess().getMultExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getGroup_1()); }
	(rule__AdditiveExp__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group_1__0__Impl
	rule__AdditiveExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getAdditiveExpLhsAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpAccess().getAdditiveExpLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group_1__1__Impl
	rule__AdditiveExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getOperatorAssignment_1_1()); }
	(rule__AdditiveExp__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpAccess().getRhsAssignment_1_2()); }
	(rule__AdditiveExp__RhsAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group__0__Impl
	rule__MultExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getUnaryExpParserRuleCall_0()); }
	ruleUnaryExp
	{ after(grammarAccess.getMultExpAccess().getUnaryExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getGroup_1()); }
	(rule__MultExp__Group_1__0)*
	{ after(grammarAccess.getMultExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group_1__0__Impl
	rule__MultExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getMultExpLhsAction_1_0()); }
	()
	{ after(grammarAccess.getMultExpAccess().getMultExpLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group_1__1__Impl
	rule__MultExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getOperatorAssignment_1_1()); }
	(rule__MultExp__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultExpAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpAccess().getRhsAssignment_1_2()); }
	(rule__MultExp__RhsAssignment_1_2)
	{ after(grammarAccess.getMultExpAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExp__Group_0__0__Impl
	rule__UnaryExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpAccess().getUnaryExpAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExpAccess().getUnaryExpAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExp__Group_0__1__Impl
	rule__UnaryExp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpAccess().getOperatorAssignment_0_1()); }
	(rule__UnaryExp__OperatorAssignment_0_1)
	{ after(grammarAccess.getUnaryExpAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExp__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpAccess().getOperandAssignment_0_2()); }
	(rule__UnaryExp__OperandAssignment_0_2)
	{ after(grammarAccess.getUnaryExpAccess().getOperandAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__0__Impl
	rule__LinkExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLinkExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLinkExpressionAccess().getLinkExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__1__Impl
	rule__LinkExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getTypeAssignment_1_1()); }
	(rule__LinkExpression__TypeAssignment_1_1)
	{ after(grammarAccess.getLinkExpressionAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__2__Impl
	rule__LinkExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLhsAssignment_1_2()); }
	(rule__LinkExpression__LhsAssignment_1_2)
	{ after(grammarAccess.getLinkExpressionAccess().getLhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__3__Impl
	rule__LinkExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getNavigationAssignment_1_3()); }
	(rule__LinkExpression__NavigationAssignment_1_3)
	{ after(grammarAccess.getLinkExpressionAccess().getNavigationAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getGroup_1_4()); }
	(rule__LinkExpression__Group_1_4__0)?
	{ after(grammarAccess.getLinkExpressionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1_4__0__Impl
	rule__LinkExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRhsAssignment_1_4_0()); }
	(rule__LinkExpression__RhsAssignment_1_4_0)
	{ after(grammarAccess.getLinkExpressionAccess().getRhsAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getGroup_1_4_1()); }
	(rule__LinkExpression__Group_1_4_1__0)?
	{ after(grammarAccess.getLinkExpressionAccess().getGroup_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1_4_1__0__Impl
	rule__LinkExpression__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getUsingKeyword_1_4_1_0()); }
	Using
	{ after(grammarAccess.getLinkExpressionAccess().getUsingKeyword_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getAssocAssignment_1_4_1_1()); }
	(rule__LinkExpression__AssocAssignment_1_4_1_1)
	{ after(grammarAccess.getLinkExpressionAccess().getAssocAssignment_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group__0__Impl
	rule__NavigateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getExtendedExpressionParserRuleCall_0()); }
	ruleExtendedExpression
	{ after(grammarAccess.getNavigateExpressionAccess().getExtendedExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1()); }
	(rule__NavigateExpression__Group_1__0)*
	{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1__0__Impl
	rule__NavigateExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getNavigateExpressionLhsAction_1_0()); }
	()
	{ after(grammarAccess.getNavigateExpressionAccess().getNavigateExpressionLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getAlternatives_1_1()); }
	(rule__NavigateExpression__Alternatives_1_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0__0__Impl
	rule__NavigateExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getNavigateExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0__1__Impl
	rule__NavigateExpression__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getNavigationAssignment_1_1_0_1()); }
	(rule__NavigateExpression__NavigationAssignment_1_1_0_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getNavigationAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_0_2()); }
	(rule__NavigateExpression__Group_1_1_0_2__0)?
	{ after(grammarAccess.getNavigateExpressionAccess().getGroup_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0_2__0__Impl
	rule__NavigateExpression__Group_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getLeftParenthesisKeyword_1_1_0_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getNavigateExpressionAccess().getLeftParenthesisKeyword_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0_2__1__Impl
	rule__NavigateExpression__Group_1_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getWhereAssignment_1_1_0_2_1()); }
	(rule__NavigateExpression__WhereAssignment_1_1_0_2_1)?
	{ after(grammarAccess.getNavigateExpressionAccess().getWhereAssignment_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getRightParenthesisKeyword_1_1_0_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getNavigateExpressionAccess().getRightParenthesisKeyword_1_1_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_1__0__Impl
	rule__NavigateExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getWithKeyword_1_1_1_0()); }
	With
	{ after(grammarAccess.getNavigateExpressionAccess().getWithKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_1__1__Impl
	rule__NavigateExpression__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getWithAssignment_1_1_1_1()); }
	(rule__NavigateExpression__WithAssignment_1_1_1_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getWithAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_1__2__Impl
	rule__NavigateExpression__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_1_2()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getNavigateExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getNavigationAssignment_1_1_1_3()); }
	(rule__NavigateExpression__NavigationAssignment_1_1_1_3)
	{ after(grammarAccess.getNavigateExpressionAccess().getNavigationAssignment_1_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_2__0__Impl
	rule__NavigateExpression__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getOrdered_byKeyword_1_1_2_0()); }
	Ordered_by
	{ after(grammarAccess.getNavigateExpressionAccess().getOrdered_byKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getOrderAssignment_1_1_2_1()); }
	(rule__NavigateExpression__OrderAssignment_1_1_2_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getOrderAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigateExpression__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_3__0__Impl
	rule__NavigateExpression__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getReverse_ordered_byKeyword_1_1_3_0()); }
	Reverse_ordered_by
	{ after(grammarAccess.getNavigateExpressionAccess().getReverse_ordered_byKeyword_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigateExpression__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigateExpressionAccess().getReverseOrderAssignment_1_1_3_1()); }
	(rule__NavigateExpression__ReverseOrderAssignment_1_1_3_1)
	{ after(grammarAccess.getNavigateExpressionAccess().getReverseOrderAssignment_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__0__Impl
	rule__SortOrder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getSortOrderAction_0()); }
	()
	{ after(grammarAccess.getSortOrderAccess().getSortOrderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__1__Impl
	rule__SortOrder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getSortOrderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__2__Impl
	rule__SortOrder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getGroup_2()); }
	(rule__SortOrder__Group_2__0)?
	{ after(grammarAccess.getSortOrderAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getSortOrderAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_2__0__Impl
	rule__SortOrder__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getComponentsAssignment_2_0()); }
	(rule__SortOrder__ComponentsAssignment_2_0)
	{ after(grammarAccess.getSortOrderAccess().getComponentsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getGroup_2_1()); }
	(rule__SortOrder__Group_2_1__0)*
	{ after(grammarAccess.getSortOrderAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrder__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_2_1__0__Impl
	rule__SortOrder__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getSortOrderAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrder__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderAccess().getComponentsAssignment_2_1_1()); }
	(rule__SortOrder__ComponentsAssignment_2_1_1)
	{ after(grammarAccess.getSortOrderAccess().getComponentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrderComponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderComponent__Group__0__Impl
	rule__SortOrderComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderComponentAccess().getReverseAssignment_0()); }
	(rule__SortOrderComponent__ReverseAssignment_0)?
	{ after(grammarAccess.getSortOrderComponentAccess().getReverseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderComponent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderComponentAccess().getFeatureAssignment_1()); }
	(rule__SortOrderComponent__FeatureAssignment_1)
	{ after(grammarAccess.getSortOrderComponentAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrderFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group__0__Impl
	rule__SortOrderFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getSortOrderFeatureAction_0()); }
	()
	{ after(grammarAccess.getSortOrderFeatureAccess().getSortOrderFeatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group__1__Impl
	rule__SortOrderFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAssignment_1()); }
	(rule__SortOrderFeature__FeatureAssignment_1)
	{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getGroup_2()); }
	(rule__SortOrderFeature__Group_2__0)*
	{ after(grammarAccess.getSortOrderFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortOrderFeature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group_2__0__Impl
	rule__SortOrderFeature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getSimpleFeatureCallReceiverAction_2_0()); }
	()
	{ after(grammarAccess.getSortOrderFeatureAccess().getSimpleFeatureCallReceiverAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group_2__1__Impl
	rule__SortOrderFeature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getFullStopKeyword_2_1()); }
	FullStop
	{ after(grammarAccess.getSortOrderFeatureAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortOrderFeature__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAssignment_2_2()); }
	(rule__SortOrderFeature__FeatureAssignment_2_2)
	{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__0__Impl
	rule__CreateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getCreateKeyword_0()); }
	Create
	{ after(grammarAccess.getCreateExpressionAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__1__Impl
	rule__CreateExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getUniqueAssignment_1()); }
	(rule__CreateExpression__UniqueAssignment_1)?
	{ after(grammarAccess.getCreateExpressionAccess().getUniqueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__2__Impl
	rule__CreateExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getObjectAssignment_2()); }
	(rule__CreateExpression__ObjectAssignment_2)
	{ after(grammarAccess.getCreateExpressionAccess().getObjectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__3__Impl
	rule__CreateExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getLeftParenthesisKeyword_3()); }
	LeftParenthesis
	{ after(grammarAccess.getCreateExpressionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__4__Impl
	rule__CreateExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getGroup_4()); }
	(rule__CreateExpression__Group_4__0)?
	{ after(grammarAccess.getCreateExpressionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getCreateExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group_4__0__Impl
	rule__CreateExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getArgumentsAssignment_4_0()); }
	(rule__CreateExpression__ArgumentsAssignment_4_0)
	{ after(grammarAccess.getCreateExpressionAccess().getArgumentsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getGroup_4_1()); }
	(rule__CreateExpression__Group_4_1__0)*
	{ after(grammarAccess.getCreateExpressionAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateExpression__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group_4_1__0__Impl
	rule__CreateExpression__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getCommaKeyword_4_1_0()); }
	Comma
	{ after(grammarAccess.getCreateExpressionAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateExpression__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateExpressionAccess().getArgumentsAssignment_4_1_1()); }
	(rule__CreateExpression__ArgumentsAssignment_4_1_1)
	{ after(grammarAccess.getCreateExpressionAccess().getArgumentsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgument__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__0__Impl
	rule__CreateArgument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getAttributeAssignment_0_0()); }
	(rule__CreateArgument__AttributeAssignment_0_0)
	{ after(grammarAccess.getCreateArgumentAccess().getAttributeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__1__Impl
	rule__CreateArgument__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getCreateArgumentAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getValueAssignment_0_2()); }
	(rule__CreateArgument__ValueAssignment_0_2)
	{ after(grammarAccess.getCreateArgumentAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateArgument__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__0__Impl
	rule__CreateArgument__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getCurrent_StateKeyword_1_0()); }
	Current_State
	{ after(grammarAccess.getCreateArgumentAccess().getCurrent_StateKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__1__Impl
	rule__CreateArgument__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getCreateArgumentAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateArgument__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateArgumentAccess().getCurrentStateAssignment_1_2()); }
	(rule__CreateArgument__CurrentStateAssignment_1_2)
	{ after(grammarAccess.getCreateArgumentAccess().getCurrentStateAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__0__Impl
	rule__FindExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getTypeAssignment_0()); }
	(rule__FindExpression__TypeAssignment_0)
	{ after(grammarAccess.getFindExpressionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__1__Impl
	rule__FindExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getExpressionAssignment_1()); }
	(rule__FindExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getFindExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__2__Impl
	rule__FindExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getFindExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__3__Impl
	rule__FindExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getWhereAssignment_3()); }
	(rule__FindExpression__WhereAssignment_3)?
	{ after(grammarAccess.getFindExpressionAccess().getWhereAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindExpressionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getFindExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
	(rule__PostfixExpression__Alternatives_1)*
	{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__0__Impl
	rule__PostfixExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getActionCallReceiverAction_1_0_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getActionCallReceiverAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__1__Impl
	rule__PostfixExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_0_1()); }
	(LeftParenthesis)
	{ after(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__2__Impl
	rule__PostfixExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_0_2()); }
	(rule__PostfixExpression__Group_1_0_2__0)?
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_0_3()); }
	RightParenthesis
	{ after(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0_2__0__Impl
	rule__PostfixExpression__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_0_2_0()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_0_2_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_0_2_1()); }
	(rule__PostfixExpression__Group_1_0_2_1__0)*
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0_2_1__0__Impl
	rule__PostfixExpression__Group_1_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_0_2_1_0()); }
	Comma
	{ after(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_0_2_1_1()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_0_2_1_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_1__0__Impl
	rule__PostfixExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getSimpleFeatureCallReceiverAction_1_1_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getSimpleFeatureCallReceiverAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_1__1__Impl
	rule__PostfixExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getFullStopKeyword_1_1_1()); }
	FullStop
	{ after(grammarAccess.getPostfixExpressionAccess().getFullStopKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getFeatureAssignment_1_1_2()); }
	(rule__PostfixExpression__FeatureAssignment_1_1_2)
	{ after(grammarAccess.getPostfixExpressionAccess().getFeatureAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__0__Impl
	rule__PostfixExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getTerminatorActionCallReceiverAction_1_2_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getTerminatorActionCallReceiverAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__1__Impl
	rule__PostfixExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getTildeGreaterThanSignKeyword_1_2_1()); }
	TildeGreaterThanSign
	{ after(grammarAccess.getPostfixExpressionAccess().getTildeGreaterThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__2__Impl
	rule__PostfixExpression__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAssignment_1_2_2()); }
	(rule__PostfixExpression__TerminatorActionAssignment_1_2_2)
	{ after(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__3__Impl
	rule__PostfixExpression__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_2_3()); }
	LeftParenthesis
	{ after(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__4__Impl
	rule__PostfixExpression__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_2_4()); }
	(rule__PostfixExpression__Group_1_2_4__0)?
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_2_5()); }
	RightParenthesis
	{ after(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_2_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2_4__0__Impl
	rule__PostfixExpression__Group_1_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_2_4_0()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_2_4_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_2_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_2_4_1()); }
	(rule__PostfixExpression__Group_1_2_4_1__0)*
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_2_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_2_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2_4_1__0__Impl
	rule__PostfixExpression__Group_1_2_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_2_4_1_0()); }
	Comma
	{ after(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_2_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_2_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_2_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_2_4_1_1()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_2_4_1_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_2_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__0__Impl
	rule__PostfixExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getIndexedExpressionReceiverAction_1_3_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getIndexedExpressionReceiverAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__1__Impl
	rule__PostfixExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLeftSquareBracketKeyword_1_3_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getPostfixExpressionAccess().getLeftSquareBracketKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__2__Impl
	rule__PostfixExpression__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getBracketsAssignment_1_3_2()); }
	(rule__PostfixExpression__BracketsAssignment_1_3_2)
	{ after(grammarAccess.getPostfixExpressionAccess().getBracketsAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRightSquareBracketKeyword_1_3_3()); }
	RightSquareBracket
	{ after(grammarAccess.getPostfixExpressionAccess().getRightSquareBracketKeyword_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__0__Impl
	rule__PostfixExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicCallReceiverAction_1_4_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicCallReceiverAction_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__1__Impl
	rule__PostfixExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getApostropheKeyword_1_4_1()); }
	Apostrophe
	{ after(grammarAccess.getPostfixExpressionAccess().getApostropheKeyword_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__2__Impl
	rule__PostfixExpression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicAssignment_1_4_2()); }
	(rule__PostfixExpression__CharacteristicAssignment_1_4_2)
	{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3()); }
	(rule__PostfixExpression__Group_1_4_3__0)?
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3__0__Impl
	rule__PostfixExpression__Group_1_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_4_3_0()); }
	(LeftParenthesis)
	{ after(grammarAccess.getPostfixExpressionAccess().getLeftParenthesisKeyword_1_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3__1__Impl
	rule__PostfixExpression__Group_1_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3_1()); }
	(rule__PostfixExpression__Group_1_4_3_1__0)?
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_4_3_2()); }
	RightParenthesis
	{ after(grammarAccess.getPostfixExpressionAccess().getRightParenthesisKeyword_1_4_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3_1__0__Impl
	rule__PostfixExpression__Group_1_4_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_4_3_1_0()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_4_3_1_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_4_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3_1_1()); }
	(rule__PostfixExpression__Group_1_4_3_1_1__0)*
	{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1_4_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1_4_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3_1_1__0__Impl
	rule__PostfixExpression__Group_1_4_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_4_3_1_1_0()); }
	Comma
	{ after(grammarAccess.getPostfixExpressionAccess().getCommaKeyword_1_4_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_1_4_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1_4_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_4_3_1_1_1()); }
	(rule__PostfixExpression__ArgumentsAssignment_1_4_3_1_1_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsAssignment_1_4_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoActionCallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group__0__Impl
	rule__PostfixNoActionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getPrimaryNoActionCallExpressionParserRuleCall_0()); }
	rulePrimaryNoActionCallExpression
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getPrimaryNoActionCallExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getAlternatives_1()); }
	(rule__PostfixNoActionCallExpression__Alternatives_1)*
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoActionCallExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_0__0__Impl
	rule__PostfixNoActionCallExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getSimpleFeatureCallReceiverAction_1_0_0()); }
	()
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getSimpleFeatureCallReceiverAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_0__1__Impl
	rule__PostfixNoActionCallExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getFullStopKeyword_1_0_1()); }
	FullStop
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAssignment_1_0_2()); }
	(rule__PostfixNoActionCallExpression__FeatureAssignment_1_0_2)
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoActionCallExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_1__0__Impl
	rule__PostfixNoActionCallExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getIndexedExpressionReceiverAction_1_1_0()); }
	()
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getIndexedExpressionReceiverAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_1__1__Impl
	rule__PostfixNoActionCallExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_1__2__Impl
	rule__PostfixNoActionCallExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getBracketsAssignment_1_1_2()); }
	(rule__PostfixNoActionCallExpression__BracketsAssignment_1_1_2)
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getBracketsAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }
	RightSquareBracket
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixNoActionCallExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_2__0__Impl
	rule__PostfixNoActionCallExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCallReceiverAction_1_2_0()); }
	()
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCallReceiverAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_2__1__Impl
	rule__PostfixNoActionCallExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getApostropheKeyword_1_2_1()); }
	Apostrophe
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getApostropheKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixNoActionCallExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicAssignment_1_2_2()); }
	(rule__PostfixNoActionCallExpression__CharacteristicAssignment_1_2_2)
	{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__0__Impl
	rule__ParenthesisedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getParenthesisedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__1__Impl
	rule__ParenthesisedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getParenthesisedExpressionAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__2__Impl
	rule__ParenthesisedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup_2()); }
	(rule__ParenthesisedExpression__Group_2__0)?
	{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getParenthesisedExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2__0__Impl
	rule__ParenthesisedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getStructureAggregateExpressionElementsAction_2_0()); }
	()
	{ after(grammarAccess.getParenthesisedExpressionAccess().getStructureAggregateExpressionElementsAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup_2_1()); }
		(rule__ParenthesisedExpression__Group_2_1__0)
		{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup_2_1()); }
	)
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getGroup_2_1()); }
		(rule__ParenthesisedExpression__Group_2_1__0)*
		{ after(grammarAccess.getParenthesisedExpressionAccess().getGroup_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExpression__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2_1__0__Impl
	rule__ParenthesisedExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getParenthesisedExpressionAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesisedExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisedExpressionAccess().getElementsAssignment_2_1_1()); }
	(rule__ParenthesisedExpression__ElementsAssignment_2_1_1)
	{ after(grammarAccess.getParenthesisedExpressionAccess().getElementsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_1__0__Impl
	rule__BooleanLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
	False
	{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
	()
	{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
	Null
	{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FlushLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlushLiteral__Group__0__Impl
	rule__FlushLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlushLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlushLiteralAccess().getFlushLiteralAction_0()); }
	()
	{ after(grammarAccess.getFlushLiteralAccess().getFlushLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlushLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlushLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlushLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlushLiteralAccess().getFlushKeyword_1()); }
	Flush
	{ after(grammarAccess.getFlushLiteralAccess().getFlushKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThisLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisLiteral__Group__0__Impl
	rule__ThisLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisLiteralAccess().getThisLiteralAction_0()); }
	()
	{ after(grammarAccess.getThisLiteralAccess().getThisLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisLiteralAccess().getThisKeyword_1()); }
	This
	{ after(grammarAccess.getThisLiteralAccess().getThisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsoleLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleLiteral__Group__0__Impl
	rule__ConsoleLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleLiteralAccess().getConsoleLiteralAction_0()); }
	()
	{ after(grammarAccess.getConsoleLiteralAccess().getConsoleLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleLiteralAccess().getConsoleKeyword_1()); }
	Console
	{ after(grammarAccess.getConsoleLiteralAccess().getConsoleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndlLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndlLiteral__Group__0__Impl
	rule__EndlLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndlLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndlLiteralAccess().getEndlLiteralAction_0()); }
	()
	{ after(grammarAccess.getEndlLiteralAccess().getEndlLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndlLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndlLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndlLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndlLiteralAccess().getEndlKeyword_1()); }
	Endl
	{ after(grammarAccess.getEndlLiteralAccess().getEndlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineNoLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineNoLiteral__Group__0__Impl
	rule__LineNoLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineNoLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineNoLiteralAccess().getLineNoLiteralAction_0()); }
	()
	{ after(grammarAccess.getLineNoLiteralAccess().getLineNoLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineNoLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineNoLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineNoLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineNoLiteralAccess().getLINEKeyword_1()); }
	LINE
	{ after(grammarAccess.getLineNoLiteralAccess().getLINEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileNameLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileNameLiteral__Group__0__Impl
	rule__FileNameLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameLiteralAccess().getFileNameLiteralAction_0()); }
	()
	{ after(grammarAccess.getFileNameLiteralAccess().getFileNameLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileNameLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameLiteralAccess().getFILEKeyword_1()); }
	FILE
	{ after(grammarAccess.getFileNameLiteralAccess().getFILEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaslModel__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaslModelAccess().getElementsAbstractTopLevelElementParserRuleCall_1_1_0()); }
		ruleAbstractTopLevelElement
		{ after(grammarAccess.getMaslModelAccess().getElementsAbstractTopLevelElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaList__PragmasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaListAccess().getPragmasPragmaParserRuleCall_0_0()); }
		rulePragma
		{ after(grammarAccess.getPragmaListAccess().getPragmasPragmaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__ValuesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaAccess().getValuesPragmaValueParserRuleCall_3_0_0()); }
		rulePragmaValue
		{ after(grammarAccess.getPragmaAccess().getValuesPragmaValueParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__ValuesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaAccess().getValuesPragmaValueParserRuleCall_3_1_1_0()); }
		rulePragmaValue
		{ after(grammarAccess.getPragmaAccess().getValuesPragmaValueParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaValue__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaValueAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPragmaValueAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaValueAccess().getValueLiteralParserRuleCall_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getPragmaValueAccess().getValueLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_0_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ModeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getModeParameterModeEnumRuleCall_2_0()); }
		ruleParameterMode
		{ after(grammarAccess.getParameterAccess().getModeParameterModeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeAbstractTypeReferenceParserRuleCall_3_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getParameterAccess().getTypeAbstractTypeReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectDefinition__DomainsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectDefinitionAccess().getDomainsDomainDefinitionParserRuleCall_3_0()); }
		ruleDomainDefinition
		{ after(grammarAccess.getProjectDefinitionAccess().getDomainsDomainDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__ObjectsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getObjectsObjectDeclarationParserRuleCall_3_0_0()); }
		ruleObjectDeclaration
		{ after(grammarAccess.getDomainDefinitionAccess().getObjectsObjectDeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__ServicesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getServicesDomainServiceDeclarationParserRuleCall_3_1_0()); }
		ruleDomainServiceDeclaration
		{ after(grammarAccess.getDomainDefinitionAccess().getServicesDomainServiceDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__TerminatorsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTerminatorsTerminatorDefinitionParserRuleCall_3_2_0()); }
		ruleTerminatorDefinition
		{ after(grammarAccess.getDomainDefinitionAccess().getTerminatorsTerminatorDefinitionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__RelationshipsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getRelationshipsRelationshipDefinitionParserRuleCall_3_3_0()); }
		ruleRelationshipDefinition
		{ after(grammarAccess.getDomainDefinitionAccess().getRelationshipsRelationshipDefinitionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__ObjectDefsAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getObjectDefsObjectDefinitionParserRuleCall_3_4_0()); }
		ruleObjectDefinition
		{ after(grammarAccess.getDomainDefinitionAccess().getObjectDefsObjectDefinitionParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__TypeForwardsAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTypeForwardsTypeForwardDeclarationParserRuleCall_3_5_0()); }
		ruleTypeForwardDeclaration
		{ after(grammarAccess.getDomainDefinitionAccess().getTypeForwardsTypeForwardDeclarationParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__TypesAssignment_3_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getTypesTypeDeclarationParserRuleCall_3_6_0()); }
		ruleTypeDeclaration
		{ after(grammarAccess.getDomainDefinitionAccess().getTypesTypeDeclarationParserRuleCall_3_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__ExceptionsAssignment_3_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getExceptionsExceptionDeclarationParserRuleCall_3_7_0()); }
		ruleExceptionDeclaration
		{ after(grammarAccess.getDomainDefinitionAccess().getExceptionsExceptionDeclarationParserRuleCall_3_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__TypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getTypesBuiltinTypeDeclarationParserRuleCall_3_0_0()); }
		ruleBuiltinTypeDeclaration
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getTypesBuiltinTypeDeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__ExceptionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getExceptionsExceptionDeclarationParserRuleCall_3_1_0()); }
		ruleExceptionDeclaration
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getExceptionsExceptionDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinLibraryDefinition__CharacteristicsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinLibraryDefinitionAccess().getCharacteristicsCharacteristicParserRuleCall_3_2_0()); }
		ruleCharacteristic
		{ after(grammarAccess.getBuiltinLibraryDefinitionAccess().getCharacteristicsCharacteristicParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__AnonymousAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAnonymousKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAnonymousKeyword_1_1_0()); }
			Anonymous
			{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAnonymousKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getAnonymousAnonymousKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeDeclaration__NameAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinTypeDeclarationAccess().getNameIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getBuiltinTypeDeclarationAccess().getNameIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__TypeParamsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getTypeParamsTypeParameterParserRuleCall_0_1_0()); }
		ruleTypeParameter
		{ after(grammarAccess.getCharacteristicAccess().getTypeParamsTypeParameterParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__TypeParamsAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getTypeParamsTypeParameterParserRuleCall_0_2_1_0()); }
		ruleTypeParameter
		{ after(grammarAccess.getCharacteristicAccess().getTypeParamsTypeParameterParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__ForValueAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getForValueLeftParenthesisKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicAccess().getForValueLeftParenthesisKeyword_1_0_0_0()); }
			LeftParenthesis
			{ after(grammarAccess.getCharacteristicAccess().getForValueLeftParenthesisKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getCharacteristicAccess().getForValueLeftParenthesisKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__ReceiverTypeAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getReceiverTypeAbstractTypeReferenceParserRuleCall_1_0_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getCharacteristicAccess().getReceiverTypeAbstractTypeReferenceParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__ReceiverTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getReceiverTypeAbstractTypeReferenceParserRuleCall_1_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getCharacteristicAccess().getReceiverTypeAbstractTypeReferenceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getNameCharacteristicIDParserRuleCall_3_0()); }
		ruleCharacteristicID
		{ after(grammarAccess.getCharacteristicAccess().getNameCharacteristicIDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__ReturnTypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getReturnTypeAbstractTypeReferenceWithRangeParserRuleCall_5_1_0()); }
		ruleAbstractTypeReferenceWithRange
		{ after(grammarAccess.getCharacteristicAccess().getReturnTypeAbstractTypeReferenceWithRangeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__EnumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeParameterAccess().getEnumEnumKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeParameterAccess().getEnumEnumKeyword_0_0()); }
			Enum
			{ after(grammarAccess.getTypeParameterAccess().getEnumEnumKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeParameterAccess().getEnumEnumKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getRangeTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeReference__ElementTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getRangeTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getExceptionDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getExceptionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__SubtypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
			Subtype
			{ after(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForwardDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeForwardDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeForwardDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__SubtypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTypeDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
			Subtype
			{ after(grammarAccess.getTypeDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTypeDeclarationAccess().getSubtypeSubtypeKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__DefinitionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getDefinitionAbstractTypeDefinitionParserRuleCall_4_0()); }
		ruleAbstractTypeDefinition
		{ after(grammarAccess.getTypeDeclarationAccess().getDefinitionAbstractTypeDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedTypeDefinition__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedTypeDefinitionAccess().getTypeNamedTypeReferenceParserRuleCall_0_0()); }
		ruleNamedTypeReference
		{ after(grammarAccess.getConstrainedTypeDefinitionAccess().getTypeNamedTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedTypeDefinition__ConstraintAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedTypeDefinitionAccess().getConstraintAbstractTypeConstraintParserRuleCall_1_0()); }
		ruleAbstractTypeConstraint
		{ after(grammarAccess.getConstrainedTypeDefinitionAccess().getConstraintAbstractTypeConstraintParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstraint__RangeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstraintAccess().getRangeExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRangeConstraintAccess().getRangeExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__DeltaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeltaConstraintAccess().getDeltaConstExpressionParserRuleCall_1_0()); }
		ruleConstExpression
		{ after(grammarAccess.getDeltaConstraintAccess().getDeltaConstExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaConstraint__ConstraintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeltaConstraintAccess().getConstraintRangeConstraintParserRuleCall_2_0()); }
		ruleRangeConstraint
		{ after(grammarAccess.getDeltaConstraintAccess().getConstraintRangeConstraintParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__DigitsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDigitsConstraintAccess().getDigitsConstExpressionParserRuleCall_1_0()); }
		ruleConstExpression
		{ after(grammarAccess.getDigitsConstraintAccess().getDigitsConstExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitsConstraint__ConstraintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDigitsConstraintAccess().getConstraintRangeConstraintParserRuleCall_2_0()); }
		ruleRangeConstraint
		{ after(grammarAccess.getDigitsConstraintAccess().getConstraintRangeConstraintParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDefinition__ComponentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureTypeDefinitionAccess().getComponentsStructureComponentDefinitionParserRuleCall_2_0()); }
		ruleStructureComponentDefinition
		{ after(grammarAccess.getStructureTypeDefinitionAccess().getComponentsStructureComponentDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureComponentDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStructureComponentDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureComponentDefinitionAccess().getTypeAbstractTypeReferenceParserRuleCall_2_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getStructureComponentDefinitionAccess().getTypeAbstractTypeReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureComponentDefinition__DefaultValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureComponentDefinitionAccess().getDefaultValueConstExpressionParserRuleCall_3_1_0()); }
		ruleConstExpression
		{ after(grammarAccess.getStructureComponentDefinitionAccess().getDefaultValueConstExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__EnumeratorsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsEnumeratorParserRuleCall_3_0_0()); }
		ruleEnumerator
		{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsEnumeratorParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationTypeDefinition__EnumeratorsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsEnumeratorParserRuleCall_3_1_1_0()); }
		ruleEnumerator
		{ after(grammarAccess.getEnumerationTypeDefinitionAccess().getEnumeratorsEnumeratorParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumeratorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getExpressionConstExpressionParserRuleCall_1_1_0()); }
		ruleConstExpression
		{ after(grammarAccess.getEnumeratorAccess().getExpressionConstExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__IndexTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getIndexTypeNamedTypeReferenceParserRuleCall_2_0()); }
		ruleNamedTypeReference
		{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getIndexTypeNamedTypeReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconstrainedArrayDefinition__ElementTypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconstrainedArrayDefinitionAccess().getElementTypeAbstractTypeReferenceParserRuleCall_7_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getUnconstrainedArrayDefinitionAccess().getElementTypeAbstractTypeReferenceParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getInstanceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceTypeReference__InstanceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceTypeReferenceAccess().getInstanceObjectDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getInstanceTypeReferenceAccess().getInstanceObjectDeclarationScopedNameParserRuleCall_3_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getInstanceTypeReferenceAccess().getInstanceObjectDeclarationScopedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getInstanceTypeReferenceAccess().getInstanceObjectDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getNamedTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedTypeReferenceAccess().getTypeTypeDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getNamedTypeReferenceAccess().getTypeTypeDeclarationScopedNameParserRuleCall_1_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getNamedTypeReferenceAccess().getTypeTypeDeclarationScopedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getNamedTypeReferenceAccess().getTypeTypeDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__UnconstrainedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedTypeDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedTypeDeclarationScopedNameParserRuleCall_0_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedTypeDeclarationScopedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getUnconstrainedTypeDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedArrayTypeReference__ConstraintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedArrayTypeReferenceAccess().getConstraintExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConstrainedArrayTypeReferenceAccess().getConstraintExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getSequenceTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTypeReferenceAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSequenceTypeReferenceAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTypeReference__ElementTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_4_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getSequenceTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getArrayTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__IndexTypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getIndexTypeRangeTypeReferenceParserRuleCall_3_0_0()); }
		ruleRangeTypeReference
		{ after(grammarAccess.getArrayTypeReferenceAccess().getIndexTypeRangeTypeReferenceParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayTypeReferenceAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeReference__ElementTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_6_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getArrayTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getSetTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getSetTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getSetTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTypeReference__ElementTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getSetTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__AnonymousAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		(
			{ before(grammarAccess.getBagTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
			Anonymous
			{ after(grammarAccess.getBagTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
		)
		{ after(grammarAccess.getBagTypeReferenceAccess().getAnonymousAnonymousKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTypeReference__ElementTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getBagTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__AnonymousAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAnonymousKeyword_1_0()); }
		(
			{ before(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAnonymousKeyword_1_0()); }
			Anonymous
			{ after(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAnonymousKeyword_1_0()); }
		)
		{ after(grammarAccess.getDictionaryTypeReferenceAccess().getAnonymousAnonymousKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__KeyTypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictionaryTypeReferenceAccess().getKeyTypeAbstractDictKeyTypeRefParserRuleCall_3_0_0()); }
		ruleAbstractDictKeyTypeRef
		{ after(grammarAccess.getDictionaryTypeReferenceAccess().getKeyTypeAbstractDictKeyTypeRefParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DictionaryTypeReference__ElementTypeAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDictionaryTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_2_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getDictionaryTypeReferenceAccess().getElementTypeAbstractTypeReferenceParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTerminatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorDefinition__ServicesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorDefinitionAccess().getServicesTerminatorServiceDeclarationParserRuleCall_3_0()); }
		ruleTerminatorServiceDeclaration
		{ after(grammarAccess.getTerminatorDefinitionAccess().getServicesTerminatorServiceDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDeclaration__ReturnTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_4_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getTerminatorServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__AttributesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getAttributesAttributeDefinitionParserRuleCall_3_0_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getObjectDefinitionAccess().getAttributesAttributeDefinitionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__IdentifiersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getIdentifiersIdentifierDefinitionParserRuleCall_3_1_0()); }
		ruleIdentifierDefinition
		{ after(grammarAccess.getObjectDefinitionAccess().getIdentifiersIdentifierDefinitionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__ServicesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getServicesObjectServiceDeclarationParserRuleCall_3_2_0()); }
		ruleObjectServiceDeclaration
		{ after(grammarAccess.getObjectDefinitionAccess().getServicesObjectServiceDeclarationParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__EventsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getEventsEventDefinitionParserRuleCall_3_3_0()); }
		ruleEventDefinition
		{ after(grammarAccess.getObjectDefinitionAccess().getEventsEventDefinitionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__StatesAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getStatesStateDeclarationParserRuleCall_3_4_0()); }
		ruleStateDeclaration
		{ after(grammarAccess.getObjectDefinitionAccess().getStatesStateDeclarationParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDefinition__TransitionsAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDefinitionAccess().getTransitionsTransitionTableParserRuleCall_3_5_0()); }
		ruleTransitionTable
		{ after(grammarAccess.getObjectDefinitionAccess().getTransitionsTransitionTableParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__PreferredAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getPreferredPreferredKeyword_2_0()); }
		(
			{ before(grammarAccess.getAttributeDefinitionAccess().getPreferredPreferredKeyword_2_0()); }
			Preferred
			{ after(grammarAccess.getAttributeDefinitionAccess().getPreferredPreferredKeyword_2_0()); }
		)
		{ after(grammarAccess.getAttributeDefinitionAccess().getPreferredPreferredKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__UniqueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getUniqueUniqueKeyword_3_0()); }
		(
			{ before(grammarAccess.getAttributeDefinitionAccess().getUniqueUniqueKeyword_3_0()); }
			Unique
			{ after(grammarAccess.getAttributeDefinitionAccess().getUniqueUniqueKeyword_3_0()); }
		)
		{ after(grammarAccess.getAttributeDefinitionAccess().getUniqueUniqueKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ReferentialsAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getReferentialsAttributeReferentialParserRuleCall_4_2_0_0()); }
		ruleAttributeReferential
		{ after(grammarAccess.getAttributeDefinitionAccess().getReferentialsAttributeReferentialParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ReferentialsAssignment_4_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getReferentialsAttributeReferentialParserRuleCall_4_2_1_1_0()); }
		ruleAttributeReferential
		{ after(grammarAccess.getAttributeDefinitionAccess().getReferentialsAttributeReferentialParserRuleCall_4_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getTypeAbstractTypeReferenceParserRuleCall_5_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getAttributeDefinitionAccess().getTypeAbstractTypeReferenceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__DefaultValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDefaultValueConstExpressionParserRuleCall_6_1_0()); }
		ruleConstExpression
		{ after(grammarAccess.getAttributeDefinitionAccess().getDefaultValueConstExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__RelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getRelationshipRelationshipDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getRelationshipRelationshipDefinitionScopedNameParserRuleCall_1_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getAttributeReferentialAccess().getRelationshipRelationshipDefinitionScopedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getRelationshipRelationshipDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__ObjectOrRoleAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleCrossReference_3_0_0_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleObjectOrRoleNameParserRuleCall_3_0_0_0_1()); }
			ruleObjectOrRoleName
			{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleObjectOrRoleNameParserRuleCall_3_0_0_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleCrossReference_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__AttributeAssignment_3_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_0_2_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_0_2_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__ObjectOrRoleAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleCrossReference_3_1_0_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleIDTerminalRuleCall_3_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleIDTerminalRuleCall_3_1_0_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getObjectOrRoleObjectOrRoleCrossReference_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__AttributeAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_1_2_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_1_2_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReferential__AttributeAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getAttributeReferentialAccess().getAttributeAttributeDefinitionCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__InstanceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getInstanceInstanceKeyword_1_0()); }
		(
			{ before(grammarAccess.getObjectServiceDeclarationAccess().getInstanceInstanceKeyword_1_0()); }
			Instance
			{ after(grammarAccess.getObjectServiceDeclarationAccess().getInstanceInstanceKeyword_1_0()); }
		)
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getInstanceInstanceKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__RelationshipAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipRelationshipDefinitionCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipRelationshipDefinitionIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipRelationshipDefinitionIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getRelationshipRelationshipDefinitionCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDeclaration__ReturnTypeAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_6_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getObjectServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__AttributesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDefinition__AttributesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionIDTerminalRuleCall_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionIDTerminalRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getIdentifierDefinitionAccess().getAttributesAttributeDefinitionCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDefinitionAccess().getTypeEventTypeEnumRuleCall_0_0()); }
		ruleEventType
		{ after(grammarAccess.getEventDefinitionAccess().getTypeEventTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEventDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDeclarationAccess().getTypeStateTypeSyntaxParserRuleCall_0_0()); }
		ruleStateTypeSyntax
		{ after(grammarAccess.getStateDeclarationAccess().getTypeStateTypeSyntaxParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionTableAccess().getTypeTransTableTypeEnumRuleCall_0_0()); }
		ruleTransTableType
		{ after(grammarAccess.getTransitionTableAccess().getTypeTransTableTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTable__RowsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionTableAccess().getRowsTransitionRowParserRuleCall_3_0()); }
		ruleTransitionRow
		{ after(grammarAccess.getTransitionTableAccess().getRowsTransitionRowParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__StartAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getStartStateDeclarationCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getTransitionRowAccess().getStartStateDeclarationIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionRowAccess().getStartStateDeclarationIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getTransitionRowAccess().getStartStateDeclarationCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__NonExistantAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getNonExistantAlternatives_0_1_0()); }
		(rule__TransitionRow__NonExistantAlternatives_0_1_0)
		{ after(grammarAccess.getTransitionRowAccess().getNonExistantAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__OptionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getOptionsTransitionOptionParserRuleCall_2_0_0()); }
		ruleTransitionOption
		{ after(grammarAccess.getTransitionRowAccess().getOptionsTransitionOptionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionRow__OptionsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionRowAccess().getOptionsTransitionOptionParserRuleCall_2_1_1_0()); }
		ruleTransitionOption
		{ after(grammarAccess.getTransitionRowAccess().getOptionsTransitionOptionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__EventObjectAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getEventObjectObjectDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getTransitionOptionAccess().getEventObjectObjectDefinitionIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionOptionAccess().getEventObjectObjectDefinitionIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getTransitionOptionAccess().getEventObjectObjectDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getEventEventDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTransitionOptionAccess().getEventEventDefinitionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionOptionAccess().getEventEventDefinitionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTransitionOptionAccess().getEventEventDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__EndStateAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getEndStateStateDeclarationCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getTransitionOptionAccess().getEndStateStateDeclarationIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionOptionAccess().getEndStateStateDeclarationIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getTransitionOptionAccess().getEndStateStateDeclarationCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__IgnoreAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getIgnoreIgnoreKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getTransitionOptionAccess().getIgnoreIgnoreKeyword_3_1_0()); }
			Ignore
			{ after(grammarAccess.getTransitionOptionAccess().getIgnoreIgnoreKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getTransitionOptionAccess().getIgnoreIgnoreKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionOption__CannotHappenAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionOptionAccess().getCannotHappenAlternatives_3_2_0()); }
		(rule__TransitionOption__CannotHappenAlternatives_3_2_0)
		{ after(grammarAccess.getTransitionOptionAccess().getCannotHappenAlternatives_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDeclaration__ReturnTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_4_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getDomainServiceDeclarationAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__ForwardsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getForwardsRelationshipEndParserRuleCall_2_0()); }
		ruleRelationshipEnd
		{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getForwardsRelationshipEndParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRelationshipDefinition__BackwardsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularRelationshipDefinitionAccess().getBackwardsRelationshipEndParserRuleCall_4_0()); }
		ruleRelationshipEnd
		{ after(grammarAccess.getRegularRelationshipDefinitionAccess().getBackwardsRelationshipEndParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__ForwardsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getForwardsRelationshipEndParserRuleCall_2_0()); }
		ruleRelationshipEnd
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getForwardsRelationshipEndParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__BackwardsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getBackwardsRelationshipEndParserRuleCall_4_0()); }
		ruleRelationshipEnd
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getBackwardsRelationshipEndParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__OneAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getOneOneKeyword_6_0()); }
		(
			{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getOneOneKeyword_6_0()); }
			One
			{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getOneOneKeyword_6_0()); }
		)
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getOneOneKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRelationshipDefinition__ObjectAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectObjectDeclarationCrossReference_7_0()); }
		(
			{ before(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getAssocRelationshipDefinitionAccess().getObjectObjectDeclarationCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getFromObjectDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationshipEndAccess().getFromObjectDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationshipEndAccess().getFromObjectDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationshipEndAccess().getFromObjectDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__ConditionalityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getConditionalityConditionalityEnumRuleCall_1_0()); }
		ruleConditionality
		{ after(grammarAccess.getRelationshipEndAccess().getConditionalityConditionalityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationshipEndAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__MultiplicityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getMultiplicityMultiplicityEnumRuleCall_3_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getRelationshipEndAccess().getMultiplicityMultiplicityEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipEnd__ToAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipEndAccess().getToObjectDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRelationshipEndAccess().getToObjectDeclarationIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationshipEndAccess().getToObjectDeclarationIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRelationshipEndAccess().getToObjectDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__SupertypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeObjectDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeObjectDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeObjectDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSupertypeObjectDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__SubtypesAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationCrossReference_5_0_0()); }
		(
			{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationIDTerminalRuleCall_5_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationIDTerminalRuleCall_5_0_0_1()); }
		)
		{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationCrossReference_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtypeRelationshipDefinition__SubtypesAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationCrossReference_5_1_1_0()); }
		(
			{ before(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationIDTerminalRuleCall_5_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationIDTerminalRuleCall_5_1_1_0_1()); }
		)
		{ after(grammarAccess.getSubtypeRelationshipDefinitionAccess().getSubtypesObjectDeclarationCrossReference_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__RelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getRelationshipRelationshipDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationshipNavigationAccess().getRelationshipRelationshipDefinitionScopedNameParserRuleCall_0_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getRelationshipNavigationAccess().getRelationshipRelationshipDefinitionScopedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationshipNavigationAccess().getRelationshipRelationshipDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__ObjectOrRoleAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleCrossReference_1_1_0_0()); }
		(
			{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleIDTerminalRuleCall_1_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleIDTerminalRuleCall_1_1_0_0_1()); }
		)
		{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleCrossReference_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipNavigation__ObjectOrRoleAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleCrossReference_1_1_1_0()); }
		(
			{ before(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleObjectOrRoleNameParserRuleCall_1_1_1_0_1()); }
			ruleObjectOrRoleName
			{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleObjectOrRoleNameParserRuleCall_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getRelationshipNavigationAccess().getObjectOrRoleObjectOrRoleCrossReference_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDomainServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDomainServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__ReturnTypeAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_6_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainServiceDefinition__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_8_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getDomainServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__InstanceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getInstanceInstanceKeyword_1_0()); }
		(
			{ before(grammarAccess.getObjectServiceDefinitionAccess().getInstanceInstanceKeyword_1_0()); }
			Instance
			{ after(grammarAccess.getObjectServiceDefinitionAccess().getInstanceInstanceKeyword_1_0()); }
		)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getInstanceInstanceKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__RelationshipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipRelationshipDefinitionCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipRelationshipDefinitionIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipRelationshipDefinitionIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getRelationshipRelationshipDefinitionCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__DomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getObjectServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__ObjectAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getObjectObjectDeclarationCrossReference_6_0()); }
		(
			{ before(grammarAccess.getObjectServiceDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectServiceDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getObjectObjectDeclarationCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__NameAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getNameIDTerminalRuleCall_8_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getNameIDTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__ReturnTypeAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_10_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectServiceDefinition__BodyAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_12_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getObjectServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__TerminatorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorTerminatorDefinitionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorTerminatorDefinitionIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorTerminatorDefinitionIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getTerminatorTerminatorDefinitionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getNameIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getNameIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__ReturnTypeAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_8_1_0()); }
		ruleAbstractTypeReference
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getReturnTypeAbstractTypeReferenceParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatorServiceDefinition__BodyAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminatorServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_10_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getTerminatorServiceDefinitionAccess().getBodyCodeBlockParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getTypeStateTypeSyntaxParserRuleCall_0_0()); }
		ruleStateTypeSyntax
		{ after(grammarAccess.getStateDefinitionAccess().getTypeStateTypeSyntaxParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStateDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateDefinitionAccess().getDomainDomainDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStateDefinitionAccess().getDomainDomainDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__ObjectAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getObjectObjectDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStateDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateDefinitionAccess().getObjectObjectDeclarationIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStateDefinitionAccess().getObjectObjectDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getNameIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getStateDefinitionAccess().getNameIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDefinition__BodyAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefinitionAccess().getBodyCodeBlockParserRuleCall_9_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getStateDefinitionAccess().getBodyCodeBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignStatementAccess().getRhsExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignStatementAccess().getRhsExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__ConditionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitStatementAccess().getConditionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExitStatementAccess().getConditionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getValueExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayStatement__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelayStatementAccess().getValueExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDelayStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__ExceptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseStatementAccess().getExceptionExceptionDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRaiseStatementAccess().getExceptionExceptionDeclarationScopedNameParserRuleCall_1_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getRaiseStatementAccess().getExceptionExceptionDeclarationScopedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRaiseStatementAccess().getExceptionExceptionDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseStatement__ArgumentAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseStatementAccess().getArgumentExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRaiseStatementAccess().getArgumentExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getValueExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EraseStatement__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEraseStatementAccess().getValueExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEraseStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__TimerIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getTimerIdExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getScheduleStatementAccess().getTimerIdExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__GenerateStatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getGenerateStatementGenerateStatementParserRuleCall_2_0()); }
		ruleGenerateStatement
		{ after(grammarAccess.getScheduleStatementAccess().getGenerateStatementGenerateStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getTypeScheduleTypeEnumRuleCall_3_0()); }
		ruleScheduleType
		{ after(grammarAccess.getScheduleStatementAccess().getTypeScheduleTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__TimeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getTimeExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getScheduleStatementAccess().getTimeExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleStatement__PeriodAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleStatementAccess().getPeriodExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getScheduleStatementAccess().getPeriodExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CancelTimerStatement__TimerIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCancelTimerStatementAccess().getTimerIdExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCancelTimerStatementAccess().getTimerIdExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__ObjectAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getObjectObjectDeclarationCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getGenerateStatementAccess().getObjectObjectDeclarationScopedNameParserRuleCall_1_0_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getGenerateStatementAccess().getObjectObjectDeclarationScopedNameParserRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getGenerateStatementAccess().getObjectObjectDeclarationCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__EventAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getEventEventDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGenerateStatementAccess().getEventEventDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGenerateStatementAccess().getEventEventDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGenerateStatementAccess().getEventEventDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__ArgumentsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getArgumentsExpressionParserRuleCall_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getGenerateStatementAccess().getArgumentsExpressionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__ArgumentsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getArgumentsExpressionParserRuleCall_4_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGenerateStatementAccess().getArgumentsExpressionParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenerateStatement__ToAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenerateStatementAccess().getToExpressionParserRuleCall_6_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGenerateStatementAccess().getToExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfsElsifBlockParserRuleCall_4_0()); }
		ruleElsifBlock
		{ after(grammarAccess.getIfStatementAccess().getElseIfsElsifBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseElseBlockParserRuleCall_5_0()); }
		ruleElseBlock
		{ after(grammarAccess.getIfStatementAccess().getElseElseBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElsifBlockAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getElsifBlockAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsifBlock__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElsifBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getElsifBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseBlock__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getElseBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getValueExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__AlternativesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getAlternativesCaseAlternativeParserRuleCall_3_0()); }
		ruleCaseAlternative
		{ after(grammarAccess.getCaseStatementAccess().getAlternativesCaseAlternativeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__DefaultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getDefaultCaseOthersParserRuleCall_4_0()); }
		ruleCaseOthers
		{ after(grammarAccess.getCaseStatementAccess().getDefaultCaseOthersParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__ChoicesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getChoicesExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseAlternativeAccess().getChoicesExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__ChoicesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getChoicesExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseAlternativeAccess().getChoicesExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseAlternative__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAlternativeAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getCaseAlternativeAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseOthers__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseOthersAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getCaseOthersAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getVariableLoopVariableParserRuleCall_1_0()); }
		ruleLoopVariable
		{ after(grammarAccess.getForStatementAccess().getVariableLoopVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ReverseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getReverseReverseKeyword_3_0()); }
		(
			{ before(grammarAccess.getForStatementAccess().getReverseReverseKeyword_3_0()); }
			Reverse
			{ after(grammarAccess.getForStatementAccess().getReverseReverseKeyword_3_0()); }
		)
		{ after(grammarAccess.getForStatementAccess().getReverseReverseKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StatementsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getStatementsStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getForStatementAccess().getStatementsStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getLoopVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getCodeBlockAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getCodeBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__ExceptionHandlerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getExceptionHandlerExceptionHandlerParserRuleCall_4_1_0()); }
		ruleExceptionHandler
		{ after(grammarAccess.getCodeBlockAccess().getExceptionHandlerExceptionHandlerParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__DefaultHandlerAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getDefaultHandlerDefaultExceptionHandlerParserRuleCall_4_2_0()); }
		ruleDefaultExceptionHandler
		{ after(grammarAccess.getCodeBlockAccess().getDefaultHandlerDefaultExceptionHandlerParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ReadOnlyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getReadOnlyReadonlyKeyword_2_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getReadOnlyReadonlyKeyword_2_0()); }
			Readonly
			{ after(grammarAccess.getVariableDeclarationAccess().getReadOnlyReadonlyKeyword_2_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getReadOnlyReadonlyKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeAbstractTypeReferenceWithCAParserRuleCall_3_0()); }
		ruleAbstractTypeReferenceWithCA
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeAbstractTypeReferenceWithCAParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__ExceptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionHandlerAccess().getExceptionExceptionDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExceptionHandlerAccess().getExceptionExceptionDeclarationScopedNameParserRuleCall_1_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getExceptionHandlerAccess().getExceptionExceptionDeclarationScopedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExceptionHandlerAccess().getExceptionExceptionDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionHandler__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionHandlerAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getExceptionHandlerAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultExceptionHandler__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultExceptionHandlerAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getDefaultExceptionHandlerAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalOr__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalOrAccess().getRhsFindLogicalXorParserRuleCall_1_2_0()); }
		ruleFindLogicalXor
		{ after(grammarAccess.getFindLogicalOrAccess().getRhsFindLogicalXorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalXor__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalXorAccess().getRhsFindLogicalAndParserRuleCall_1_2_0()); }
		ruleFindLogicalAnd
		{ after(grammarAccess.getFindLogicalXorAccess().getRhsFindLogicalAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindLogicalAnd__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindLogicalAndAccess().getRhsFindPrimaryParserRuleCall_1_2_0()); }
		ruleFindPrimary
		{ after(grammarAccess.getFindLogicalAndAccess().getRhsFindPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindEqualityAccess().getOperatorAlternatives_1_1_0()); }
		(rule__FindEquality__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getFindEqualityAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindEquality__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindEqualityAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
		ruleAdditiveExp
		{ after(grammarAccess.getFindEqualityAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindRelationExpAccess().getOperatorAlternatives_1_1_0()); }
		(rule__FindRelationExp__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getFindRelationExpAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindRelationExp__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindRelationExpAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
		ruleAdditiveExp
		{ after(grammarAccess.getFindRelationExpAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__FeatureAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getFeatureAbstractFeatureCrossReference_1_0_2_0()); }
		(
			{ before(grammarAccess.getFindNameAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFindNameAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_2_0_1()); }
		)
		{ after(grammarAccess.getFindNameAccess().getFeatureAbstractFeatureCrossReference_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindName__BracketsAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindNameAccess().getBracketsExpressionParserRuleCall_1_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFindNameAccess().getBracketsExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindReceiverAttribute__FeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindReceiverAttributeAccess().getFeatureAttributeDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getFindReceiverAttributeAccess().getFeatureAttributeDefinitionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFindReceiverAttributeAccess().getFeatureAttributeDefinitionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFindReceiverAttributeAccess().getFeatureAttributeDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamExpressionAccess().getOperatorStreamOperatorParserRuleCall_1_1_0()); }
		ruleStreamOperator
		{ after(grammarAccess.getStreamExpressionAccess().getOperatorStreamOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamExpression__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamExpressionAccess().getRhsRangeExpressionParserRuleCall_1_2_0()); }
		ruleRangeExpression
		{ after(grammarAccess.getStreamExpressionAccess().getRhsRangeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
			FullStopFullStop
			{ after(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__ToAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getToLogicalOrParserRuleCall_1_2_0()); }
		ruleLogicalOr
		{ after(grammarAccess.getRangeExpressionAccess().getToLogicalOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrAccess().getOperatorOrKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getLogicalOrAccess().getOperatorOrKeyword_1_1_0()); }
			Or
			{ after(grammarAccess.getLogicalOrAccess().getOperatorOrKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getLogicalOrAccess().getOperatorOrKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrAccess().getRhsLogicalXorParserRuleCall_1_2_0()); }
		ruleLogicalXor
		{ after(grammarAccess.getLogicalOrAccess().getRhsLogicalXorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalXorAccess().getOperatorXorKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getLogicalXorAccess().getOperatorXorKeyword_1_1_0()); }
			Xor
			{ after(grammarAccess.getLogicalXorAccess().getOperatorXorKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getLogicalXorAccess().getOperatorXorKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalXor__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalXorAccess().getRhsLogicalAndParserRuleCall_1_2_0()); }
		ruleLogicalAnd
		{ after(grammarAccess.getLogicalXorAccess().getRhsLogicalAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndAccess().getOperatorAndKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getLogicalAndAccess().getOperatorAndKeyword_1_1_0()); }
			And
			{ after(grammarAccess.getLogicalAndAccess().getOperatorAndKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getLogicalAndAccess().getOperatorAndKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getLogicalAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Equality__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRhsRelationalExpParserRuleCall_1_2_0()); }
		ruleRelationalExp
		{ after(grammarAccess.getEqualityAccess().getRhsRelationalExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getOperatorAlternatives_1_1_0()); }
		(rule__RelationalExp__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getRelationalExpAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExp__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
		ruleAdditiveExp
		{ after(grammarAccess.getRelationalExpAccess().getRhsAdditiveExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getOperatorAlternatives_1_1_0()); }
		(rule__AdditiveExp__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAdditiveExpAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExp__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpAccess().getRhsMultExpParserRuleCall_1_2_0()); }
		ruleMultExp
		{ after(grammarAccess.getAdditiveExpAccess().getRhsMultExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getOperatorAlternatives_1_1_0()); }
		(rule__MultExp__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getMultExpAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpAccess().getRhsUnaryExpParserRuleCall_1_2_0()); }
		ruleUnaryExp
		{ after(grammarAccess.getMultExpAccess().getRhsUnaryExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExp__OperandAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpAccess().getOperandUnaryExpParserRuleCall_0_2_0()); }
		ruleUnaryExp
		{ after(grammarAccess.getUnaryExpAccess().getOperandUnaryExpParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getTypeLinkTypeEnumRuleCall_1_1_0()); }
		ruleLinkType
		{ after(grammarAccess.getLinkExpressionAccess().getTypeLinkTypeEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__LhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getLhsNavigateExpressionParserRuleCall_1_2_0()); }
		ruleNavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getLhsNavigateExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__NavigationAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_3_0()); }
		ruleRelationshipNavigation
		{ after(grammarAccess.getLinkExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__RhsAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getRhsNavigateExpressionParserRuleCall_1_4_0_0()); }
		ruleNavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getRhsNavigateExpressionParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__AssocAssignment_1_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAssocNavigateExpressionParserRuleCall_1_4_1_1_0()); }
		ruleNavigateExpression
		{ after(grammarAccess.getLinkExpressionAccess().getAssocNavigateExpressionParserRuleCall_1_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__NavigationAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_1_0_1_0()); }
		ruleRelationshipNavigation
		{ after(grammarAccess.getNavigateExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__WhereAssignment_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getWhereFindConditionParserRuleCall_1_1_0_2_1_0()); }
		ruleFindCondition
		{ after(grammarAccess.getNavigateExpressionAccess().getWhereFindConditionParserRuleCall_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__WithAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getWithExtendedExpressionParserRuleCall_1_1_1_1_0()); }
		ruleExtendedExpression
		{ after(grammarAccess.getNavigateExpressionAccess().getWithExtendedExpressionParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__NavigationAssignment_1_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_1_1_3_0()); }
		ruleRelationshipNavigation
		{ after(grammarAccess.getNavigateExpressionAccess().getNavigationRelationshipNavigationParserRuleCall_1_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__OrderAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getOrderSortOrderParserRuleCall_1_1_2_1_0()); }
		ruleSortOrder
		{ after(grammarAccess.getNavigateExpressionAccess().getOrderSortOrderParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigateExpression__ReverseOrderAssignment_1_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigateExpressionAccess().getReverseOrderSortOrderParserRuleCall_1_1_3_1_0()); }
		ruleSortOrder
		{ after(grammarAccess.getNavigateExpressionAccess().getReverseOrderSortOrderParserRuleCall_1_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__ComponentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderAccess().getComponentsSortOrderComponentParserRuleCall_2_0_0()); }
		ruleSortOrderComponent
		{ after(grammarAccess.getSortOrderAccess().getComponentsSortOrderComponentParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrder__ComponentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderAccess().getComponentsSortOrderComponentParserRuleCall_2_1_1_0()); }
		ruleSortOrderComponent
		{ after(grammarAccess.getSortOrderAccess().getComponentsSortOrderComponentParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__ReverseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderComponentAccess().getReverseReverseKeyword_0_0()); }
		(
			{ before(grammarAccess.getSortOrderComponentAccess().getReverseReverseKeyword_0_0()); }
			Reverse
			{ after(grammarAccess.getSortOrderComponentAccess().getReverseReverseKeyword_0_0()); }
		)
		{ after(grammarAccess.getSortOrderComponentAccess().getReverseReverseKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderComponent__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderComponentAccess().getFeatureSortOrderFeatureParserRuleCall_1_0()); }
		ruleSortOrderFeature
		{ after(grammarAccess.getSortOrderComponentAccess().getFeatureSortOrderFeatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortOrderFeature__FeatureAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getSortOrderFeatureAccess().getFeatureAbstractFeatureCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__UniqueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getUniqueUniqueKeyword_1_0()); }
		(
			{ before(grammarAccess.getCreateExpressionAccess().getUniqueUniqueKeyword_1_0()); }
			Unique
			{ after(grammarAccess.getCreateExpressionAccess().getUniqueUniqueKeyword_1_0()); }
		)
		{ after(grammarAccess.getCreateExpressionAccess().getUniqueUniqueKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__ObjectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getObjectObjectDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCreateExpressionAccess().getObjectObjectDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateExpressionAccess().getObjectObjectDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCreateExpressionAccess().getObjectObjectDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__ArgumentsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getArgumentsCreateArgumentParserRuleCall_4_0_0()); }
		ruleCreateArgument
		{ after(grammarAccess.getCreateExpressionAccess().getArgumentsCreateArgumentParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateExpression__ArgumentsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateExpressionAccess().getArgumentsCreateArgumentParserRuleCall_4_1_1_0()); }
		ruleCreateArgument
		{ after(grammarAccess.getCreateExpressionAccess().getArgumentsCreateArgumentParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__AttributeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getAttributeAttributeDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getCreateArgumentAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateArgumentAccess().getAttributeAttributeDefinitionIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getCreateArgumentAccess().getAttributeAttributeDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getValueExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getCreateArgumentAccess().getValueExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateArgument__CurrentStateAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateArgumentAccess().getCurrentStateStateDeclarationCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getCreateArgumentAccess().getCurrentStateStateDeclarationIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateArgumentAccess().getCurrentStateStateDeclarationIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getCreateArgumentAccess().getCurrentStateStateDeclarationCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindExpressionAccess().getTypeFindTypeEnumRuleCall_0_0()); }
		ruleFindType
		{ after(grammarAccess.getFindExpressionAccess().getTypeFindTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindExpressionAccess().getExpressionPostfixNoActionCallExpressionParserRuleCall_1_0()); }
		rulePostfixNoActionCallExpression
		{ after(grammarAccess.getFindExpressionAccess().getExpressionPostfixNoActionCallExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindExpression__WhereAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindExpressionAccess().getWhereFindConditionParserRuleCall_3_0()); }
		ruleFindCondition
		{ after(grammarAccess.getFindExpressionAccess().getWhereFindConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_0_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_0_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__FeatureAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getFeatureAbstractFeatureCrossReference_1_1_2_0()); }
		(
			{ before(grammarAccess.getPostfixExpressionAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPostfixExpressionAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_1_2_0_1()); }
		)
		{ after(grammarAccess.getPostfixExpressionAccess().getFeatureAbstractFeatureCrossReference_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__TerminatorActionAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAbstractFeatureCrossReference_1_2_2_0()); }
		(
			{ before(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAbstractFeatureIDTerminalRuleCall_1_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAbstractFeatureIDTerminalRuleCall_1_2_2_0_1()); }
		)
		{ after(grammarAccess.getPostfixExpressionAccess().getTerminatorActionAbstractFeatureCrossReference_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_2_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_2_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_2_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_2_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_2_4_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_2_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__BracketsAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getBracketsExpressionParserRuleCall_1_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getBracketsExpressionParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__CharacteristicAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicCharacteristicCrossReference_1_4_2_0()); }
		(
			{ before(grammarAccess.getPostfixExpressionAccess().getCharacteristicCharacteristicCharacteristicIDParserRuleCall_1_4_2_0_1()); }
			ruleCharacteristicID
			{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicCharacteristicCharacteristicIDParserRuleCall_1_4_2_0_1()); }
		)
		{ after(grammarAccess.getPostfixExpressionAccess().getCharacteristicCharacteristicCrossReference_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_4_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_4_3_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_4_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ArgumentsAssignment_1_4_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_4_3_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getArgumentsExpressionParserRuleCall_1_4_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__FeatureAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAbstractFeatureCrossReference_1_0_2_0()); }
		(
			{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAbstractFeatureIDTerminalRuleCall_1_0_2_0_1()); }
		)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getFeatureAbstractFeatureCrossReference_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__BracketsAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getBracketsExpressionParserRuleCall_1_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getBracketsExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixNoActionCallExpression__CharacteristicAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCharacteristicCrossReference_1_2_2_0()); }
		(
			{ before(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCharacteristicIDTerminalRuleCall_1_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCharacteristicIDTerminalRuleCall_1_2_2_0_1()); }
		)
		{ after(grammarAccess.getPostfixNoActionCallExpressionAccess().getCharacteristicCharacteristicCrossReference_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFeatureCall__FeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleFeatureCallAccess().getFeatureAbstractFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getSimpleFeatureCallAccess().getFeatureAbstractFeatureScopedNameParserRuleCall_0_1()); }
			ruleScopedName
			{ after(grammarAccess.getSimpleFeatureCallAccess().getFeatureAbstractFeatureScopedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSimpleFeatureCallAccess().getFeatureAbstractFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExpression__ElementsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisedExpressionAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParenthesisedExpressionAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_0()); }
		RULE_REAL
		{ after(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueINTEGERTerminalRuleCall_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getIntegerLiteralAccess().getValueINTEGERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacterLiteralAccess().getValueCHARTerminalRuleCall_0()); }
		RULE_CHAR
		{ after(grammarAccess.getCharacterLiteralAccess().getValueCHARTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationLiteralAccess().getValueDURATIONTerminalRuleCall_0()); }
		RULE_DURATION
		{ after(grammarAccess.getDurationLiteralAccess().getValueDURATIONTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimestampLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimestampLiteralAccess().getValueTIMESTAMPTerminalRuleCall_0()); }
		RULE_TIMESTAMP
		{ after(grammarAccess.getTimestampLiteralAccess().getValueTIMESTAMPTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_0_0()); }
			True
			{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
