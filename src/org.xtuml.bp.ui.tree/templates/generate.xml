<?xml version="1.0" encoding="UTF-8"?>
<!--

 File:      generate.xml

  ========================================================================
Licensed under the Apache License, Version 2.0 (the "License"); you may not 
use this file except in compliance with the License.  You may obtain a copy 
of the License at

      http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
License for the specific language governing permissions and limitations under
the License.
  ========================================================================

-->
<project name="**PROJECT**" default="all" basedir=".">
   
  <import file="${mcj_path}/common.xml"/>
   
  <target name="all"
          description="Generate all code for this project"
          depends="update_schema,java,format_java">
  </target>

  <target name="nb_all"
          description="Generate all code for this project"
          depends="update_schema,java">
  </target>

  <property name="plugins-home" value="${ant.home}/../.."/>
  <property name="chain_util_path" value="../org.xtuml.bp.core"/>
  <property name="sg.dep" value="ooa_schema.sql,schema_gen.arc" />
  <property name="schema.output_path" value="../org.xtuml.bp.ui.tree/sql" />
  <target name="update_schema"
          description="See if the schema file should be re-generated and do so">
  <ant antfile="../org.xtuml.bp.ui.tree/generate_schema.xml"
     target="all"
     dir="../org.xtuml.bp.ui.tree/">
  </ant>
  </target>

  <property name="java.output" value="src/**PROJECT_WITH_SLASH**/**PREFIX**ContentProvider.java" />

  <target name="java.depends" >
    <uptodate property="java.buildNotNeeded" targetfile="${java.output}">
       <srcfiles dir = "sql" includes = "UITree.pei.sql" />
       <srcfiles dir = "${schema.output_path}" includes = "UITree_schema.sql" />
       <srcfiles dir = "../org.xtuml.bp.core/sql" includes = "ooaofooa.sql" />
       <srcfiles dir = "arc"        includes = "BuildTree.arc,create_**VIEW_NAME**.inc" />
       <srcfiles dir = "../org.xtuml.bp.ui.tree/arc"        includes = "create_generic_adapters.inc,create_generic_label_provider.inc,create_generic_content_provider.inc,create_generic_filters_content_provider.inc" />
       <srcfiles dir = "${mcj_path}" includes = "ooa_schema.sql,arch_utils.inc"/>
    </uptodate>
  </target>

  <target name="java"
          depends="java.depends"
          description="Generate the tree explorer files"
          unless="java.buildNotNeeded" >
    <echo >Generating ${java.output} ...</echo>
  <exec vmlauncher="false" failonerror="true" executable="${xtumlmc_build}" >
        <env key="PTC_MC_ARC_DIR" value="${mcj_path}"/>
        <env key="CHAIN_UTIL_DIR" value="${chain_util_path}"/>
        <env key="XTUMLMC_HOME" value="${util_bin_dir}/../../" />
    <arg line="xtumlmc_gen_erate -nopersist
      -import ${mcj_path}/ooa_schema.sql
      -import ${schema.output_path}/UITree_schema.sql
      -import ../org.xtuml.bp.core/sql/ooaofooa.sql
      -import sql/UITree.pei.sql
      -arch arc/BuildTree.arc" />
  </exec>
    <delete file="____file.txt" />
    <delete file="key_lett.txt" />
    <delete file="rel_chain.txt" />
    <delete file="rel_num.txt" />
    <delete file="remainder.txt" />
  <!-- Need to touch the output file for the case where the input data
       changed, but the output didn't -->
  <touch file="${java.output}" />
  </target>

  <property name="cvs_java_files" value="**PLUGIN_NAME**.java,
          FilterSelectionAction.java, I**HELPCONTEXTIDS_PREFIX**HelpContextIds.java, **TREEVIEWER_PREFIX**TreeViewer.java,adapters/RootAdapter.java,adapters/DomainProxyAdapter.java" />

  <target name="format_java"
        description="Format the generated java source" >

    <taskdef name="PTCodeFormat" classname="PTCodeFormatterTask" >
        <classpath>
            <pathelement path="${mcj_path}/../org.xtuml.bp.core/tools/" />
            <fileset dir="${plugins-home}/plugins" casesensitive="yes">
                <include name="**/org.eclipse.text_*.jar" />
                <include name="**/org.eclipse.ui_*.jar" />
                <include name="**/org.eclipse.jdt.core_*.jar" />
                <include name="**/org.eclipse.core.runtime_*.jar" />
                <include name="**/org.eclipse.osgi_*.jar" />
                <include name="**/org.eclipse.core.resources_*.jar" />
                <include name="**/org.eclipse.equinox.common_*.jar" />
            </fileset>
        </classpath>
    </taskdef>
        <PTCodeFormat>
          <fileset dir="src/**PROJECT_WITH_SLASH**" excludes="${cvs_java_files}"
          includes="adapters/*.java,*.java" />
        </PTCodeFormat>
  </target>

  <!-- CLEAN TARGETS -->

  <target name="clean_all"
        description="Clean entire project"
        depends="clean_classes,clean_sql,clean_schema,clean_java" >

    <echo>Done cleaning for ${ant.project.name}</echo>

  </target>

  <target name="clean_sql"
        description="Remove the sql version of the UI Tree model" >
  <ant antfile="../org.xtuml.bp.ui.tree/generate_schema.xml"
     target="clean_sql"
     dir="../org.xtuml.bp.ui.tree/">
  </ant>
  </target>

  <target name="clean_schema"
          description="Remove the UI Tree schema file" >
  <ant antfile="../org.xtuml.bp.ui.tree/generate_schema.xml"
     target="clean_schema"
     dir="../org.xtuml.bp.ui.tree/">
  </ant>
  </target>

  <target name="clean_java"
        description="Remove the generated java sources." >

    <echo>Removing the generated java source files ...</echo>
    <delete verbose="true" >
      <fileset dir="src/**PROJECT_WITH_SLASH**" excludes="${cvs_java_files}, .cvsignore, adapters/.cvsignore" />
    </delete>

  </target>

  <target name="clean_classes"
          description="Remove all compiled class files." >

  <echo>Removing all compiled class files ...</echo>
  <delete verbose="true" dir="bin" />

  </target>

</project>
